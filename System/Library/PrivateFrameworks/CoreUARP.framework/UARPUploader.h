/*
                       * This header is generated by classdump-dyld 1.5
                       * on Friday, January 1, 2021 at 5:18:48 AM Mountain Standard Time
                       * Operating System: Version 14.3 (Build 18K561)
                       * Image Source: /System/Library/PrivateFrameworks/CoreUARP.framework/CoreUARP
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@protocol OS_os_log, OS_dispatch_queue, OS_dispatch_source;
#import <CoreUARP/CoreUARP-Structs.h>
@class NSObject, UARPController;

@interface UARPUploader : NSObject {

	uarpControllerObj* _coreController;
	uarpControllerCallbacksObj* _coreCallbacks;
	uarpControllerAppleObj* _appleController;
	uarpPlatformOptionsObj _options;
	NSObject*<OS_os_log> _xpcLog;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_source> _watchdogTimer;
	UARPController* _controller;

}

@property (__weak,readonly) UARPController * controller;              //@synthesize controller=_controller - In the implementation block
-(void)dealloc;
-(UARPController *)controller;
-(id)initWithController:(id)arg1 queue:(id)arg2 ;
-(void)cancelThrottleWatchdog;
-(void)checkSendThrottleData:(id)arg1 ;
-(unsigned)sendData:(id)arg1 uarpMsg:(id)arg2 ;
-(void)setThrottleWatchdog:(id)arg1 ;
-(unsigned)recvPersonalizationRequestForAccessory:(id)arg1 buffer:(AppleUARPPersonalizationRequired*)arg2 length:(unsigned)arg3 ;
-(unsigned)recvPersonalizationInfoResponseForAccessory:(id)arg1 buffer:(AppleUARPPersonalizationInfoResponse*)arg2 length:(unsigned)arg3 ;
-(unsigned)recvHeySiriNumModelsForAccessory:(id)arg1 buffer:(AppleUARPHeySiriNumModelsResponse*)arg2 length:(unsigned)arg3 ;
-(unsigned)recvHeySiriModelInfoForAccessory:(id)arg1 buffer:(AppleUARPHeySiriModelInfoResponse*)arg2 length:(unsigned)arg3 ;
-(unsigned)recvAppleAccessoryInfoForAccessory:(id)arg1 buffer:(UARPMsgAccessoryAppleInformationResponse*)arg2 length:(unsigned)arg3 ;
-(void)expireThrottleWatchdog:(id)arg1 ;
-(BOOL)addAccessory:(id)arg1 error:(id*)arg2 ;
-(BOOL)removeAccessory:(id)arg1 error:(id*)arg2 ;
-(unsigned)recvDataFromAccessory:(id)arg1 data:(id)arg2 error:(id*)arg3 ;
-(BOOL)offerAssetToAccessory:(id)arg1 asset:(id)arg2 error:(id*)arg3 ;
-(BOOL)offerDynamicAssetToAccessory:(id)arg1 asset:(id)arg2 error:(id*)arg3 ;
-(unsigned)requestBytesInRangeForAccessory:(id)arg1 asset:(id)arg2 bytes:(void*)arg3 length:(unsigned)arg4 offset:(unsigned)arg5 bytesCopied:(unsigned*)arg6 offsetUsed:(unsigned*)arg7 ;
-(unsigned)sendMsgToThrottleQueue:(id)arg1 uarpMsg:(id)arg2 needsResponse:(BOOL)arg3 ;
-(void)processingComplete:(id)arg1 asset:(id)arg2 status:(unsigned short)arg3 ;
-(BOOL)applyStagedAssetsForAccessory:(id)arg1 error:(id*)arg2 ;
-(BOOL)rescindStagedAssetsForAccessory:(id)arg1 error:(id*)arg2 ;
-(void)queryFirmwareUpdateResultForAccessory:(id)arg1 ;
-(long long)queryProperty:(unsigned long long)arg1 forAccessory:(id)arg2 ;
-(void)updateInfo:(id)arg1 type:(unsigned)arg2 length:(unsigned)arg3 value:(char*)arg4 ;
-(void)applyStagedAssetStatus:(id)arg1 status:(unsigned short)arg2 ;
-(BOOL)pauseAssetTransfersForAccessory:(id)arg1 ;
-(BOOL)resumeAssetTransfersForAccessory:(id)arg1 ;
-(BOOL)cancelFirmwareStagingForAccessory:(id)arg1 asset:(id)arg2 ;
-(unsigned)recvVendorSpecificMessage:(unsigned short)arg1 forAccessory:(id)arg2 oui1:(unsigned char)arg3 oui2:(unsigned char)arg4 oui3:(unsigned char)arg5 buffer:(char*)arg6 length:(unsigned)arg7 ;
-(unsigned)personalizeAsset:(uarpControllerAssetObj*)arg1 forAccessory:(id)arg2 ;
@end


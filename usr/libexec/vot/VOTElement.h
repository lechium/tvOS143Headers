//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "VOTElementAspect-Protocol.h"

@class AXUIElement, NSArray, NSString, VOTElementSnapshot, VOTElementUniqueIdentification;
@protocol UIElementProtocol;

@interface VOTElement : NSObject <NSCopying, VOTElementAspect>
{
    id <UIElementProtocol> _uiElement;	// 8 = 0x8
    VOTElement *_elementForGesturedTextInput;	// 16 = 0x10
    int _lastOrbSoundLevel;	// 24 = 0x18
    _Bool shouldSkipValidateElement;	// 28 = 0x1c
    _Bool _isFirstItemInDescriptionList;	// 29 = 0x1d
    _Bool _checkedRemoteParent;	// 30 = 0x1e
    _Bool _checkedImmediateRemoteParent;	// 31 = 0x1f
    unsigned int _cachedDisplayId;	// 32 = 0x20
    VOTElementUniqueIdentification *_uniqueIdentification;	// 40 = 0x28
    NSString *_supplementalBrailleDescription;	// 48 = 0x30
    long long _aspectMask;	// 56 = 0x38
    VOTElement *_cachedRemoteParent;	// 64 = 0x40
    VOTElement *_cachedImmediateRemoteParent;	// 72 = 0x48
    VOTElement *_cachedRemoteApplication;	// 80 = 0x50
}

+ (id)customPublicRotorDictionaryForRotorId:(id)arg1 startRange:(struct _NSRange)arg2 direction:(long long)arg3;	// IMP=0x0000000100022abc
+ (id)organizedActionsByCategory:(id)arg1;	// IMP=0x00000001000219ac
+ (id)defaultCustomActionCategory;	// IMP=0x0000000100021990
+ (void)setElementAtPointIntercept:(CDUnknownBlockType)arg1;	// IMP=0x00000001000188c4
+ (CDUnknownBlockType)elementAtPointIntercept;	// IMP=0x00000001000188a8
+ (id)_elementWithAXUIElementRef:(struct __AXUIElement *)arg1;	// IMP=0x0000000100018840
+ (id)_elementWithAXUIElementRef:(struct __AXUIElement *)arg1 cache:(id)arg2 identification:(id)arg3;	// IMP=0x0000000100018790
+ (id)elementWithUIElement:(id)arg1;	// IMP=0x0000000100018740
+ (void)resetSystemAppElement;	// IMP=0x00000001000186f8
+ (id)springBoardApplication;	// IMP=0x00000001000186b8
+ (id)systemAppApplication;	// IMP=0x00000001000184d8
+ (void)setSystemAppApplication:(id)arg1;	// IMP=0x00000001000184c8
+ (id)systemWideElement;	// IMP=0x0000000100018334
+ (void)initialize;	// IMP=0x00000001000182d0
- (void).cxx_destruct;	// IMP=0x0000000100028adc
@property(retain, nonatomic) VOTElement *cachedRemoteApplication; // @synthesize cachedRemoteApplication=_cachedRemoteApplication;
@property(nonatomic) _Bool checkedImmediateRemoteParent; // @synthesize checkedImmediateRemoteParent=_checkedImmediateRemoteParent;
@property(retain, nonatomic) VOTElement *cachedImmediateRemoteParent; // @synthesize cachedImmediateRemoteParent=_cachedImmediateRemoteParent;
@property(nonatomic) _Bool checkedRemoteParent; // @synthesize checkedRemoteParent=_checkedRemoteParent;
@property(retain, nonatomic) VOTElement *cachedRemoteParent; // @synthesize cachedRemoteParent=_cachedRemoteParent;
@property(nonatomic) unsigned int cachedDisplayId; // @synthesize cachedDisplayId=_cachedDisplayId;
@property(nonatomic) long long aspectMask; // @synthesize aspectMask=_aspectMask;
@property(nonatomic) _Bool isFirstItemInDescriptionList; // @synthesize isFirstItemInDescriptionList=_isFirstItemInDescriptionList;
@property(copy, nonatomic) NSString *supplementalBrailleDescription; // @synthesize supplementalBrailleDescription=_supplementalBrailleDescription;
@property(nonatomic) _Bool shouldSkipValidateElement; // @synthesize shouldSkipValidateElement;
- (void)showEditingHUD;	// IMP=0x0000000100028a18
@property(readonly, nonatomic) VOTElementSnapshot *snapshot;
- (long long)differenceAspectMask:(id)arg1;	// IMP=0x0000000100028718
- (void)resetAspectMask;	// IMP=0x0000000100028708
- (id)activeKeyboard;	// IMP=0x00000001000286f8
- (_Bool)isInternationalKeyboardKey;	// IMP=0x00000001000286e4
- (_Bool)isKeyboardContinuousPathTracking;	// IMP=0x00000001000286a4
- (_Bool)isKeyboardContinuousPathAvailable;	// IMP=0x0000000100028690
- (void)updateTouchForceSounds:(double)arg1;	// IMP=0x0000000100028534
- (void)postFingerLiftAtPoint:(struct CGPoint)arg1 withContextId:(unsigned int)arg2;	// IMP=0x0000000100028428
- (void)postFingerDragAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 withContextId:(unsigned int)arg3;	// IMP=0x00000001000282dc
- (void)postFingerTouchAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 withContextId:(unsigned int)arg3;	// IMP=0x0000000100028190
- (void)postStylusLiftAtPoint:(struct CGPoint)arg1 withContextId:(unsigned int)arg2;	// IMP=0x0000000100028098
- (void)postStylusDragAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 altitude:(double)arg3 azimuth:(double)arg4 withContextId:(unsigned int)arg5;	// IMP=0x0000000100027ef4
- (void)postStylusTouchAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 altitude:(double)arg3 azimuth:(double)arg4 withContextId:(unsigned int)arg5;	// IMP=0x0000000100027d50
- (_Bool)performSimpleTapAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 withContextId:(unsigned int)arg3 withDelay:(float)arg4;	// IMP=0x0000000100027bf8
- (_Bool)performSimpleTapAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000100027bdc
- (_Bool)supportsDirectionOrbManipulation;	// IMP=0x0000000100027bc8
- (void)notifyAnnouncementFinishedWithString:(id)arg1 didFinishSuccessfully:(_Bool)arg2;	// IMP=0x0000000100027ab0
- (void)sendUserEventOccurred;	// IMP=0x0000000100027a9c
- (void)sendTouchCancelledEvent;	// IMP=0x0000000100027a88
- (void)sendBrightnessEvent:(id)arg1;	// IMP=0x0000000100027a70
- (void)repostEvent:(id)arg1;	// IMP=0x00000001000279a8
- (id)windowContextIDs;	// IMP=0x0000000100027994
- (_Bool)dispatchKeyboardEvent:(id)arg1;	// IMP=0x0000000100027934
- (void)setEventCaptureMode:(int)arg1;	// IMP=0x00000001000278d8
- (id)customActionGroupIdentifier;	// IMP=0x00000001000278c4
- (void)setRotationCapabilityEnabled:(_Bool)arg1;	// IMP=0x0000000100027868
- (void)setAccelemoterDisabled:(_Bool)arg1;	// IMP=0x0000000100027850
- (void)setDeviceOrientation:(long long)arg1;	// IMP=0x00000001000277f8
- (id)isolatedWindow;	// IMP=0x00000001000277e8
- (id)elementCommunityIdentifier;	// IMP=0x0000000100027790
- (_Bool)shouldSpeakMathEquationTrait;	// IMP=0x0000000100027740
- (_Bool)prefersContextlessPassthrough;	// IMP=0x0000000100027738
- (_Bool)activateDragWithDescriptorDictionary:(id)arg1;	// IMP=0x0000000100027700
- (id)staticRecognitionText;	// IMP=0x0000000100027590
- (id)visionFeatureDescriptionOptions;	// IMP=0x000000010002744c
- (id)staticTextString;	// IMP=0x00000001000272ac
@property(readonly, nonatomic) NSString *visibleText;
- (struct CGRect)convertAccessibilityFrameToScreenCoordinates:(struct CGRect)arg1;	// IMP=0x00000001000270d4
- (int)applicationInterfaceOrientation;	// IMP=0x0000000100027068
- (_Bool)applicationHandleRemoteRightButton;	// IMP=0x0000000100027054
- (_Bool)applicationHandleRemoteLeftButton;	// IMP=0x0000000100027040
- (_Bool)applicationHandleRemoteDownButton;	// IMP=0x000000010002702c
- (_Bool)applicationHandleRemoteUpButton;	// IMP=0x0000000100027018
- (_Bool)isApplication;	// IMP=0x0000000100026f7c
- (CDStruct_4bcfbbae)nonPersistentUniqueId;	// IMP=0x0000000100026f20
- (_Bool)webSearchResultsActive;	// IMP=0x0000000100026ee0
@property(readonly, nonatomic) VOTElementUniqueIdentification *uniqueIdentification; // @synthesize uniqueIdentification=_uniqueIdentification;
- (_Bool)shouldStartReadAllOnFocus;	// IMP=0x0000000100026e70
@property(readonly, nonatomic) NSString *toggleStatusLabel;
@property(readonly, copy) NSString *description;
- (_Bool)isElementFirstElement:(_Bool)arg1 orLastElement:(_Bool)arg2 withType:(unsigned long long)arg3;	// IMP=0x000000010002686c
- (id)lastElementInStatusBar;	// IMP=0x00000001000267c0
- (_Bool)finishSetupIfAppropriate;	// IMP=0x00000001000267ac
- (const struct CGPath *)convertPath:(struct CGPath *)arg1 fromContextId:(unsigned int)arg2;	// IMP=0x0000000100026740
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromContextId:(unsigned int)arg2;	// IMP=0x0000000100026734
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toContextId:(unsigned int)arg2;	// IMP=0x0000000100026728
- (struct CGRect)convertRect:(struct CGRect)arg1 fromContextId:(unsigned int)arg2;	// IMP=0x0000000100026640
- (_Bool)avoidAnnouncingDirectTouchArea;	// IMP=0x0000000100026600
- (id)firstElementInStatusBar;	// IMP=0x0000000100026554
- (void)restoreUserPreferencesChangedByHandwriting;	// IMP=0x0000000100026540
- (_Bool)showControlCenter:(_Bool)arg1;	// IMP=0x00000001000264dc
- (_Bool)showBulletinBoard:(_Bool)arg1;	// IMP=0x0000000100026478
- (_Bool)isSystemWideGestureInProgress;	// IMP=0x0000000100026438
- (_Bool)isSiriTalkingOrListening;	// IMP=0x00000001000263b8
- (struct CGPoint)contentOffset;	// IMP=0x0000000100026378
- (void)setContentOffset:(struct CGPoint)arg1;	// IMP=0x0000000100026364
- (id)currentSoftwareKeyboardLayout;	// IMP=0x00000001000262f0
- (id)currentSoftwareKeyboardLanguage;	// IMP=0x00000001000262b0
- (id)currentHardwareKeyboardLayout;	// IMP=0x0000000100026270
- (_Bool)isDictationListening;	// IMP=0x0000000100026230
- (_Bool)isVoiceControlRunning;	// IMP=0x00000001000261f0
- (struct CGPoint)centerPointOfScreen;	// IMP=0x00000001000261dc
- (_Bool)isQuietModeEnabled;	// IMP=0x00000001000261d4
- (void)launchAppWithDisplayID:(id)arg1;	// IMP=0x00000001000261bc
- (id)appSwitcherApps;	// IMP=0x000000010002617c
- (id)launchableApps;	// IMP=0x000000010002613c
- (_Bool)isSystemBatteryLow;	// IMP=0x00000001000260fc
- (_Bool)isSystemLocked;	// IMP=0x00000001000260bc
- (_Bool)isAlarmRinging;	// IMP=0x000000010002607c
- (_Bool)isSystemSleeping;	// IMP=0x000000010002603c
- (long long)applicationOrientation;	// IMP=0x0000000100025fd0
- (_Bool)isKeyboardActiveOrAttached;	// IMP=0x0000000100025f70
- (_Bool)usingBrailleHardwareKeyboard;	// IMP=0x0000000100025efc
- (long long)valueChangeOriginationSource;	// IMP=0x0000000100025e88
- (_Bool)usingHardwareKeyboard;	// IMP=0x0000000100025e14
- (_Bool)isSoftwareKeyboardActive;	// IMP=0x0000000100025dd4
- (_Bool)isSoftwareKeyboardMimic;	// IMP=0x0000000100025dc0
- (_Bool)softwareKeyboardSupportsGestureKeyboard;	// IMP=0x0000000100025dac
- (_Bool)startStopToggle;	// IMP=0x0000000100025d98
- (id)parentTableOrCollectionView;	// IMP=0x0000000100025d88
- (struct _NSRange)indexPathAsRange;	// IMP=0x0000000100025d74
- (struct _NSRange)columnRange;	// IMP=0x0000000100025d60
@property(readonly, nonatomic) _Bool areMediaLegibilityEventsBeingTapped;
@property(readonly, nonatomic) _Bool isContainedByVideoElement;
@property(readonly, nonatomic) _Bool allowsActivationWithoutBeingNativeFocused;
@property(readonly, nonatomic) _Bool isContainedByPreferredNativeFocusElement;
@property(readonly, nonatomic) _Bool shouldIncludeRowRangeInDescription;
@property(readonly, nonatomic) struct _NSRange rowRange;
- (void)jumpToTableIndex:(id)arg1;	// IMP=0x0000000100025c78
- (id)elementAtRow:(long long)arg1 andColumn:(long long)arg2;	// IMP=0x0000000100025b88
- (id)typingCandidateElements;	// IMP=0x0000000100025b6c
- (id)textReplacements;	// IMP=0x0000000100025b58
- (_Bool)isSpotlight;	// IMP=0x0000000100025b00
- (_Bool)isIBooks;	// IMP=0x0000000100025aac
- (_Bool)isMaps;	// IMP=0x0000000100025a58
- (_Bool)isMail;	// IMP=0x0000000100025a00
- (_Bool)isAccessibilitySystemUIServer;	// IMP=0x00000001000259ac
- (_Bool)isAssistiveTouch;	// IMP=0x0000000100025958
- (_Bool)isGoogleChrome;	// IMP=0x0000000100025904
- (_Bool)isSafari;	// IMP=0x00000001000258b0
- (_Bool)isMobilePhone;	// IMP=0x000000010002585c
- (_Bool)isClockFace;	// IMP=0x0000000100025854
- (_Bool)isSetupBuddy;	// IMP=0x0000000100025800
- (_Bool)isSystemApp;	// IMP=0x00000001000257ac
- (_Bool)isPineBoard;	// IMP=0x0000000100025758
- (_Bool)isChronod;	// IMP=0x0000000100025704
- (_Bool)isSpringBoard;	// IMP=0x00000001000256b0
- (_Bool)hasBadge;	// IMP=0x000000010002569c
- (_Bool)isInFolder;	// IMP=0x0000000100025688
- (_Bool)isInAlert;	// IMP=0x0000000100025674
- (_Bool)isInAppSwitcher;	// IMP=0x0000000100025660
- (id)bundleIdentifier;	// IMP=0x00000001000255ac
- (id)accessibleAncestor;	// IMP=0x000000010002559c
- (id)accessibleDescendants;	// IMP=0x000000010002558c
- (id)explorerElements;	// IMP=0x000000010002557c
- (id)titleElements;	// IMP=0x0000000100025574
- (void)updateTitleElements;	// IMP=0x0000000100025570
- (_Bool)elementActsAsTitleElement:(id)arg1;	// IMP=0x00000001000254fc
- (void)addTitleElementToCache:(id)arg1;	// IMP=0x0000000100025458
- (id)headerElementsForRow:(unsigned long long)arg1;	// IMP=0x00000001000253e8
- (id)headerElementsForColumn:(unsigned long long)arg1;	// IMP=0x0000000100025378
@property(readonly, nonatomic) NSArray *linkedUIElements;
@property(readonly, nonatomic) NSArray *headerElements;
- (id)summaryElement;	// IMP=0x0000000100025348
- (id)textMarkerArrayOfText:(id)arg1;	// IMP=0x00000001000250cc
- (id)stringForTextMarkers:(id)arg1;	// IMP=0x00000001000250b0
- (id)elementForTextMarker:(id)arg1;	// IMP=0x0000000100025098
- (struct CGRect)textMarkerFrame:(id)arg1;	// IMP=0x0000000100025014
- (id)textLineStartMarker:(id)arg1;	// IMP=0x0000000100024ff8
- (void)setSelectionToTextMarker:(id)arg1;	// IMP=0x0000000100024fc8
- (_Bool)textOperationsAvailable;	// IMP=0x0000000100024efc
- (id)textMarkersForRange:(struct _NSRange)arg1;	// IMP=0x0000000100024e88
- (_Bool)isTourGuideRunning;	// IMP=0x0000000100024e48
- (_Bool)isCameraIrisOpen;	// IMP=0x0000000100024e08
- (_Bool)shouldAnnounceFontInfo;	// IMP=0x0000000100024df4
- (struct _NSRange)rangeForTextMarker:(id)arg1;	// IMP=0x0000000100024d6c
- (id)textLineEndMarker:(id)arg1;	// IMP=0x0000000100024ce8
- (id)pageTextMarkerRange;	// IMP=0x0000000100024c5c
- (id)textPreviousMarker:(id)arg1;	// IMP=0x0000000100024c40
- (id)textNextMarker:(id)arg1;	// IMP=0x0000000100024c24
- (id)textMarkersForPoints:(id)arg1;	// IMP=0x0000000100024a54
- (id)textMarkerForPoint:(struct CGPoint)arg1;	// IMP=0x00000001000249e8
- (id)url;	// IMP=0x0000000100024974
- (id)attachmentFilenameForCID:(id)arg1;	// IMP=0x0000000100024958
- (id)webAreaURL;	// IMP=0x00000001000248e4
- (id)textMarkerRange;	// IMP=0x00000001000248d0
- (struct _NSRange)textMarkerSelectionRange;	// IMP=0x0000000100024890
- (id)textMarkerRangeForSelection;	// IMP=0x0000000100024850
- (id)expandedTextValue;	// IMP=0x000000010002483c
- (struct CGRect)boundsForRange:(struct _NSRange)arg1;	// IMP=0x00000001000247b4
- (_Bool)replaceTextInRange:(struct _NSRange)arg1 withString:(id)arg2;	// IMP=0x00000001000246b0
- (void)replaceCharactersAtCursor:(unsigned long long)arg1 withString:(id)arg2 source:(long long)arg3;	// IMP=0x0000000100024580
- (id)_sourceNameForChangeOriginator:(long long)arg1;	// IMP=0x0000000100024520
- (long long)_changeOriginatorForSourceName:(id)arg1;	// IMP=0x000000010002446c
- (void)deleteCharacterAtCursorWithSource:(long long)arg1;	// IMP=0x0000000100024404
- (void)decreaseWebSelection:(long long)arg1;	// IMP=0x00000001000243b4
- (void)increaseWebSelection:(long long)arg1;	// IMP=0x0000000100024364
- (id)_selectionStringForSegment:(long long)arg1;	// IMP=0x00000001000242e4
- (id)objectForRange:(struct _NSRange)arg1 withParameterizedAttribute:(long long)arg2;	// IMP=0x0000000100024264
- (id)attributedValueForRange:(struct _NSRange)arg1;	// IMP=0x00000001000241f0
- (id)valueForRange:(struct _NSRange)arg1;	// IMP=0x000000010002417c
- (id)nextTextNavigationElement;	// IMP=0x000000010002416c
- (id)previousTextNavigationElement;	// IMP=0x000000010002415c
- (struct _NSRange)rangeForLineNumberAndColumn:(id)arg1;	// IMP=0x00000001000240b0
- (id)lineNumberAndColumnForPoint:(struct CGPoint)arg1;	// IMP=0x0000000100023ff8
- (void)setCurrentWordContextForBook:(id)arg1;	// IMP=0x0000000100023fe0
- (long long)lineNumberForPoint:(struct CGPoint)arg1;	// IMP=0x0000000100023ef0
- (struct CGRect)frameForRange:(struct _NSRange)arg1;	// IMP=0x0000000100023e68
- (_Bool)supportsFrameForRange;	// IMP=0x0000000100023e54
- (struct CGRect)frameForLineNumber:(long long)arg1;	// IMP=0x0000000100023db8
- (id)stringForLineNumber:(long long)arg1;	// IMP=0x0000000100023d24
- (struct _NSRange)rangeForLineNumber:(long long)arg1;	// IMP=0x0000000100023c78
- (_Bool)supportsRangeForLineNumber;	// IMP=0x0000000100023c64
- (id)pageContent;	// IMP=0x0000000100023c50
- (void)updatePageContent;	// IMP=0x0000000100023c3c
- (_Bool)isReadingContent;	// IMP=0x0000000100023c34
- (_Bool)includeDuringContentReading;	// IMP=0x0000000100023c20
- (_Bool)shouldSpeakScrollStatusOnEntry;	// IMP=0x0000000100023c0c
- (struct _NSRange)lineRangeForPosition:(unsigned long long)arg1;	// IMP=0x0000000100023b60
- (struct _NSRange)characterRangeForPosition:(unsigned long long)arg1;	// IMP=0x0000000100023ab4
- (long long)lineEndPosition;	// IMP=0x0000000100023a48
- (long long)lineStartPosition;	// IMP=0x00000001000239dc
- (void)_updateFocusForFKA:(_Bool)arg1;	// IMP=0x0000000100023770
- (void)setVoiceOverFocused:(_Bool)arg1;	// IMP=0x00000001000235c8
- (void)handwritingSendCarriageReturn;	// IMP=0x00000001000235b4
- (_Bool)activateKeyboardReturnKey;	// IMP=0x0000000100023424
- (_Bool)requiresLaTeXInput;	// IMP=0x0000000100023410
- (void)updateGesturedTextInputAttributes;	// IMP=0x00000001000233fc
- (id)gesturedTextInputAttributes;	// IMP=0x0000000100023398
- (id)elementForGesturedTextInput;	// IMP=0x00000001000231f8
- (void)clearElementForGesturedTextInput;	// IMP=0x00000001000231e8
- (void)insertText:(id)arg1 source:(long long)arg2;	// IMP=0x00000001000230ac
- (void)_updateValueChangeOriginatorForApplication:(long long)arg1;	// IMP=0x0000000100022f9c
- (void)setSelectedTextRange:(struct _NSRange)arg1 refreshBraille:(_Bool)arg2;	// IMP=0x0000000100022f38
- (void)setFirstResponder:(id)arg1;	// IMP=0x0000000100022ed8
- (struct _NSRange)selectedTextRange;	// IMP=0x0000000100022e98
- (id)customPublicRotorResultWithItem:(id)arg1 startElement:(id)arg2;	// IMP=0x0000000100022c44
- (id)customPublicRotorName:(id)arg1;	// IMP=0x000000010002296c
- (_Bool)customPublicRotorIsVisibleInTouchRotor:(id)arg1;	// IMP=0x00000001000227d0
- (id)customPublicRotorForSystemType:(id)arg1;	// IMP=0x00000001000226ac
- (id)customPublicRotorNames;	// IMP=0x00000001000223ec
- (id)customPublicRotors;	// IMP=0x0000000100022288
- (_Bool)attemptToShowContextMenuWithTargetPointValue:(id)arg1;	// IMP=0x00000001000221c4
- (_Bool)performCustomActionWithIdentifier:(id)arg1 data:(id)arg2;	// IMP=0x0000000100021fdc
- (_Bool)performCustomActionWithIdentifier:(id)arg1;	// IMP=0x0000000100021fcc
- (long long)overriddenInterpretationForCommand:(long long)arg1;	// IMP=0x0000000100021f34
- (_Bool)fullscreenVideoViewIsVisible;	// IMP=0x0000000100021f20
- (_Bool)shouldSpeakExplorerElementsAfterFocus;	// IMP=0x0000000100021f0c
@property(readonly, nonatomic) _Bool shouldSetNativeFocusWhenBecomingCurrentElement;
@property(readonly, nonatomic) _Bool shouldPlaySoundWhenFocused;
@property(readonly, nonatomic) _Bool canBecomeNativeFocused;
@property(readonly, nonatomic) _Bool hasNativeFocus;
- (_Bool)setNativeFocus;	// IMP=0x0000000100021eb0
- (id)customRotorActions;	// IMP=0x0000000100021db4
- (id)cachedCustomRotorActions;	// IMP=0x00000001000215d4
- (id)customContent;	// IMP=0x0000000100021394
- (_Bool)shouldAddAlternateActionForLinkElement;	// IMP=0x00000001000212dc
- (_Bool)includeURLLabelInLabel;	// IMP=0x0000000100021258
- (_Bool)retainsCustomRotorActionSetting;	// IMP=0x0000000100021244
- (_Bool)allowCustomActionHintSpeakOverride;	// IMP=0x0000000100021230
- (id)cellWithRowIndexPath:(struct _NSRange)arg1 parentView:(id)arg2;	// IMP=0x0000000100020fe4
- (_Bool)elementOnSameLine:(id)arg1;	// IMP=0x0000000100020d2c
- (id)firstElementInApplicationForReadFromTop;	// IMP=0x0000000100020cb8
- (id)firstElementInApplicationForFocus;	// IMP=0x0000000100020c44
- (id)firstElementInApplication;	// IMP=0x0000000100020bd0
- (id)firstResponderElementForFocus;	// IMP=0x0000000100020b5c
- (id)nativeFocusPreferredElement;	// IMP=0x0000000100020b4c
- (id)nativeFocusElement;	// IMP=0x0000000100020b3c
- (id)firstResponderElement;	// IMP=0x0000000100020ac8
- (id)firstVisibleElementInList;	// IMP=0x0000000100020ab8
- (_Bool)readingContentCausesPageTurn;	// IMP=0x0000000100020a88
- (_Bool)showsDualPages;	// IMP=0x0000000100020a48
- (id)scrollStatus;	// IMP=0x0000000100020a08
- (void)scrollRectToVisible:(struct CGRect)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000208c8
- (void)scrollToPoint:(struct CGPoint)arg1;	// IMP=0x0000000100020870
- (_Bool)scrollPreviousPage;	// IMP=0x0000000100020860
- (_Bool)scrollNextPage;	// IMP=0x0000000100020850
- (void)scrollLeftPage;	// IMP=0x0000000100020840
- (void)scrollRightPage;	// IMP=0x0000000100020830
- (void)scrollDownPage;	// IMP=0x0000000100020820
- (void)scrollUpPage;	// IMP=0x0000000100020810
- (_Bool)_scrollForAction:(int)arg1;	// IMP=0x0000000100020690
- (void)_iterateSelfAndRemoteParentsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000205d8
- (id)immediateRemoteParent;	// IMP=0x00000001000204d4
- (id)textualContext;	// IMP=0x00000001000204c0
- (_Bool)remoteParentIsViewHost;	// IMP=0x00000001000204b8
- (id)remoteParent;	// IMP=0x00000001000203b4
- (double)absoluteValue;	// IMP=0x0000000100020340
- (double)maxValue;	// IMP=0x00000001000202e4
- (double)minValue;	// IMP=0x0000000100020288
- (_Bool)_attemptPerformActivateActionWithElement:(id)arg1;	// IMP=0x000000010001ff80
- (_Bool)performSimpleTap:(_Bool)arg1;	// IMP=0x000000010001f74c
- (_Bool)activateIfSupported;	// IMP=0x000000010001f63c
- (_Bool)performSimpleTap;	// IMP=0x000000010001f62c
- (void)performDoubleTap;	// IMP=0x000000010001f5cc
- (_Bool)allowsAutoAlternativeCharacterActivation;	// IMP=0x000000010001f5b8
- (_Bool)performTapAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 playSound:(_Bool)arg3;	// IMP=0x000000010001f448
- (id)resolvedEditingStyles;	// IMP=0x000000010001f3b0
- (_Bool)verifyElementExists:(struct CGPoint *)arg1;	// IMP=0x000000010001ee68
- (_Bool)supportsSecondaryActivate;	// IMP=0x000000010001ee54
- (_Bool)supportsActivate;	// IMP=0x000000010001edb0
- (void)findSearchResult:(_Bool)arg1 withSearchText:(id)arg2;	// IMP=0x000000010001ed30
- (_Bool)performEscape;	// IMP=0x000000010001ec00
- (struct CGPoint)elementFrameLocation:(int)arg1;	// IMP=0x000000010001e908
- (void)performTextOperation:(id)arg1;	// IMP=0x000000010001e8f0
- (id)textOperations;	// IMP=0x000000010001e8b0
- (id)textOperationsOperator;	// IMP=0x000000010001e8a0
- (void)increaseTrackingDetail;	// IMP=0x000000010001e88c
- (void)decreaseTrackingDetail;	// IMP=0x000000010001e878
- (void)zoomOutAtLocation:(struct CGPoint)arg1;	// IMP=0x000000010001e820
- (_Bool)roadContainsTrackingPoint:(struct CGPoint)arg1;	// IMP=0x000000010001e790
- (id)mapsExplorationChangeVerbosity:(_Bool)arg1;	// IMP=0x000000010001e774
- (id)mapsExplorationCurrentIntersectionDescription;	// IMP=0x000000010001e760
- (struct CGPoint)mapsExplorationCurrentLocation;	// IMP=0x000000010001e74c
- (id)mapsExplorationCurrentRoadsWithAngles;	// IMP=0x000000010001e738
- (_Bool)mapsExplorationIsPending;	// IMP=0x000000010001e724
- (_Bool)mapsExplorationIsActive;	// IMP=0x000000010001e710
- (void)mapsExplorationEnd;	// IMP=0x000000010001e6fc
- (void)mapsExplorationContinueWithVertexIndex:(unsigned long long)arg1;	// IMP=0x000000010001e6a4
- (void)mapsExplorationBeginFromCurrentElement:(_Bool)arg1;	// IMP=0x000000010001e688
- (void)mapsExplorationRecordTouchpoint:(struct CGPoint)arg1;	// IMP=0x000000010001e630
- (id)upcomingRoadsAtPoint:(struct CGPoint)arg1 withDirection:(float)arg2;	// IMP=0x000000010001e40c
- (float)distanceToEndOfRoad:(struct CGPoint)arg1 withDirection:(float)arg2;	// IMP=0x000000010001e2cc
- (float)distanceToOtherRoad:(struct CGPoint)arg1 withDirection:(float)arg2 otherRoad:(id)arg3;	// IMP=0x000000010001e138
- (_Bool)lastHitTestNearBorder;	// IMP=0x000000010001e0f8
- (id)mapDetailedInformationAtPoint:(struct CGPoint)arg1;	// IMP=0x000000010001e0b0
- (long long)mapFeatureType;	// IMP=0x000000010001e05c
- (_Bool)isMapItem;	// IMP=0x000000010001e038
- (id)photoDescription;	// IMP=0x000000010001e024
- (void)zoomInAtLocation:(struct CGPoint)arg1;	// IMP=0x000000010001dfcc
- (void)decrementAction;	// IMP=0x000000010001dfb8
- (void)setGesturePracticeInfo:(id)arg1;	// IMP=0x000000010001dfa0
- (void)incrementAction;	// IMP=0x000000010001df8c
- (void)scrollToElementForDirectional:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010001dbf8
- (_Bool)shouldIgnoreTextEditingTrait;	// IMP=0x000000010001db14
@property(readonly, nonatomic) unsigned long long traits;
- (_Bool)doesHaveTraitsForGesturedTextInput;	// IMP=0x000000010001da84
- (_Bool)onlyHasTraits:(unsigned long long)arg1;	// IMP=0x000000010001da34
- (_Bool)doesHaveAllTraits:(unsigned long long)arg1;	// IMP=0x000000010001da04
- (_Bool)doesHaveTraits:(unsigned long long)arg1;	// IMP=0x000000010001d9d4
- (_Bool)brailleTextEntrySupported;	// IMP=0x000000010001d978
- (_Bool)isEditableTextArea;	// IMP=0x000000010001d920
- (struct _NSRange)textInputElementRange;	// IMP=0x000000010001d8c0
- (id)textInputElement;	// IMP=0x000000010001d8ac
- (_Bool)suppressCustomActionHint;	// IMP=0x000000010001d898
- (id)roleDescription;	// IMP=0x000000010001d884
- (unsigned long long)blockquoteLevel;	// IMP=0x000000010001d830
- (id)elementsInDirection:(long long)arg1 withCount:(unsigned long long)arg2;	// IMP=0x000000010001d658
- (id)lastContainedElement;	// IMP=0x000000010001d590
- (id)_lastContainedElementIncludingRemotes:(_Bool)arg1;	// IMP=0x000000010001d390
- (id)firstContainedElement;	// IMP=0x000000010001d1d0
- (_Bool)supportsHeaderElementOutput;	// IMP=0x000000010001d168
- (_Bool)realtimeElementCompleted;	// IMP=0x000000010001d154
- (_Bool)realtimeElementUnread;	// IMP=0x000000010001d140
- (id)realtimeElements;	// IMP=0x000000010001d130
- (id)autoSpeakWatchElements;	// IMP=0x000000010001d120
- (id)previousElement;	// IMP=0x000000010001d05c
- (id)nextElement;	// IMP=0x000000010001cf98
- (id)remoteApplication;	// IMP=0x000000010001cf04
- (id)application;	// IMP=0x000000010001cee8
- (void)updateEquivalenceTag;	// IMP=0x000000010001ced4
- (void)updateLanguage;	// IMP=0x000000010001cec0
- (void)updateHint;	// IMP=0x000000010001ceac
- (void)updateTraits;	// IMP=0x000000010001ce98
- (void)updateValue;	// IMP=0x000000010001ce84
- (void)updateRoleDescription;	// IMP=0x000000010001ce70
- (void)updateExpandedStatus;	// IMP=0x000000010001ce5c
- (void)updateVisiblePoint;	// IMP=0x000000010001ce48
- (void)updateCenterPoint;	// IMP=0x000000010001ce34
- (void)updateLabel;	// IMP=0x000000010001ce20
- (void)updatePaths;	// IMP=0x000000010001ce0c
- (void)updateFrame;	// IMP=0x000000010001cdf4
- (void)updateCache;	// IMP=0x000000010001cc70
- (id)dataDetectorURL:(struct CGPoint)arg1;	// IMP=0x000000010001cbc8
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000010001cb28
@property(readonly) unsigned long long hash;
- (id)instructions;	// IMP=0x000000010001c750
- (_Bool)isPressed;	// IMP=0x000000010001c710
- (_Bool)supportsPressedState;	// IMP=0x000000010001c6fc
- (id)ancestryForTraits:(unsigned long long)arg1;	// IMP=0x000000010001c68c
@property(readonly, nonatomic) NSString *guideElementHeaderText;
@property(readonly, nonatomic) VOTElement *nextGuideElement;
@property(readonly, nonatomic) VOTElement *previousGuideElement;
- (id)previousContainer;	// IMP=0x000000010001c490
- (id)nextContainer;	// IMP=0x000000010001c3fc
- (id)flowToElements;	// IMP=0x000000010001c3ec
- (void)updateFlowToElements;	// IMP=0x000000010001c3d8
- (id)linkedElement;	// IMP=0x000000010001c3c8
- (_Bool)shouldIncludeMediaDescriptionsRotor;	// IMP=0x000000010001c3b4
- (_Bool)touchContainerShouldOutputBraille;	// IMP=0x000000010001c3a0
- (id)touchContainer;	// IMP=0x000000010001c294
- (id)touchContainerParent;	// IMP=0x000000010001c188
- (const struct __AXUIElement *)touchContainerAXElement;	// IMP=0x000000010001bf58
- (struct __AXUIElement *)touchContainerParentAXElement;	// IMP=0x000000010001be80
- (id)elementsForAttribute:(long long)arg1;	// IMP=0x000000010001be70
- (id)elementsForAttribute:(long long)arg1 withParameter:(id)arg2;	// IMP=0x000000010001bc9c
- (id)_elementForAttribute:(long long)arg1 shouldUpdateCache:(_Bool)arg2 shouldFetchAttributes:(_Bool)arg3;	// IMP=0x000000010001bae4
- (id)_elementForAttribute:(long long)arg1 shouldUpdateCache:(_Bool)arg2;	// IMP=0x000000010001bad4
- (id)elementForAttribute:(long long)arg1;	// IMP=0x000000010001bac4
- (_Bool)servesAsHeadingLandmark;	// IMP=0x000000010001bab0
- (id)opaqueElementInDirection:(long long)arg1 searchType:(long long)arg2 range:(struct _NSRange *)arg3;	// IMP=0x000000010001b8a8
- (_Bool)supportsTextSelection;	// IMP=0x000000010001b894
- (float)activationDelay;	// IMP=0x000000010001b838
- (id)focusedApplications;	// IMP=0x000000010001b6c4
- (id)stringForParameterizedAttribute:(long long)arg1 parameter:(id)arg2;	// IMP=0x000000010001b654
- (id)arrayForParameterizedAttribute:(long long)arg1 parameter:(id)arg2;	// IMP=0x000000010001b5e4
- (id)elementForParameterizedAttribute:(long long)arg1 parameter:(id)arg2;	// IMP=0x000000010001b534
@property(readonly, nonatomic) VOTElement *mediaAnalysisElement;
@property(readonly, nonatomic) _Bool shouldSkipImageTraitDescription;
@property(readonly, nonatomic) struct CGRect mediaAnalysisFrame;
@property(readonly, nonatomic) unsigned int mediaAnalysisOptions;
@property(readonly, nonatomic) _Bool supportsMediaAnalysis;
- (_Bool)isAccessibleElement;	// IMP=0x000000010001b430
- (_Bool)isHeader;	// IMP=0x000000010001b400
- (_Bool)isTouchContainer;	// IMP=0x000000010001b340
- (id)hint;	// IMP=0x000000010001b32c
@property(readonly, nonatomic) NSString *label;
@property(nonatomic) _Bool isFirstItemInTree; // @dynamic isFirstItemInTree;
@property(nonatomic) _Bool isFirstItemInFieldset; // @dynamic isFirstItemInFieldset;
@property(nonatomic) _Bool isFirstItemInLandmark; // @dynamic isFirstItemInLandmark;
@property(nonatomic) _Bool isFirstItemInTable; // @dynamic isFirstItemInTable;
@property(nonatomic) _Bool isFirstItemInList; // @dynamic isFirstItemInList;
@property(copy, nonatomic) NSString *userDefinedLabel; // @dynamic userDefinedLabel;
- (id)elementStoredUserLabel;	// IMP=0x000000010001acc0
- (_Bool)savePhotoLabeliCloud:(id)arg1;	// IMP=0x000000010001aca8
@property(copy, nonatomic) NSString *definedLabel; // @dynamic definedLabel;
- (id)urlLabel;	// IMP=0x000000010001a928
- (id)equivalenceTag;	// IMP=0x000000010001a914
- (id)identifier;	// IMP=0x000000010001a900
- (id)originalLabel;	// IMP=0x000000010001a8a8
- (id)headingLevelValue;	// IMP=0x000000010001a894
- (id)linkRelationshipType;	// IMP=0x000000010001a880
@property(readonly, nonatomic) NSString *value;
- (struct CGRect)gesturePracticeRegion;	// IMP=0x000000010001a584
- (id)notificationSummary:(unsigned long long)arg1;	// IMP=0x000000010001a4cc
- (unsigned long long)notificationCount;	// IMP=0x000000010001a460
- (void)resetBannerTimer;	// IMP=0x000000010001a44c
- (_Bool)isBannerNotification;	// IMP=0x000000010001a438
- (_Bool)isAwayAlertItemNew;	// IMP=0x000000010001a424
- (_Bool)isAwayAlertItem;	// IMP=0x000000010001a410
- (id)currentOpaqueElement;	// IMP=0x000000010001a3f4
- (id)visibleOpaqueElements;	// IMP=0x000000010001a3e4
- (_Bool)isAccessibilityOpaqueElementProvider;	// IMP=0x000000010001a3d0
- (id)localOpaqueParent;	// IMP=0x000000010001a3bc
- (id)outermostLocalOpaqueParent;	// IMP=0x000000010001a330
- (id)opaqueParent;	// IMP=0x000000010001a1e4
- (id)directParent;	// IMP=0x000000010001a1d0
- (_Bool)isStrongPasswordField;	// IMP=0x000000010001a1bc
- (_Bool)useElementAtPositionAfterActivation;	// IMP=0x000000010001a1a8
- (double)delayBeforeUpdatingOnActivation;	// IMP=0x000000010001a14c
- (struct CGRect)frameForDirectInteraction;	// IMP=0x000000010001a138
- (_Bool)elementVisibilityAffectsLayout;	// IMP=0x000000010001a124
- (_Bool)overridesVoiceOverInstructions;	// IMP=0x000000010001a110
- (_Bool)keyboardKeyAllowsTouchTyping;	// IMP=0x000000010001a098
- (_Bool)dismissAlternativeKeyboardPicker;	// IMP=0x000000010001a084
- (_Bool)isInTableCell;	// IMP=0x000000010001a070
- (_Bool)isInDescriptionDefinition;	// IMP=0x000000010001a05c
- (_Bool)isInDescriptionTerm;	// IMP=0x000000010001a048
- (_Bool)isComboBox;	// IMP=0x000000010001a034
- (struct CGRect)textCursorFrame;	// IMP=0x0000000100019ff4
- (unsigned long long)ariaColumnIndex;	// IMP=0x0000000100019fa0
- (unsigned long long)ariaRowIndex;	// IMP=0x0000000100019f4c
- (unsigned long long)ariaColumnCount;	// IMP=0x0000000100019ef8
- (unsigned long long)ariaRowCount;	// IMP=0x0000000100019ea4
- (unsigned long long)columnCount;	// IMP=0x0000000100019e50
- (unsigned long long)rowCount;	// IMP=0x0000000100019dfc
- (id)sortDirection;	// IMP=0x0000000100019de8
- (id)currentStatus;	// IMP=0x0000000100019dd4
- (id)invalidStatus;	// IMP=0x0000000100019dc0
- (id)popupValue;	// IMP=0x0000000100019dac
- (_Bool)hasPopup;	// IMP=0x0000000100019d98
- (_Bool)isRequired;	// IMP=0x0000000100019d84
- (id)contextDescriptors;	// IMP=0x0000000100019d70
- (_Bool)expandedStatusTogglesOnActivate;	// IMP=0x0000000100019d5c
- (long long)expandedStatus;	// IMP=0x0000000100019d08
- (_Bool)isVisible;	// IMP=0x0000000100019cf4
- (void)updateIsVisible;	// IMP=0x0000000100019ce0
- (unsigned int)windowContextId;	// IMP=0x0000000100019bec
- (void)updateWindowContextId;	// IMP=0x0000000100019bd8
- (unsigned int)displayId;	// IMP=0x0000000100019aa0
- (const struct CGPath *)path;	// IMP=0x0000000100019a8c
- (struct CGRect)visibleFrame;	// IMP=0x0000000100019a78
@property(readonly, nonatomic) struct CGRect frame;
- (_Bool)isRemoteElement;	// IMP=0x0000000100019a50
- (id)supportedLanguageIfNecessary;	// IMP=0x00000001000196f0
- (id)formattedDatetime;	// IMP=0x0000000100019654
- (unsigned long long)containerType;	// IMP=0x0000000100019600
- (id)containerTypes;	// IMP=0x00000001000195b4
- (_Bool)containedIn:(unsigned long long)arg1;	// IMP=0x0000000100019528
- (struct CGPoint)visiblePoint;	// IMP=0x0000000100019514
- (struct CGPoint)centerPoint;	// IMP=0x0000000100019500
- (_Bool)isRTL;	// IMP=0x00000001000194ec
- (void)updateRTL;	// IMP=0x00000001000194d8
- (id)language;	// IMP=0x00000001000194c4
@property(readonly, nonatomic) AXUIElement *uiElement;
- (_Bool)isValidForApplication:(id)arg1;	// IMP=0x0000000100019460
- (_Bool)isAlive;	// IMP=0x0000000100019420
- (_Bool)isValid;	// IMP=0x0000000100019410
- (int)pid;	// IMP=0x0000000100019400
- (void)_copyInternalsToElement:(id)arg1;	// IMP=0x0000000100019224
- (id)copyWithCache;	// IMP=0x0000000100019088
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000100018f80
- (id)initWithPosition:(struct CGPoint)arg1;	// IMP=0x0000000100018ccc
- (id)initWithPosition:(struct CGPoint)arg1 application:(id)arg2 contextId:(unsigned int)arg3;	// IMP=0x0000000100018c0c
- (id)initWithPosition:(struct CGPoint)arg1 startWithElement:(id)arg2;	// IMP=0x0000000100018b60
- (id)_initWithUIElement:(id)arg1 identification:(id)arg2;	// IMP=0x0000000100018a08
- (id)initWithUIElement:(id)arg1;	// IMP=0x00000001000189f8
- (id)initWithAXElement:(struct __AXUIElement *)arg1;	// IMP=0x0000000100018998
- (id)initApplicationWithPosition:(struct CGPoint)arg1;	// IMP=0x00000001000188ec
- (void)applyCVMLGeneratedContentToRequest:(id)arg1;	// IMP=0x00000001000c407c
- (id)generateCVMLContentForBraille;	// IMP=0x00000001000c3db0
- (void)_applyTableRowColumnSpan:(id)arg1 language:(id)arg2;	// IMP=0x00000001000c3ac4
- (void)_applyTableColumnIndex:(id)arg1 options:(unsigned long long)arg2 language:(id)arg3;	// IMP=0x00000001000c38d8
- (void)_applyTableRowIndex:(id)arg1 options:(unsigned long long)arg2 language:(id)arg3;	// IMP=0x00000001000c36ec
- (void)_applyHeaderStatus:(id)arg1 language:(id)arg2;	// IMP=0x00000001000c3554
- (void)applyTableDimension:(id)arg1 language:(id)arg2;	// IMP=0x00000001000c32c0
- (id)tableDimensionStringWithRow:(unsigned long long)arg1 andColumn:(unsigned long long)arg2;	// IMP=0x00000001000c318c
- (_Bool)hasExplicitColumnInfo;	// IMP=0x00000001000c310c
- (_Bool)hasExplicitRowInfo;	// IMP=0x00000001000c308c
- (_Bool)shouldAnnounceTableInfo;	// IMP=0x00000001000c2f9c
- (void)regionDescriptionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000c2de4
- (id)regionDescriptionWithFrame:(struct CGRect)arg1;	// IMP=0x00000001000c2870
- (struct CGRect)adaptFrameForSystemElement:(struct CGRect)arg1;	// IMP=0x00000001000c27bc
- (void)_applyRoleDescription:(id)arg1 language:(id)arg2;	// IMP=0x00000001000c271c
- (void)_configureAsSingleLinkElementWithRequest:(id)arg1 linkTraitTitle:(id)arg2 hint:(id)arg3;	// IMP=0x00000001000c2670
- (void)applyTextEditingInformation:(id)arg1 request:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x00000001000c1a54
- (void)announceTableInfo:(id)arg1 options:(unsigned long long)arg2 language:(id)arg3;	// IMP=0x00000001000c1990
- (void)announceAdditionalTextualInformation:(id)arg1;	// IMP=0x00000001000c1914
- (void)_applyStickyCustomActions:(id)arg1 customAction:(id)arg2 language:(id)arg3;	// IMP=0x00000001000c1744
- (void)_applyCustomContent:(id)arg1 language:(id)arg2;	// IMP=0x00000001000c1564
- (void)addTextualInformationToRequest:(id)arg1 options:(unsigned long long)arg2 dataPackage:(id)arg3;	// IMP=0x00000001000befc4
- (id)_resolvedOutputLanguage:(_Bool *)arg1;	// IMP=0x00000001000bedd4
- (void)_applySelectedTrait:(id)arg1 language:(id)arg2;	// IMP=0x00000001000bec48
- (void)_applyExpandedStatus:(id)arg1 language:(id)arg2;	// IMP=0x00000001000beb80
- (void)_applyLinkRelationshipType:(id)arg1 language:(id)arg2;	// IMP=0x00000001000beae4
- (id)_languageRangesForText:(id)arg1;	// IMP=0x00000001000be720
- (void)_applyLanguageTokens:(id)arg1 attributedString:(id)arg2;	// IMP=0x00000001000be4cc
- (void)addTextualInformationToBrailleLine:(id)arg1 forPosition:(unsigned long long)arg2 rotorSelection:(id)arg3 shouldPreferRotorSelection:(_Bool)arg4 lineRange:(struct _NSRange *)arg5 descriptionRange:(struct _NSRange *)arg6 lineRangeKnown:(_Bool)arg7 isNewTouchContainer:(_Bool)arg8;	// IMP=0x00000001000bd190
- (id)_copyMathTextualInformationWithBrailleLineRange:(struct _NSRange *)arg1 brailleDescriptionRange:(struct _NSRange *)arg2 position:(unsigned long long)arg3 rotorSelection:(id)arg4 shouldPreferRotorSelection:(_Bool)arg5;	// IMP=0x00000001000bcbfc
- (struct _NSRange)_brailleLineRangeForDescription:(id)arg1 position:(unsigned long long)arg2;	// IMP=0x00000001000bcb24
- (void)_applySortDirection:(id)arg1 language:(id)arg2;	// IMP=0x00000001000bc99c
- (void)_applyDatetimeAttribute:(id)arg1 language:(id)arg2;	// IMP=0x00000001000bc89c
- (void)_applyCurrentStatus:(id)arg1 language:(id)arg2;	// IMP=0x00000001000bc674
- (void)_applyInvalidStatus:(id)arg1 language:(id)arg2;	// IMP=0x00000001000bc4dc
- (void)_applyTraitsToRequest:(id)arg1 options:(unsigned long long)arg2 numHeaderActions:(unsigned long long)arg3 language:(id)arg4;	// IMP=0x00000001000bb7b4
- (void)_applyHasPopupAttribute:(id)arg1 withLanguage:(id)arg2;	// IMP=0x00000001000bb608
- (_Bool)applySelectedText:(id)arg1 language:(id)arg2;	// IMP=0x00000001000bb488
- (void)_applyValueToRequest:(id)arg1 options:(unsigned long long)arg2 lastSeenLineAndColumn:(id)arg3 language:(id)arg4;	// IMP=0x00000001000babf8
- (void)applyHeaderElementsToRequest:(id)arg1;	// IMP=0x00000001000baa7c
- (void)applyRowHeadersToRequest:(id)arg1;	// IMP=0x00000001000ba920
- (void)_addHeaderElement:(id)arg1 toRequest:(id)arg2;	// IMP=0x00000001000ba668
- (void)_applyLabelToRequest:(id)arg1 includeBlockQuote:(_Bool)arg2 language:(id)arg3 isWebLanguageChoice:(_Bool)arg4;	// IMP=0x00000001000ba120
- (id)_removeBadDeveloperDecisions:(id)arg1;	// IMP=0x00000001000b9e5c
- (void)_applyAttributesFromText:(id)arg1 toRequest:(id)arg2 withLanguage:(id)arg3;	// IMP=0x00000001000b9df0
- (id)arrayOfTraitsAsStringsWithTraitOrder:(id)arg1;	// IMP=0x00000001000b9d5c
- (id)arrayOfTraitsAsStrings;	// IMP=0x00000001000b9d4c
- (id)arrayOfTraitsAsStringsWithTraitOrder:(id)arg1 language:(id)arg2;	// IMP=0x00000001000b7ff0
- (id)mathSummary;	// IMP=0x000000010010969c
- (void)expandMathEquation;	// IMP=0x0000000100109600
- (_Bool)canExpandMathEquation;	// IMP=0x00000001001094c4
- (id)mathBrailleDescription;	// IMP=0x000000010010943c
- (_Bool)canNavigateMathSegments;	// IMP=0x0000000100109414
- (id)mathSegmentsWithGranularityLevel:(unsigned long long)arg1;	// IMP=0x0000000100109174
- (unsigned long long)_minimumSegmentDepth;	// IMP=0x000000010010910c
- (unsigned long long)_minimumSegmentDepthForExpression:(id)arg1 withMaximumDepth:(unsigned long long)arg2;	// IMP=0x0000000100109058
- (id)mathEquationDescription;	// IMP=0x0000000100108fd0
- (id)_mathAXStringFromAttributedString:(id)arg1;	// IMP=0x0000000100108b0c
- (id)_mathExpression;	// IMP=0x0000000100108a98
- (id)_rawMathEquation;	// IMP=0x0000000100108a78

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end


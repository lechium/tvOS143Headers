//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "VOTCustomActionContext-Protocol.h"
#import "VOTDirectTouchManagementProtocol-Protocol.h"
#import "VOTElementFetchDelegateProtocol-Protocol.h"
#import "VOTElementManagementProtocol-Protocol.h"
#import "VOTElementRotorDelegate-Protocol.h"
#import "VOTExplorerElementManagerDelegate-Protocol.h"
#import "VOTOutputManagerObserver-Protocol.h"
#import "VOTOutputRequestCompletionProtocol-Protocol.h"
#import "VOTRotorManagementProtocol-Protocol.h"
#import "VOTTVGestureRepeaterDelegate-Protocol.h"
#import "VOTVisionEngineResultUpdateDelegate-Protocol.h"

@class AXIndexMap, AXUIElement, NSArray, NSData, NSDictionary, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, NSURL, SCRCTargetSelectorTimer, SCRCThread, SCRCThreadKey, VOTElement, VOTElementFetcher, VOTElementRotor, VOTElementUniqueIdentification, VOTEvent, VOTExplorerElementManager, VOTOutputRequest, VOTRotor, VOTTVGestureRepeater, VOTTVSpeechRequestManager, VOTTextMovementManager, VOTUpdateFocusContext, _VOTTextMarkerRange;
@protocol VOTElementUpdateProtocol;

@interface VOTElementManager : NSObject <VOTExplorerElementManagerDelegate, VOTTVGestureRepeaterDelegate, VOTElementRotorDelegate, VOTCustomActionContext, VOTOutputManagerObserver, VOTOutputRequestCompletionProtocol, VOTElementFetchDelegateProtocol, VOTDirectTouchManagementProtocol, VOTRotorManagementProtocol, VOTVisionEngineResultUpdateDelegate, VOTElementManagementProtocol>
{
    AXIndexMap *_commands;	// 8 = 0x8
    VOTElement *_lastValidElement;	// 16 = 0x10
    NSArray *_currentApplications;	// 24 = 0x18
    VOTElement *_touchContainer;	// 32 = 0x20
    long long _touchContainersTouchedCount;	// 40 = 0x28
    AXUIElement *_autofillCurrentElement;	// 48 = 0x30
    long long _readWordCyclingCount;	// 56 = 0x38
    VOTElement *_currentElement;	// 64 = 0x40
    VOTElement *_anyThreadCurrentElement;	// 72 = 0x48
    struct os_unfair_lock_s _anyThreadCurrentElementLock;	// 80 = 0x50
    VOTElement *_currentOpaqueParent;	// 88 = 0x58
    VOTElementFetcher *_fetchManager;	// 96 = 0x60
    NSMutableString *_elementTypingBuffer;	// 104 = 0x68
    struct _NSRange _elementSelectionRangeBufferInternal;	// 112 = 0x70
    struct _NSRange _elementSelectionRangeBufferForValueChange;	// 128 = 0x80
    struct _NSRange _elementSelectionRangeBufferForSelectionChange;	// 144 = 0x90
    NSString *_webSelectionText;	// 160 = 0xa0
    unsigned long long _elementMathIndex;	// 168 = 0xa8
    NSArray *_elementMathSegments;	// 176 = 0xb0
    unsigned long long _elementMathSegmentGranularity;	// 184 = 0xb8
    struct _NSRange _highlightedCharacterRange;	// 192 = 0xc0
    _Bool _textRangeBeingDisplayed;	// 208 = 0xd0
    VOTElement *_firstResponderElement;	// 216 = 0xd8
    VOTElement *_previousTouchTypingKey;	// 224 = 0xe0
    double _previousTableOrCollectionViewRowTime;	// 232 = 0xe8
    double _lastAdjustValueTime;	// 240 = 0xf0
    double _lastLiveRegionUpdate;	// 248 = 0xf8
    double _lastPopupTime;	// 256 = 0x100
    double _lastTextInsertionAnnouncementTime;	// 264 = 0x108
    double _lastItemSelectionFromTouch;	// 272 = 0x110
    double _lastSentBannerTimerReset;	// 280 = 0x118
    SCRCTargetSelectorTimer *_updateLayoutTimer;	// 288 = 0x120
    SCRCTargetSelectorTimer *_containerFrameDrawingTimer;	// 296 = 0x128
    SCRCTargetSelectorTimer *_visualRotorFadeTimer;	// 304 = 0x130
    SCRCTargetSelectorTimer *_webPageLoadingSoundTimer;	// 312 = 0x138
    SCRCTargetSelectorTimer *_appSuspensionSoundTimer;	// 320 = 0x140
    SCRCTargetSelectorTimer *_simulatedPressOutputTimer;	// 328 = 0x148
    SCRCTargetSelectorTimer *_simulatedForceLiftTimer;	// 336 = 0x150
    SCRCTargetSelectorTimer *_updateAppFromTimer;	// 344 = 0x158
    SCRCTargetSelectorTimer *_updateWithNativeFocusTimer;	// 352 = 0x160
    SCRCTargetSelectorTimer *_pendingBrailleHomeButtonPress;	// 360 = 0x168
    SCRCTargetSelectorTimer *_elementMonitorTimer;	// 368 = 0x170
    NSMutableDictionary *_elementMonitorCache;	// 376 = 0x178
    SCRCTargetSelectorTimer *_keyboardAlternativeModeActivationTimer;	// 384 = 0x180
    SCRCTargetSelectorTimer *_alternativeKeyDismissalTimer;	// 392 = 0x188
    _Bool _keyboardAlternativesVisible;	// 400 = 0x190
    struct CGPoint _keyboardAlternativeVisibleTrackingPoint;	// 408 = 0x198
    struct CGPoint _keyboardAlternativeVisibleStartPoint;	// 424 = 0x1a8
    NSString *_lastScrollStatus;	// 440 = 0x1b8
    struct CGPoint _fingerLocation;	// 448 = 0x1c0
    struct CGPoint _lastValidElementLocation;	// 464 = 0x1d0
    VOTElementRotor *_elementRotor;	// 480 = 0x1e0
    VOTRotor *_speechRotor;	// 488 = 0x1e8
    NSMutableArray *_cachedLaunchIcons;	// 496 = 0x1f0
    long long _selectedTextStartLocation;	// 504 = 0x1f8
    long long _selectedTextOperation;	// 512 = 0x200
    NSMutableDictionary *_lastSeenFontProperties;	// 520 = 0x208
    NSDictionary *_lastSeenLineAndColumn;	// 528 = 0x210
    long long _lastSeenApplicationOrientation;	// 536 = 0x218
    NSData *_textMarker;	// 544 = 0x220
    _VOTTextMarkerRange *_textMarkerRange;	// 552 = 0x228
    NSArray *_lineArray;	// 560 = 0x230
    long long _lineArrayPosition;	// 568 = 0x238
    struct CGRect _lineFrame;	// 576 = 0x240
    NSMutableDictionary *_flowFromElements;	// 608 = 0x260
    NSString *_bookLineString;	// 616 = 0x268
    _Bool _bookUpdatedCurrentLine;	// 624 = 0x270
    long long _bookLineNumber;	// 632 = 0x278
    struct _NSRange _bookLineRange;	// 640 = 0x280
    long long _bookCursorPosition;	// 656 = 0x290
    NSString *_bookPageScrollString;	// 664 = 0x298
    VOTElement *_bookSubelement;	// 672 = 0x2a0
    long long _bookLastContentMovementDirection;	// 680 = 0x2a8
    long long _bookLastContentMovementUnit;	// 688 = 0x2b0
    VOTOutputRequest *_bookPageContentOutputRequest;	// 696 = 0x2b8
    VOTOutputRequest *_readAllOutputRequest;	// 704 = 0x2c0
    VOTOutputRequest *_announcementRequest;	// 712 = 0x2c8
    int _announcementPid;	// 720 = 0x2d0
    NSString *_announcementOriginalString;	// 728 = 0x2d8
    VOTElement *_elementBeforeAlert;	// 736 = 0x2e0
    VOTElement *_elementBeforePopup;	// 744 = 0x2e8
    VOTElement *_elementBeforeStatusBarMovement;	// 752 = 0x2f0
    VOTElement *_webFormControlBeforeInteraction;	// 760 = 0x2f8
    double _lastWebKeyboardDismissTime;	// 768 = 0x300
    NSDictionary *_keyboardKeyCommands;	// 776 = 0x308
    struct CGPoint _passthroughFinish;	// 784 = 0x310
    struct CGPoint _passthroughOffset;	// 800 = 0x320
    struct CGPoint _passthroughStart;	// 816 = 0x330
    NSMutableSet *_directInteractionElements;	// 832 = 0x340
    NSString *_continuousPathSuggestion;	// 840 = 0x348
    SCRCTargetSelectorTimer *_continuousPathIdleTimer;	// 848 = 0x350
    double _webPageLoadingProgress;	// 856 = 0x358
    long long _cursorBorderHitCount;	// 864 = 0x360
    NSString *_lastTitleElemenTitle;	// 872 = 0x368
    NSLock *_trackingLock;	// 880 = 0x370
    VOTEvent *_mostRecentTrackingEvent;	// 888 = 0x378
    VOTElementUniqueIdentification *_labeledElementIdentification;	// 896 = 0x380
    VOTElement *_cachedLabelElement;	// 904 = 0x388
    long long _customActionIndex;	// 912 = 0x390
    NSString *_customActionIdentifier;	// 920 = 0x398
    NSDictionary *_currentPublicCustomRotorItemResult;	// 928 = 0x3a0
    NSString *_dataComprehensionActionIdentifier;	// 936 = 0x3a8
    long long _customContentIndex;	// 944 = 0x3b0
    NSArray *_allElements;	// 952 = 0x3b8
    VOTElement *_previousItemChooserElement;	// 960 = 0x3c0
    struct SCRCMathAverageValue _roadTravelAngle;	// 968 = 0x3c8
    VOTElement *_upcomingRoadElement;	// 1408 = 0x580
    struct CGPoint _firstRoadTravelPoint;	// 1416 = 0x588
    struct CGPoint _lastRoadTravelPoint;	// 1432 = 0x598
    struct CGPoint _intersectionTravelPoint;	// 1448 = 0x5a8
    _Bool _playingMapSound;	// 1464 = 0x5b8
    _Bool _shouldContinueRoadTracking;	// 1465 = 0x5b9
    SCRCTargetSelectorTimer *_switchRoadsAtIntersectionTimer;	// 1472 = 0x5c0
    VOTOutputRequest *_switchRoadsOutputRequest;	// 1480 = 0x5c8
    VOTOutputRequest *_endOfRoadApproachingRequest;	// 1488 = 0x5d0
    VOTOutputRequest *_startTrackingRoadRequest;	// 1496 = 0x5d8
    double _switchedToRoadTime;	// 1504 = 0x5e0
    _Bool _approachingEndOfRoad;	// 1512 = 0x5e8
    struct CGPoint _explorationStartPoint;	// 1520 = 0x5f0
    NSString *_webSearchText;	// 1536 = 0x600
    int _countOutputBlockGeneration;	// 1544 = 0x608
    NSMutableDictionary *_focusedElementsByElementCommunityIdentifier;	// 1552 = 0x610
    SCRCThread *_elementManagerThread;	// 1560 = 0x618
    SCRCThread *_systemEventThread;	// 1568 = 0x620
    SCRCThreadKey *_threadKey;	// 1576 = 0x628
    struct {
        _Bool lastEventWasIdle;
        _Bool elementCenterSoundPlaying;
        _Bool inStatusBar;
        _Bool focusIsOnElement;
        _Bool tapShouldHandleAutofill;
        _Bool tapShouldHandleTextOperation;
        _Bool usePenumbraForKeyboardKeys;
        _Bool shouldSpeakNextLayoutChange;
        _Bool visualRotorDisplayed;
        _Bool touchingOnNothing;
        _Bool isReadingAll;
        _Bool isReadingAllBook;
        _Bool previousScrollWasBookContentMovement;
        _Bool performedFlickNavigation;
        _Bool performedKeyboardNavigation;
        _Bool performedRotorTextNavigation;
        _Bool performedSearch;
        _Bool performedElementUpdateForSelectionChange;
        _Bool inPassthroughMode;
        _Bool didTouchTypingOutputStart;
        _Bool inSearchTextMode;
        _Bool itemChooserVisible;
        _Bool shouldSpeakSameLineTouched;
        _Bool inDirectTouchMode;
        _Bool currentElementAllowsDirectTouch;
        _Bool shouldTurnTrackingIntoDirectTouch;
        _Bool shouldUpdateRotorForElement;
        _Bool avoidAnnouncingDirectTouchArea;
        _Bool wasSendingToNativeSlide;
        _Bool preventCustomRotorItemIndexReset;
        _Bool shouldTriggerAlternativeKeyActivation;
        _Bool setReachabilityIsActiveWhileFingerDown;
        _Bool watchDisplayDidTurnOn;
        _Bool inKeyboardTextSelectionMode;
        _Bool continuousPathActivationDesired;
        _Bool continuousPathKeyboardBegan;
        _Bool isContinuousPathOutsideBounds;
        _Bool isMonitoringElements;
        long long lastElementMovement;
    } _flags;	// 1584 = 0x630
    double _lastAnnouncementNotificationTime;	// 1632 = 0x660
    double _lastLockScreenAlertSpokenTime;	// 1640 = 0x668
    struct _NSRange _keyboardTextSelectionStartRange;	// 1648 = 0x670
    _Bool _inTextProcessingRotorMode;	// 1664 = 0x680
    long long _lastUserTextSelectionDirection;	// 1672 = 0x688
    VOTElement *_currentSubElement;	// 1680 = 0x690
    long long _misspelledWordReplacementCycleIndex;	// 1688 = 0x698
    double _performedTextSelectionOperation;	// 1696 = 0x6a0
    _Bool _didPeekEvent;	// 1704 = 0x6a8
    _Bool _isInPreview;	// 1705 = 0x6a9
    NSMutableArray *_touchEventElements;	// 1712 = 0x6b0
    unsigned long long _lastTableRow;	// 1720 = 0x6b8
    _Bool _systemIsSleeping;	// 1728 = 0x6c0
    unsigned long long _elementSearchGeneration;	// 1736 = 0x6c8
    long long _elementUnitIndex;	// 1744 = 0x6d0
    struct _NSRange _elementUnitOutputRange;	// 1752 = 0x6d8
    SCRCTargetSelectorTimer *_elementUpdatesFrequentlyTimer;	// 1768 = 0x6e8
    NSString *_cachedFrequentUpdateText;	// 1776 = 0x6f0
    unsigned long long _lastSeenLineStartPositionForFontProperties;	// 1784 = 0x6f8
    _Bool _inUnitTestingMode;	// 1792 = 0x700
    _Bool _speakNonfocusableElementsAfterDelay;	// 1793 = 0x701
    _Bool _shouldSilenceAnnouncements;	// 1794 = 0x702
    _Bool _explorerElementsNeedUpdate;	// 1795 = 0x703
    _Bool _shouldReadExplorerElementsAfterSpeechFinished;	// 1796 = 0x704
    SCRCTargetSelectorTimer *_readExplorerElementsAfterSpeechFinishedTimer;	// 1800 = 0x708
    SCRCTargetSelectorTimer *_updateVisualsTimer;	// 1808 = 0x710
    SCRCTargetSelectorTimer *_updatePreferredTVInteractionModeTimer;	// 1816 = 0x718
    _Bool _isShowingVoiceOverEnabledWarningBanner;	// 1824 = 0x720
    double _lastUserEventNotificationTime;	// 1832 = 0x728
    NSString *_lastSpokenGuideElementHeaderText;	// 1840 = 0x730
    _Bool _systemNotificationInProgress;	// 1848 = 0x738
    _Bool _exploreFocusAffectsNativeFocus;	// 1849 = 0x739
    NSNumber *_lastScreenChangeSourceIdentifier;	// 1856 = 0x740
    _Bool _lastHandledEventWasRotorMovement;	// 1864 = 0x748
    SCRCTargetSelectorTimer *_tvRotorInteractionTimer;	// 1872 = 0x750
    _Bool _didIgnoreLastFirstResponderChangeOnSelectionChange;	// 1880 = 0x758
    _Bool _unitTestingMode;	// 1881 = 0x759
    _Bool _tvIsInteractingWithRotor;	// 1882 = 0x75a
    _Bool _didReceiveForceUpdateChangeToken;	// 1883 = 0x75b
    _Bool _didCacheSideAppDividerElement;	// 1884 = 0x75c
    _Bool _inTextSelection;	// 1885 = 0x75d
    _Bool _selectingRightward;	// 1886 = 0x75e
    _Bool _isUpdatingFocus;	// 1887 = 0x75f
    _Bool _needsUpdateFocus;	// 1888 = 0x760
    _Bool _waitingToRetryFocus;	// 1889 = 0x761
    id <VOTElementUpdateProtocol> _updateDelegate;	// 1896 = 0x768
    double _timeSpentOnNothing;	// 1904 = 0x770
    double _lastNothingSoundTime;	// 1912 = 0x778
    double _lastAlertTime;	// 1920 = 0x780
    double _lastSelectionChangeTime;	// 1928 = 0x788
    double _lastScreenChangeNotificationTime;	// 1936 = 0x790
    double _lastPressOnMediaSessionElement;	// 1944 = 0x798
    double _touchTypingStartTime;	// 1952 = 0x7a0
    double _lastFirstResponderChangeTime;	// 1960 = 0x7a8
    double _lastTemporaryQuickNavDisableTime;	// 1968 = 0x7b0
    double _lastEventOccurredTime;	// 1976 = 0x7b8
    NSString *_lastEventCommand;	// 1984 = 0x7c0
    double _lastValueChangeTime;	// 1992 = 0x7c8
    double _lastWebPageLoadTime;	// 2000 = 0x7d0
    double _lastSearchForElementsTime;	// 2008 = 0x7d8
    unsigned long long _currentSimilarTraits;	// 2016 = 0x7e0
    VOTElement *_previousFirstResponder;	// 2024 = 0x7e8
    NSString *_previousFirstResponderValue;	// 2032 = 0x7f0
    NSMutableDictionary *_fingersFromTouchCommands;	// 2040 = 0x7f8
    unsigned long long _lastTextPressAction;	// 2048 = 0x800
    VOTElement *_nativeFocusElement;	// 2056 = 0x808
    VOTElement *_initialReadAllElement;	// 2064 = 0x810
    CDUnknownBlockType _elementManagerHandledEventCallback;	// 2072 = 0x818
    CDUnknownBlockType _currentElementChangedCallback;	// 2080 = 0x820
    NSArray *_previouslySpokenImageCaptionResults;	// 2088 = 0x828
    double _lastCursorBorderHitTime;	// 2096 = 0x830
    double _lastActivationTime;	// 2104 = 0x838
    double _lastSilencedAlertTime;	// 2112 = 0x840
    double _lastScreenWakeViaPlayPause;	// 2120 = 0x848
    double _lastExternalUnlockTime;	// 2128 = 0x850
    double _lastFolderOperationTime;	// 2136 = 0x858
    double _lastHomeButtonPressTime;	// 2144 = 0x860
    double _lastBlockedRequestBySiriOrDictationTime;	// 2152 = 0x868
    double _lastUserElementTouchTime;	// 2160 = 0x870
    double _lastElementChangeTime;	// 2168 = 0x878
    VOTElement *_nextElementToFocus;	// 2176 = 0x880
    NSString *_nextStringToSpeakOnScreenChange;	// 2184 = 0x888
    NSMutableDictionary *_previousTableOrCollectionViewToIndexPath;	// 2192 = 0x890
    NSMutableArray *_previousTableOrCollectionViewList;	// 2200 = 0x898
    VOTElement *_previousTableOrCollectionViewApplication;	// 2208 = 0x8a0
    VOTElement *_cachedSideAppDividerElement;	// 2216 = 0x8a8
    NSArray *_cachedAdditionalElementCommunities;	// 2224 = 0x8b0
    VOTElement *_mostRecentElementCommunity;	// 2232 = 0x8b8
    VOTElement *_firstTrackedAppInGesture;	// 2240 = 0x8c0
    NSString *_springBoardActionHandlerIdentifier;	// 2248 = 0x8c8
    VOTOutputRequest *_delayedNotificationAnnouncementRequest;	// 2256 = 0x8d0
    long long _lastElementChangeAction;	// 2264 = 0x8d8
    VOTElement *_lastTrackingUpdateAppsFailureApplication;	// 2272 = 0x8e0
    double _lastTrackingUpdateAppsFailureTime;	// 2280 = 0x8e8
    double _lastDuckingDisablementSessionStart;	// 2288 = 0x8f0
    double _lastPauseSpeechAndHapticsStart;	// 2296 = 0x8f8
    double _continuousPathTimeout;	// 2304 = 0x900
    NSDictionary *_previousContextDescriptors;	// 2312 = 0x908
    NSDictionary *_currentContextDescriptors;	// 2320 = 0x910
    VOTElement *_lastElementForAttemptToShowContextMenu;	// 2328 = 0x918
    double _lastAttemptToShowContextMenuTime;	// 2336 = 0x920
    VOTExplorerElementManager *_explorerElementManager;	// 2344 = 0x928
    VOTTVSpeechRequestManager *_tvSpeechRequestManager;	// 2352 = 0x930
    VOTTVGestureRepeater *_tvGestureRepeater;	// 2360 = 0x938
    long long _forceUpdateMask;	// 2368 = 0x940
    long long _lastElementHeadingLevel;	// 2376 = 0x948
    long long _lastElementBlockquoteLevel;	// 2384 = 0x950
    NSLock *_tvAccessLock;	// 2392 = 0x958
    VOTUpdateFocusContext *_updateFocusContext;	// 2400 = 0x960
    long long _focusRetryAttempts;	// 2408 = 0x968
    VOTElement *_lastContainerForCustomRotorHint;	// 2416 = 0x970
    NSSet *_previousCustomRotorsForRotorHint;	// 2424 = 0x978
    VOTTextMovementManager *_textSelectionMovementManager;	// 2432 = 0x980
    VOTOutputRequest *_lastRequestBlockedBySiriOrDictation;	// 2440 = 0x988
    unsigned long long _elementGeneration;	// 2448 = 0x990
    unsigned long long _webPageLoadedGenerationMark;	// 2456 = 0x998
    NSURL *_webPageLoadURL;	// 2464 = 0x9a0
    SCRCTargetSelectorTimer *_webPageElementFinder;	// 2472 = 0x9a8
}

+ (void)_exitThread:(id)arg1;	// IMP=0x000000010005e4f4
+ (void)initialize;	// IMP=0x000000010005d438
- (void).cxx_destruct;	// IMP=0x00000001000b1f18
@property(retain, nonatomic) SCRCTargetSelectorTimer *webPageElementFinder; // @synthesize webPageElementFinder=_webPageElementFinder;
@property(retain, nonatomic) NSURL *webPageLoadURL; // @synthesize webPageLoadURL=_webPageLoadURL;
@property(nonatomic) unsigned long long webPageLoadedGenerationMark; // @synthesize webPageLoadedGenerationMark=_webPageLoadedGenerationMark;
@property(nonatomic) unsigned long long elementGeneration; // @synthesize elementGeneration=_elementGeneration;
@property(retain, nonatomic) VOTOutputRequest *lastRequestBlockedBySiriOrDictation; // @synthesize lastRequestBlockedBySiriOrDictation=_lastRequestBlockedBySiriOrDictation;
@property(retain, nonatomic) VOTTextMovementManager *textSelectionMovementManager; // @synthesize textSelectionMovementManager=_textSelectionMovementManager;
@property(retain, nonatomic) NSSet *previousCustomRotorsForRotorHint; // @synthesize previousCustomRotorsForRotorHint=_previousCustomRotorsForRotorHint;
@property(retain, nonatomic) VOTElement *lastContainerForCustomRotorHint; // @synthesize lastContainerForCustomRotorHint=_lastContainerForCustomRotorHint;
@property(nonatomic) _Bool waitingToRetryFocus; // @synthesize waitingToRetryFocus=_waitingToRetryFocus;
@property(nonatomic) long long focusRetryAttempts; // @synthesize focusRetryAttempts=_focusRetryAttempts;
@property(retain, nonatomic) VOTUpdateFocusContext *updateFocusContext; // @synthesize updateFocusContext=_updateFocusContext;
@property(retain, nonatomic) NSLock *tvAccessLock; // @synthesize tvAccessLock=_tvAccessLock;
@property(nonatomic) long long lastElementBlockquoteLevel; // @synthesize lastElementBlockquoteLevel=_lastElementBlockquoteLevel;
@property(nonatomic) long long lastElementHeadingLevel; // @synthesize lastElementHeadingLevel=_lastElementHeadingLevel;
@property(nonatomic) long long forceUpdateMask; // @synthesize forceUpdateMask=_forceUpdateMask;
@property(nonatomic) _Bool needsUpdateFocus; // @synthesize needsUpdateFocus=_needsUpdateFocus;
@property(nonatomic) _Bool isUpdatingFocus; // @synthesize isUpdatingFocus=_isUpdatingFocus;
@property(retain, nonatomic) VOTTVGestureRepeater *tvGestureRepeater; // @synthesize tvGestureRepeater=_tvGestureRepeater;
@property(retain, nonatomic) VOTTVSpeechRequestManager *tvSpeechRequestManager; // @synthesize tvSpeechRequestManager=_tvSpeechRequestManager;
@property(retain, nonatomic) VOTExplorerElementManager *explorerElementManager; // @synthesize explorerElementManager=_explorerElementManager;
@property(nonatomic) double lastAttemptToShowContextMenuTime; // @synthesize lastAttemptToShowContextMenuTime=_lastAttemptToShowContextMenuTime;
@property(retain, nonatomic) VOTElement *lastElementForAttemptToShowContextMenu; // @synthesize lastElementForAttemptToShowContextMenu=_lastElementForAttemptToShowContextMenu;
@property(retain, nonatomic) NSDictionary *currentContextDescriptors; // @synthesize currentContextDescriptors=_currentContextDescriptors;
@property(retain, nonatomic) NSDictionary *previousContextDescriptors; // @synthesize previousContextDescriptors=_previousContextDescriptors;
@property(nonatomic) double continuousPathTimeout; // @synthesize continuousPathTimeout=_continuousPathTimeout;
@property(nonatomic) double lastPauseSpeechAndHapticsStart; // @synthesize lastPauseSpeechAndHapticsStart=_lastPauseSpeechAndHapticsStart;
@property(nonatomic) double lastDuckingDisablementSessionStart; // @synthesize lastDuckingDisablementSessionStart=_lastDuckingDisablementSessionStart;
@property(nonatomic) double lastTrackingUpdateAppsFailureTime; // @synthesize lastTrackingUpdateAppsFailureTime=_lastTrackingUpdateAppsFailureTime;
@property(retain, nonatomic) VOTElement *lastTrackingUpdateAppsFailureApplication; // @synthesize lastTrackingUpdateAppsFailureApplication=_lastTrackingUpdateAppsFailureApplication;
@property(nonatomic) long long lastElementChangeAction; // @synthesize lastElementChangeAction=_lastElementChangeAction;
@property(retain, nonatomic) VOTOutputRequest *delayedNotificationAnnouncementRequest; // @synthesize delayedNotificationAnnouncementRequest=_delayedNotificationAnnouncementRequest;
@property(nonatomic) _Bool selectingRightward; // @synthesize selectingRightward=_selectingRightward;
@property(nonatomic) _Bool inTextSelection; // @synthesize inTextSelection=_inTextSelection;
@property(copy, nonatomic) NSString *springBoardActionHandlerIdentifier; // @synthesize springBoardActionHandlerIdentifier=_springBoardActionHandlerIdentifier;
@property(retain, nonatomic) VOTElement *firstTrackedAppInGesture; // @synthesize firstTrackedAppInGesture=_firstTrackedAppInGesture;
@property(retain, nonatomic) VOTElement *mostRecentElementCommunity; // @synthesize mostRecentElementCommunity=_mostRecentElementCommunity;
@property(retain, nonatomic) NSArray *cachedAdditionalElementCommunities; // @synthesize cachedAdditionalElementCommunities=_cachedAdditionalElementCommunities;
@property(retain, nonatomic) VOTElement *cachedSideAppDividerElement; // @synthesize cachedSideAppDividerElement=_cachedSideAppDividerElement;
@property(nonatomic) _Bool didCacheSideAppDividerElement; // @synthesize didCacheSideAppDividerElement=_didCacheSideAppDividerElement;
@property(retain, nonatomic) VOTElement *previousTableOrCollectionViewApplication; // @synthesize previousTableOrCollectionViewApplication=_previousTableOrCollectionViewApplication;
@property(retain, nonatomic) NSMutableArray *previousTableOrCollectionViewList; // @synthesize previousTableOrCollectionViewList=_previousTableOrCollectionViewList;
@property(retain, nonatomic) NSMutableDictionary *previousTableOrCollectionViewToIndexPath; // @synthesize previousTableOrCollectionViewToIndexPath=_previousTableOrCollectionViewToIndexPath;
@property(nonatomic) _Bool didReceiveForceUpdateChangeToken; // @synthesize didReceiveForceUpdateChangeToken=_didReceiveForceUpdateChangeToken;
@property(retain, nonatomic) NSString *nextStringToSpeakOnScreenChange; // @synthesize nextStringToSpeakOnScreenChange=_nextStringToSpeakOnScreenChange;
@property(retain, nonatomic) VOTElement *nextElementToFocus; // @synthesize nextElementToFocus=_nextElementToFocus;
@property(nonatomic) double lastElementChangeTime; // @synthesize lastElementChangeTime=_lastElementChangeTime;
@property(nonatomic) double lastUserElementTouchTime; // @synthesize lastUserElementTouchTime=_lastUserElementTouchTime;
@property(nonatomic) double lastBlockedRequestBySiriOrDictationTime; // @synthesize lastBlockedRequestBySiriOrDictationTime=_lastBlockedRequestBySiriOrDictationTime;
@property(nonatomic) double lastHomeButtonPressTime; // @synthesize lastHomeButtonPressTime=_lastHomeButtonPressTime;
@property(nonatomic) double lastFolderOperationTime; // @synthesize lastFolderOperationTime=_lastFolderOperationTime;
@property(nonatomic) double lastExternalUnlockTime; // @synthesize lastExternalUnlockTime=_lastExternalUnlockTime;
@property(nonatomic) double lastScreenWakeViaPlayPause; // @synthesize lastScreenWakeViaPlayPause=_lastScreenWakeViaPlayPause;
@property(nonatomic) double lastSilencedAlertTime; // @synthesize lastSilencedAlertTime=_lastSilencedAlertTime;
@property(nonatomic) double lastActivationTime; // @synthesize lastActivationTime=_lastActivationTime;
@property(nonatomic) double lastCursorBorderHitTime; // @synthesize lastCursorBorderHitTime=_lastCursorBorderHitTime;
@property(retain, nonatomic) NSArray *previouslySpokenImageCaptionResults; // @synthesize previouslySpokenImageCaptionResults=_previouslySpokenImageCaptionResults;
@property(nonatomic) _Bool tvIsInteractingWithRotor; // @synthesize tvIsInteractingWithRotor=_tvIsInteractingWithRotor;
@property(copy, nonatomic) CDUnknownBlockType currentElementChangedCallback; // @synthesize currentElementChangedCallback=_currentElementChangedCallback;
@property(copy, nonatomic) CDUnknownBlockType elementManagerHandledEventCallback; // @synthesize elementManagerHandledEventCallback=_elementManagerHandledEventCallback;
@property(nonatomic) _Bool unitTestingMode; // @synthesize unitTestingMode=_unitTestingMode;
@property(retain, nonatomic) VOTElement *initialReadAllElement; // @synthesize initialReadAllElement=_initialReadAllElement;
@property(retain, nonatomic) VOTElement *nativeFocusElement; // @synthesize nativeFocusElement=_nativeFocusElement;
@property(nonatomic) unsigned long long lastTextPressAction; // @synthesize lastTextPressAction=_lastTextPressAction;
@property(nonatomic) _Bool didIgnoreLastFirstResponderChangeOnSelectionChange; // @synthesize didIgnoreLastFirstResponderChangeOnSelectionChange=_didIgnoreLastFirstResponderChangeOnSelectionChange;
@property(retain, nonatomic) NSMutableDictionary *fingersFromTouchCommands; // @synthesize fingersFromTouchCommands=_fingersFromTouchCommands;
@property(copy, nonatomic) NSString *previousFirstResponderValue; // @synthesize previousFirstResponderValue=_previousFirstResponderValue;
@property(retain, nonatomic) VOTElement *previousFirstResponder; // @synthesize previousFirstResponder=_previousFirstResponder;
@property(nonatomic) unsigned long long currentSimilarTraits; // @synthesize currentSimilarTraits=_currentSimilarTraits;
@property(nonatomic) double lastSearchForElementsTime; // @synthesize lastSearchForElementsTime=_lastSearchForElementsTime;
@property(nonatomic) double lastWebPageLoadTime; // @synthesize lastWebPageLoadTime=_lastWebPageLoadTime;
@property(nonatomic) double lastValueChangeTime; // @synthesize lastValueChangeTime=_lastValueChangeTime;
@property(retain, nonatomic) NSString *lastEventCommand; // @synthesize lastEventCommand=_lastEventCommand;
@property(nonatomic) double lastEventOccurredTime; // @synthesize lastEventOccurredTime=_lastEventOccurredTime;
@property(nonatomic) double lastTemporaryQuickNavDisableTime; // @synthesize lastTemporaryQuickNavDisableTime=_lastTemporaryQuickNavDisableTime;
@property(nonatomic) double lastFirstResponderChangeTime; // @synthesize lastFirstResponderChangeTime=_lastFirstResponderChangeTime;
@property(nonatomic) double touchTypingStartTime; // @synthesize touchTypingStartTime=_touchTypingStartTime;
@property(nonatomic) double lastPressOnMediaSessionElement; // @synthesize lastPressOnMediaSessionElement=_lastPressOnMediaSessionElement;
@property(nonatomic) double lastScreenChangeNotificationTime; // @synthesize lastScreenChangeNotificationTime=_lastScreenChangeNotificationTime;
@property(nonatomic) double lastSelectionChangeTime; // @synthesize lastSelectionChangeTime=_lastSelectionChangeTime;
@property(nonatomic) double lastAlertTime; // @synthesize lastAlertTime=_lastAlertTime;
@property(nonatomic) double lastNothingSoundTime; // @synthesize lastNothingSoundTime=_lastNothingSoundTime;
@property(nonatomic) double timeSpentOnNothing; // @synthesize timeSpentOnNothing=_timeSpentOnNothing;
@property(nonatomic) __weak id <VOTElementUpdateProtocol> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(retain, nonatomic) VOTElement *touchContainer; // @synthesize touchContainer=_touchContainer;
- (void)fillCacheWithElements:(id)arg1;	// IMP=0x00000001000b1934
- (void)_setFetchManager:(id)arg1;	// IMP=0x00000001000b18b4
- (id)_fetchManager;	// IMP=0x00000001000b18ac
- (id)_lastSeenFontProperties;	// IMP=0x00000001000b18a4
- (void)outputManager:(id)arg1 willProcessNextRequest:(id)arg2;	// IMP=0x00000001000b1894
- (void)outputManagerDidFinishProcessingQueuedRequests:(id)arg1;	// IMP=0x00000001000b1880
- (long long)actionsRotorAddBehaviorForElementRotor:(id)arg1;	// IMP=0x00000001000b1878
- (long long)tvInteractionModeForElementRotor:(id)arg1;	// IMP=0x00000001000b1860
- (void)rotor:(id)arg1 didChangeFrom:(long long)arg2 to:(long long)arg3 userInitiated:(_Bool)arg4;	// IMP=0x00000001000b1658
- (id)elementRotor;	// IMP=0x00000001000b1650
- (void)moveToElementMatchingRotorType:(long long)arg1 inDirection:(long long)arg2;	// IMP=0x00000001000b1638
- (void)resetFrequentUpdateTextCache;	// IMP=0x00000001000b1628
- (void)_elementUpdatesFrequently;	// IMP=0x00000001000b1204
- (_Bool)_elementMonitoringOutputElement:(id)arg1 userMonitored:(_Bool)arg2;	// IMP=0x00000001000b0f30
- (_Bool)stringIsTextAttachment:(id)arg1;	// IMP=0x00000001000b0e60
- (id)_textAttachmentElementForString:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00000001000b0d90
- (void)outputTextSegmentForRange:(struct _NSRange)arg1 string:(id)arg2 element:(id)arg3 usePhonetics:(_Bool)arg4 segment:(long long)arg5;	// IMP=0x00000001000b06b0
- (id)_listItemLabelForAXAttributedString:(id)arg1;	// IMP=0x00000001000b05e0
- (void)updateIndexesForOutputRange:(struct _NSRange)arg1 segment:(long long)arg2 direction:(long long)arg3 outputStringLength:(unsigned long long)arg4;	// IMP=0x00000001000b05b4
- (struct _NSRange)outputRangeForTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000b04b4
- (void)outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000b03c4
- (struct _NSRange)_outputRangeForCharacterSegment:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000b02c8
- (void)gestureRepeater:(id)arg1 repeaterEventDidFire:(long long)arg2;	// IMP=0x00000001000b022c
- (void)gestureRepeaterWillSendFirstRepeaterEvent:(id)arg1;	// IMP=0x00000001000b01b4
- (void)_sendUserEventOccurredIfNeeded;	// IMP=0x00000001000b0108
- (void)explorerElementManager:(id)arg1 didFinishReadAll:(_Bool)arg2;	// IMP=0x00000001000b0034
- (void)explorerElementManager:(id)arg1 willReadElement:(id)arg2;	// IMP=0x00000001000affb0
- (_Bool)explorerElementManagerShouldBeInUnitTestingMode:(id)arg1;	// IMP=0x00000001000affa4
- (void)explorerElementManager:(id)arg1 didSetExplorerElementFocus:(id)arg2;	// IMP=0x00000001000aff98
- (void)willBeginReadAll:(id)arg1;	// IMP=0x00000001000aff90
- (void)_updateExplorerElementsIfNeeded;	// IMP=0x00000001000afda0
- (void)__interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000afc9c
- (void)_interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000afc78
- (void)__sendOutputRequest:(id)arg1;	// IMP=0x00000001000afbe8
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000af7e4
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000af7d0
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000af6dc
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000af6c8
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 announcement:(_Bool)arg3 brailleOnly:(_Bool)arg4;	// IMP=0x00000001000af6b0
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2;	// IMP=0x00000001000af698
- (void)_tvRotorInteractionTimerFired;	// IMP=0x00000001000af620
- (void)__tvOS_HandleToggleNavigationStyle:(id)arg1;	// IMP=0x00000001000af42c
- (void)__tvOS_handleValueChangedWithType:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3 insertedTextOrNil:(id)arg4 isSecureText:(_Bool)arg5;	// IMP=0x00000001000aeef8
- (void)_readExplorerElementsAfterSpeechFinishedTimerFired;	// IMP=0x00000001000aed8c
- (void)__tvOS_handleUpdatePreferredTVInteractionModeTimer;	// IMP=0x00000001000aecd4
- (void)__handleUpdateVisualsTimer;	// IMP=0x00000001000aec60
- (void)__updateVoiceOverEnabledWarningBannerVisibility;	// IMP=0x00000001000ae9bc
- (void)_performTouchPadTapAtLocation:(struct CGPoint)arg1;	// IMP=0x00000001000ae898
- (id)__targetElementForFocusElement:(id)arg1 mustBeAccessibilityElement:(_Bool)arg2;	// IMP=0x00000001000ae760
- (id)__consumeAppTransitionForAnnouncingIfNeeded:(id)arg1;	// IMP=0x00000001000ae578
- (_Bool)_bundleIdentifierIsHostedByPineBoard:(id)arg1;	// IMP=0x00000001000ae4b0
- (void)_tvOS_updateWithNativeFocus;	// IMP=0x00000001000ad82c
- (void)_tvOS_retryUpdateWithNativeFocus;	// IMP=0x00000001000ad6b4
- (id)_focusElementForFocusUpdate:(id)arg1;	// IMP=0x00000001000ad548
- (void)_tvOS_handleUpdateWithNativeFocusFromTimer;	// IMP=0x00000001000ad4b8
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelay:(double)arg2;	// IMP=0x00000001000ad2e8
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelayNumber:(id)arg2;	// IMP=0x00000001000ad28c
- (_Bool)_didFocusUpdateOriginateFromFocusedApp:(id)arg1;	// IMP=0x00000001000ad0ac
- (void)__updateElementVisuals;	// IMP=0x00000001000acf78
- (void)__tvOS_toggleExploreFocusAffectsNativeFocusPreference;	// IMP=0x00000001000ace34
- (void)__tvOS_toggleSilenceAnnouncementsUserPreference;	// IMP=0x00000001000accf0
- (long long)_tvOS_userPreferredNonDirectTouchInteractionMode;	// IMP=0x00000001000acce8
- (void)__tvOS_toggleSpeakNonfocusableElementsAfterDelayUserPreference;	// IMP=0x00000001000acba4
- (void)__tvOS_toggleAudioDescriptions;	// IMP=0x00000001000ac9fc
- (void)__sendHIDEvents:(id)arg1 postEventDelays:(id)arg2;	// IMP=0x00000001000ac72c
- (void)__sendTVRemoteCommand:(unsigned long long)arg1;	// IMP=0x00000001000ac2d4
- (_Bool)_sendTVRemoteCommandOverrideForAXCommand:(long long)arg1;	// IMP=0x00000001000ac220
- (void)__handleTVSelectButtonClicked;	// IMP=0x00000001000abee4
- (void)__handleTVMenuButtonClicked;	// IMP=0x00000001000abdcc
- (_Bool)handleTVSelectButtonClicked;	// IMP=0x00000001000abd24
- (_Bool)handleTVMenuButtonClicked;	// IMP=0x00000001000abc9c
- (_Bool)_isDictationInProgressForCurrentApp;	// IMP=0x00000001000abbf8
@property(nonatomic) _Bool exploreFocusAffectsNativeFocus;
@property(nonatomic) _Bool shouldSilenceAnnouncements;
@property(nonatomic) _Bool speakNonfocusableElementsAfterDelay;
- (id)focusedApplication:(id)arg1;	// IMP=0x00000001000ab69c
- (void)_setLastSeenDeviceOrientation:(long long)arg1;	// IMP=0x00000001000ab694
- (void)_handlePerformEjectButtonPress:(id)arg1;	// IMP=0x00000001000ab67c
- (void)_handlePerformVolumeDownButtonPress:(id)arg1;	// IMP=0x00000001000ab664
- (void)_handlePerformVolumeUpButtonPress:(id)arg1;	// IMP=0x00000001000ab64c
- (_Bool)shouldAllowSpeaking;	// IMP=0x00000001000ab618
- (_Bool)_processWatchSpecificOverrides:(id)arg1;	// IMP=0x00000001000ab598
- (void)_handleKeyboardCommandEvent:(id)arg1;	// IMP=0x00000001000aabb8
- (void)_speakBrailleAutoAdvanceSpeed;	// IMP=0x00000001000aaa8c
- (double)_brailleAutoAdvanceStepFactor;	// IMP=0x00000001000aaa4c
- (void)_handleBrailleIncreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00000001000aa8c0
- (void)_handleBrailleDecreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00000001000aa734
- (void)_handleBrailleEnableAutoAdvance:(id)arg1;	// IMP=0x00000001000aa61c
- (void)_handleBrailleWordWrapToggleEvent:(id)arg1;	// IMP=0x00000001000aa4ec
- (void)_handleBrailleRefreshEvent:(id)arg1;	// IMP=0x00000001000aa3e0
- (void)_handleBrailleEvent:(id)arg1;	// IMP=0x00000001000aa370
- (void)_handleActivateBrailleScreenInput:(id)arg1;	// IMP=0x00000001000aa358
- (void)_handleAnnounceQuickNav:(id)arg1;	// IMP=0x00000001000aa104
- (void)_handleToggleQuickNav:(id)arg1;	// IMP=0x00000001000aa05c
- (void)_handleToggleSingleLetterQuickNav:(id)arg1;	// IMP=0x00000001000a9d08
- (void)_handleToggleVoiceOverModifierKeyLock:(id)arg1;	// IMP=0x00000001000a9c00
- (void)_handleSiriFinishedListening:(id)arg1;	// IMP=0x00000001000a9be4
- (void)_handleSiriStartedListening:(id)arg1;	// IMP=0x00000001000a9b7c
- (void)_handleSiriFinishedTalking:(id)arg1;	// IMP=0x00000001000a9ad0
- (void)_handleSiriStartedTalking:(id)arg1;	// IMP=0x00000001000a9ab4
- (void)_handleHomeButtonPress;	// IMP=0x00000001000a9784
- (void)handleHomeButtonPress;	// IMP=0x00000001000a9780
- (void)handlePlayPauseButtonPress;	// IMP=0x00000001000a977c
- (void)_handlePlayPauseButtonPress;	// IMP=0x00000001000a9744
- (_Bool)_shouldSuppressSpeechForPlayPause;	// IMP=0x00000001000a9714
- (void)handleStateReset;	// IMP=0x00000001000a96f0
- (void)_handleStateReset;	// IMP=0x00000001000a9684
- (void)_handleDecreaseVolume:(id)arg1;	// IMP=0x00000001000a9610
- (void)_handleIncreaseVolume:(id)arg1;	// IMP=0x00000001000a95a0
- (void)_handleVolumeChange:(float)arg1;	// IMP=0x00000001000a9420
- (void)_handleRotateOrientation:(id)arg1;	// IMP=0x00000001000a93b0
- (_Bool)_shouldAllowSpeakThisGesture;	// IMP=0x00000001000a93a8
- (_Bool)allowsSystemControlEventForPosition:(int)arg1;	// IMP=0x00000001000a93a0
- (void)_handleSiriShortcutEvent:(id)arg1;	// IMP=0x00000001000a939c
- (void)_handleSystemCommandSwitchToNextApp:(id)arg1;	// IMP=0x00000001000a9350
- (void)_handleSystemCommandSwitchToPreviousApp:(id)arg1;	// IMP=0x00000001000a9304
- (void)_handleSystemCommandTakeScreenshot:(id)arg1;	// IMP=0x00000001000a92bc
- (void)_handleSystemCommandToggleReachability:(id)arg1;	// IMP=0x00000001000a9274
- (void)_handleSystemCommandActivateAccessibilityShortcut:(id)arg1;	// IMP=0x00000001000a922c
- (void)_handleSystemCommandSpotlight:(id)arg1;	// IMP=0x00000001000a91e4
- (void)_handleSystemCommandActivateLockButton:(id)arg1;	// IMP=0x00000001000a919c
- (void)_handleSystemCommandToggleAppSwitcher:(id)arg1;	// IMP=0x00000001000a9154
- (void)_handleSystemCommandToggleDock:(id)arg1;	// IMP=0x00000001000a910c
- (void)_handleSystemCommandActivateSpeakScreen:(id)arg1;	// IMP=0x00000001000a9100
- (void)_handleSystemCommandControlCenter:(id)arg1;	// IMP=0x00000001000a90b8
- (void)_handleSystemCommandNotificationCenter:(id)arg1;	// IMP=0x00000001000a9070
- (void)_handleSystemControlActivation:(id)arg1;	// IMP=0x00000001000a8efc
- (void)_handleScrollByPageNotification:(id)arg1;	// IMP=0x00000001000a7e0c
- (void)_handleAutoCorrectionMadeNotification:(id)arg1;	// IMP=0x00000001000a7bc4
- (void)_handleKeyboardChangedNotification;	// IMP=0x00000001000a7b10
- (void)_handleAutoCorrectionDisplayNotification:(id)arg1;	// IMP=0x00000001000a78d8
- (id)continuousPathSuggestion;	// IMP=0x00000001000a78d0
- (void)_handleUnmuteEligibleEventOccured;	// IMP=0x00000001000a7888
- (void)_handleReleaseExclusiveAudioHardware;	// IMP=0x00000001000a786c
- (void)_handleRequestExclusiveAudioHardware;	// IMP=0x00000001000a77c4
- (void)_handleStopSpeaking;	// IMP=0x00000001000a7738
- (void)_handleScreenOffSilently;	// IMP=0x00000001000a7718
- (void)_handleScreenOnSilently;	// IMP=0x00000001000a76f8
- (void)_handleScreenOff;	// IMP=0x00000001000a7660
- (void)_handleScreenOn;	// IMP=0x00000001000a75f4
- (void)_handleDidReceiveVisionEngineResult:(id)arg1;	// IMP=0x00000001000a72ac
- (void)_handleCaptionsDisplayedNotification:(id)arg1;	// IMP=0x00000001000a7190
- (void)_captionsDisplayedWithTextRuns:(id)arg1;	// IMP=0x00000001000a6f1c
- (void)_handleVisualsUpdate:(id)arg1;	// IMP=0x00000001000a6eb4
- (void)_handleWebPageLoaded:(id)arg1;	// IMP=0x00000001000a6a74
- (_Bool)_moveToWebItemDuringLoadIfNecessary;	// IMP=0x00000001000a67e8
- (void)_webPageLoadingSound;	// IMP=0x00000001000a670c
- (void)_webPageElementFinder;	// IMP=0x00000001000a663c
- (void)_clearWebLoadedSound;	// IMP=0x00000001000a65d4
- (void)_handleScreenChange:(id)arg1 sound:(id)arg2;	// IMP=0x00000001000a5d20
- (void)_updateFocusContext:(id)arg1;	// IMP=0x00000001000a5c34
- (void)_handleApplicationWasActivated:(id)arg1;	// IMP=0x00000001000a59d4
- (void)_updateDisplayWithCurrentElement;	// IMP=0x00000001000a5984
- (void)_handleAlertReceived:(id)arg1 forApplication:(struct __AXUIElement *)arg2;	// IMP=0x00000001000a4e34
- (id)_retrieveDefaultElementForPosition:(struct CGPoint)arg1;	// IMP=0x00000001000a4adc
- (void)_systemNotificationInProgressForRequest:(id)arg1;	// IMP=0x00000001000a4a68
- (id)_handleEditingStyleResolutionForAnnouncement:(id)arg1;	// IMP=0x00000001000a4730
- (void)_handleAnnouncementWithData:(id)arg1 pid:(int)arg2;	// IMP=0x00000001000a4298
- (void)_handleAnnouncement:(id)arg1;	// IMP=0x00000001000a4288
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00000001000a4248
- (void)_handleAnnouncementNotification:(id)arg1;	// IMP=0x00000001000a4090
- (void)_reupdateTextSelectionInformation;	// IMP=0x00000001000a404c
- (void)_handleInvalidTextInputNotification:(id)arg1;	// IMP=0x00000001000a3fd4
- (void)_handleInvalidStatusChanged:(id)arg1;	// IMP=0x00000001000a3f20
- (void)_handleExpandedStatusChanged:(id)arg1;	// IMP=0x00000001000a3ea4
- (void)__handleExpandedStatusChanged;	// IMP=0x00000001000a3b34
- (void)_handleAppSuspendAnimationProgressNotification:(id)arg1;	// IMP=0x00000001000a3a34
- (void)_appSuspensionSoundTimer;	// IMP=0x00000001000a397c
- (void)_handleKeyboardKeySelectedNotification:(id)arg1;	// IMP=0x00000001000a3714
- (void)_handleElementMoved:(struct __AXUIElement *)arg1;	// IMP=0x00000001000a34ec
- (void)_processSilentValueChange;	// IMP=0x00000001000a342c
- (void)_processValueChangeWithFirstResponder:(id)arg1 existingFirstResponder:(_Bool)arg2 changeType:(id)arg3 changeOrigination:(long long)arg4 isQuiet:(_Bool)arg5;	// IMP=0x00000001000a1910
- (void)resetTextAndSelectionCaches;	// IMP=0x00000001000a18c0
- (void)_handleTextReplacementOccurredNotification:(id)arg1;	// IMP=0x00000001000a1828
- (void)_handleValueChangedNotification:(id)arg1;	// IMP=0x00000001000a1524
- (_Bool)_ignoreTextEditingNotificationsForPickerElementUsage;	// IMP=0x00000001000a1340
- (long long)typingFeedbackForKeyboardType;	// IMP=0x00000001000a11bc
- (void)_cancelPreviousElementSearch;	// IMP=0x00000001000a11a0
- (void)_updateCurrentElementForTextInputSelectionChangeIfNeeded;	// IMP=0x00000001000a0db8
- (struct _NSRange)_elementSelectionRange;	// IMP=0x00000001000a0dac
- (void)_elementSelectionRangeDidChange:(struct _NSRange)arg1 reason:(long long)arg2;	// IMP=0x00000001000a0d74
- (void)_handleSelectionChangedNotification:(id)arg1;	// IMP=0x000000010009f058
- (_Bool)_isKeyboardLineMovement;	// IMP=0x000000010009ef00
- (void)_handleWebSelectionChangedNotification:(id)arg1;	// IMP=0x000000010009e9c4
- (_Bool)_hasCurrentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009e988
- (id)_currentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009e978
- (_Bool)_hasApplicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009e904
- (id)_applicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009e7b0
- (void)_outputWebLineWithMarkerRange:(id)arg1 withElement:(id)arg2;	// IMP=0x000000010009e538
- (_Bool)_shouldSwitchToFirstResponder:(id)arg1;	// IMP=0x000000010009e3d8
- (void)_handleFirstResponderChangedNotification:(id)arg1;	// IMP=0x000000010009dcb8
- (void)_handleNativeFocusItemChangedNotification:(id)arg1;	// IMP=0x000000010009d9fc
- (id)_firstResponderFromCurrentApplications;	// IMP=0x000000010009d8c8
- (void)_handleMoveToElementNotification:(id)arg1;	// IMP=0x000000010009d494
- (void)_moveToElement:(id)arg1 shouldPlaySound:(_Bool)arg2 echoSameTouchContainer:(_Bool)arg3 moveToElementNotification:(_Bool)arg4;	// IMP=0x000000010009d148
- (_Bool)_finishHandlingMoveToElementNotification:(id)arg1 shouldSyncNativeFocusElement:(id)arg2;	// IMP=0x000000010009cf28
- (id)_verifiedElementWithElement:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x000000010009ce30
- (id)_verifiedElementWithElement:(id)arg1;	// IMP=0x000000010009ca38
- (_Bool)_shouldAnnounceCustomRotorHintForElement:(id)arg1;	// IMP=0x000000010009c644
- (void)elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009c604
- (void)_elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009c548
- (void)updateCurrentElementFrame;	// IMP=0x000000010009c4d8
- (void)_updateCursorFrameForLineFrameMovement:(id)arg1;	// IMP=0x000000010009c3ac
- (void)_updateCursorFrameForElementIfNeeded:(id)arg1;	// IMP=0x000000010009c330
- (void)_updateCurrentElementFrame;	// IMP=0x000000010009c2b8
- (void)_updateFirstResponder;	// IMP=0x000000010009c190
- (struct __AXUIElement *)_firstResponderAXUIElementRefFromCurrentApplications;	// IMP=0x000000010009bf3c
- (void)setFirstResponder:(id)arg1;	// IMP=0x000000010009be54
- (void)setCurrentElement:(id)arg1;	// IMP=0x000000010009bd7c
- (void)_updateFirstResponderTypingBuffer;	// IMP=0x000000010009bc78
- (void)_handleLayoutChange:(_Bool)arg1;	// IMP=0x000000010009a0c4
- (void)_handleLayoutChangeFromTimer;	// IMP=0x000000010009a0b4
- (void)_handleElementChangedNotification:(id)arg1;	// IMP=0x0000000100099ddc
- (void)_handleSystemLockedOutputBehavior:(id)arg1 shouldSendRequest:(_Bool *)arg2 startElement:(id *)arg3;	// IMP=0x00000001000999f8
- (id)_firstElementWithCurrentElement:(id)arg1 focusedApplications:(id)arg2;	// IMP=0x00000001000997fc
- (id)_getAutoSpeakWatchFaceElements:(id)arg1;	// IMP=0x0000000100099744
- (void)_updateApplicationAndSpeak:(id)arg1;	// IMP=0x0000000100096f64
- (_Bool)_isWebAppStillOpen;	// IMP=0x0000000100096eac
- (void)_testingSetApplications:(id)arg1;	// IMP=0x0000000100096ea0
- (_Bool)_addApplicationLabelsAndSummariesToRequest:(id)arg1 applicationNames:(id *)arg2 summaryElements:(id *)arg3;	// IMP=0x0000000100096e00
- (id)_retrieveCachedFocusedElementForElementCommunity:(id)arg1;	// IMP=0x0000000100096b94
- (void)_cacheFocusedElement:(id)arg1 forElementCommunity:(id)arg2;	// IMP=0x0000000100096adc
- (id)_elementCommunityForElement:(id)arg1;	// IMP=0x0000000100096944
- (id)_firstElementForFocusFromElementCommunities:(id)arg1 currentElement:(id)arg2;	// IMP=0x00000001000966cc
- (id)_firstResponderForApplications:(id)arg1;	// IMP=0x000000010009658c
- (void)updateApplicationAndSpeak:(id)arg1;	// IMP=0x0000000100096588
- (void)voiceOverDidRegisterWithSystem;	// IMP=0x00000001000964c4
- (void)_handleUpdateAppFromTimer;	// IMP=0x0000000100096404
- (_Bool)_reDispatchUpdateAppFromTimerIfBundlesAreNotReady;	// IMP=0x00000001000961e0
- (id)_cachedLaunchIcon:(id)arg1;	// IMP=0x0000000100095f94
- (void)outputRequestFinished:(id)arg1;	// IMP=0x0000000100095f54
- (void)_outputRequestFinished:(id)arg1;	// IMP=0x0000000100095888
- (double)_alternativeKeyActivateTime;	// IMP=0x0000000100095814
- (id)_updateTouchContainerForElement:(id)arg1 playSound:(_Bool)arg2;	// IMP=0x0000000100095640
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x00000001000955c0
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4 isProtectedApp:(_Bool)arg5;	// IMP=0x0000000100095540
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 canSetAsCurrentElement:(_Bool)arg4 shouldPlayGuideWireSound:(_Bool)arg5 isProtectedApp:(_Bool)arg6 includeHint:(_Bool)arg7 boundaryHit:(_Bool)arg8;	// IMP=0x000000010009443c
- (id)_getSpeakableContainerForContainer:(id)arg1;	// IMP=0x0000000100094300
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4;	// IMP=0x0000000100094294
- (_Bool)_addElementCommunityNameIfNeededToRequest:(id)arg1 oldElementCommunity:(id)arg2 newElementCommunity:(id)arg3;	// IMP=0x0000000100093fd8
- (id)_echoDifferentTouchContainer:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100093dac
- (void)_drawTouchContainerFrame;	// IMP=0x0000000100093d9c
- (void)_echoNoElementForEvent:(id)arg1;	// IMP=0x0000000100093c54
- (void)_echoSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100093bd8
- (void)_handleMapSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100093538
- (void)_addFormattedStringToRequest:(id)arg1 formattedString:(id)arg2 withElement:(id)arg3;	// IMP=0x0000000100093364
- (void)_switchToOtherRoad;	// IMP=0x00000001000931c8
- (void)_processPassthroughAllowedWithEvent:(id)arg1 initialTouch:(_Bool)arg2;	// IMP=0x0000000100092f9c
- (void)_finishPassthroughMode;	// IMP=0x0000000100092f28
- (void)_echoStatusBarStatus:(id)arg1;	// IMP=0x0000000100092e28
- (_Bool)_echoLineInElement:(id)arg1 forEvent:(id)arg2 forDifferentElement:(_Bool)arg3;	// IMP=0x0000000100092340
- (void)_setLastSeenLineAndColumn:(id)arg1;	// IMP=0x0000000100092314
- (void)_outputDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x000000010009229c
- (id)_checkDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x0000000100091f50
- (_Bool)_shouldDismissKeyboardForMovingTooFarAlongYAxisWithEvent:(id)arg1;	// IMP=0x0000000100091e8c
- (void)_handleTapAndHoldEventMonitor:(id)arg1;	// IMP=0x0000000100091dc0
- (void)_continuousPathIdleTimer:(id)arg1;	// IMP=0x0000000100091b1c
- (void)_handleKeyboardContinuousPathDidBegin:(id)arg1;	// IMP=0x0000000100091a6c
- (void)_handleTracking:(id)arg1;	// IMP=0x0000000100091a60
- (id)_handleProtectedAppLogicForEvent:(id)arg1 element:(id)arg2 point:(struct CGPoint)arg3;	// IMP=0x00000001000916c4
- (id)_currentMedusaApplications;	// IMP=0x0000000100091650
- (id)_copySideAppDividerElementIfApplicableForPoint:(struct CGPoint)arg1;	// IMP=0x00000001000915c8
- (id)_sideAppDividerElement;	// IMP=0x0000000100091514
- (_Bool)_isPoint:(struct CGPoint)arg1 withinRangeForDividerElement:(id)arg2;	// IMP=0x0000000100091358
- (void)setDirectInteractionElement:(id)arg1;	// IMP=0x0000000100091318
- (void)_setDirectInteractionElement:(id)arg1;	// IMP=0x0000000100091194
- (_Bool)_continueTrackingKeyboardKey:(id)arg1;	// IMP=0x0000000100091048
- (_Bool)_continueTrackingRoadElementWithPoint:(struct CGPoint)arg1;	// IMP=0x0000000100090fd4
- (void)_handleToggleSideApp:(id)arg1;	// IMP=0x0000000100090fd0
- (void)_handleToggleSideAppIfAvailableInGestures:(id)arg1;	// IMP=0x0000000100090fcc
- (void)_handleNextKeyboardLanguage:(id)arg1;	// IMP=0x0000000100090fb4
- (void)_handleOpenVoiceOverOptions:(id)arg1;	// IMP=0x0000000100090f34
- (void)_handleSwitchToRightElementCommunity:(id)arg1;	// IMP=0x0000000100090e98
- (void)_handleSwitchToLeftElementCommunity:(id)arg1;	// IMP=0x0000000100090dfc
- (void)_handleTopEdgePanLong:(id)arg1;	// IMP=0x0000000100090d1c
- (void)_handleTopEdgePanShort:(id)arg1;	// IMP=0x0000000100090d18
- (void)_handleBottomEdgePanLong:(id)arg1;	// IMP=0x0000000100090d14
- (void)_handleBottomEdgePanShort:(id)arg1;	// IMP=0x0000000100090d10
- (void)_handleBottomEdgePanDown:(id)arg1;	// IMP=0x0000000100090d0c
- (void)_handleEdgeSwipeBottom:(id)arg1;	// IMP=0x0000000100090cc0
- (void)_handleEdgeSwipeTop:(id)arg1;	// IMP=0x0000000100090c74
- (void)_handleEdgeSwipeLeft:(id)arg1;	// IMP=0x0000000100090c70
- (void)_handleEdgeSwipeRight:(id)arg1;	// IMP=0x0000000100090c6c
- (void)_handleSwitchToNextElementCommunity:(id)arg1;	// IMP=0x0000000100090c58
- (void)_handleSwitchToPreviousElementCommunity:(id)arg1;	// IMP=0x0000000100090c44
- (void)_handleSwitchToElementCommunityPrevious:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010009087c
- (id)_allElementCommunitiesWithFocusedApplications:(id)arg1;	// IMP=0x0000000100090734
- (id)_additionalElementCommunities;	// IMP=0x0000000100090518
- (id)_elementToFocusWhenSwitchingToElementCommunity:(id)arg1;	// IMP=0x000000010009041c
- (void)_endNativeSliding:(_Bool)arg1;	// IMP=0x0000000100090368
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3 lastSeenContextDescriptors:(id)arg4;	// IMP=0x000000010009025c
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x0000000100090200
- (void)updateTitleElementLabels:(id)arg1;	// IMP=0x000000010008fdf4
- (_Bool)shouldElement:(id)arg1 beCombined:(id)arg2 combineLinks:(_Bool)arg3;	// IMP=0x000000010008fc60
- (_Bool)elementEligibleToFindTitleElement:(id)arg1;	// IMP=0x000000010008fbac
- (void)_handleOutputElementSummary:(id)arg1;	// IMP=0x000000010008f244
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1 explicitUserRequest:(_Bool)arg2;	// IMP=0x000000010008efec
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1;	// IMP=0x000000010008efdc
- (void)_visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(id)arg4;	// IMP=0x000000010008ecd8
- (void)visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(long long)arg4;	// IMP=0x000000010008ebe8
- (void)_handleOutputFocusedElementSummary:(id)arg1;	// IMP=0x000000010008ea0c
- (void)_handleSelectedTextOutput:(id)arg1;	// IMP=0x000000010008e800
- (void)_handleScrollToPoint:(id)arg1;	// IMP=0x000000010008e720
- (void)_handleScrollDownPage:(id)arg1;	// IMP=0x000000010008e690
- (void)_handleScrollByPage:(id)arg1;	// IMP=0x000000010008e68c
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2;	// IMP=0x000000010008e584
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2 forward:(_Bool)arg3;	// IMP=0x000000010008e410
- (id)_nearestScrollableElement:(id)arg1;	// IMP=0x000000010008e3dc
- (id)_nearestWebElement:(id)arg1;	// IMP=0x000000010008e3a8
- (void)_handleAppSwitch:(id)arg1;	// IMP=0x000000010008e31c
- (void)_handleSpeechRotorValueChange:(id)arg1;	// IMP=0x000000010008e1e8
- (void)_handleSpeechRotorChange:(id)arg1;	// IMP=0x000000010008e0ec
- (void)_handleUsePitchChange:(_Bool)arg1;	// IMP=0x000000010008dffc
- (void)_handleAudioDuckingChange:(_Bool)arg1;	// IMP=0x000000010008de8c
- (void)_handleAudioDestination:(_Bool)arg1;	// IMP=0x000000010008dd80
- (void)_handleActivityRotorChange:(_Bool)arg1;	// IMP=0x000000010008dab4
- (void)_handleSpeechPhoneticsChange:(_Bool)arg1;	// IMP=0x000000010008d958
- (void)_handleTypingEchoChange:(_Bool)arg1;	// IMP=0x000000010008d798
- (void)_handleSpeechPunctuationChange:(_Bool)arg1;	// IMP=0x000000010008d2d4
- (void)_handleSoundRotorChange:(_Bool)arg1;	// IMP=0x000000010008d1c4
- (void)_handleSpeechRateChange:(_Bool)arg1;	// IMP=0x000000010008d03c
- (void)_handleEscape:(id)arg1;	// IMP=0x000000010008ca68
- (void)_handleStartHelpMode:(id)arg1;	// IMP=0x000000010008c90c
- (_Bool)isOnElementManagerThread;	// IMP=0x000000010008c8fc
- (id)currentApplications;	// IMP=0x000000010008c8a0
- (id)currentElement;	// IMP=0x000000010008c858
- (id)_valueForKeyPathOnElementManagerThread:(id)arg1;	// IMP=0x000000010008c784
- (void)__retrieveValueForKeyPath:(id)arg1 intoPointedToLocation:(id)arg2 semaphore:(id)arg3;	// IMP=0x000000010008c6cc
- (struct CGRect)currentLineFrame;	// IMP=0x000000010008c6b8
- (id)_currentElement;	// IMP=0x000000010008c6b0
- (struct _NSRange)_highlightedCharacterRange;	// IMP=0x000000010008c6a4
- (_Bool)customRotorActionsEqual:(id)arg1 otherActions:(id)arg2 ignoreDragItems:(_Bool)arg3;	// IMP=0x000000010008c654
- (void)processExternalElementUpdate;	// IMP=0x000000010008c630
- (void)_processExternalElementUpdate;	// IMP=0x000000010008c550
- (void)processExternalScrollToVisible:(struct CGPoint)arg1;	// IMP=0x000000010008c4d0
- (void)_processExternalScrollToVisible:(id)arg1;	// IMP=0x000000010008c31c
- (_Bool)mlElement:(id)arg1 sharesLabel:(id)arg2;	// IMP=0x000000010008c0d4
- (void)_updateSwipeFrames;	// IMP=0x000000010008bde0
- (void)_updateAnyThreadElementAccess;	// IMP=0x000000010008bda8
- (_Bool)_shouldTurnOffDirectTouchModeIfNecessaryForLargeInteractionElement;	// IMP=0x000000010008bb18
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2 shouldResetTextSelection:(_Bool)arg3 shouldResetCharacterRange:(_Bool)arg4 ignoreIsAccessibilityElementCheck:(_Bool)arg5;	// IMP=0x000000010008a7a4
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2;	// IMP=0x000000010008a78c
- (_Bool)_setCurrentElement:(id)arg1;	// IMP=0x000000010008a77c
- (_Bool)_isElementValidForFirstResponder:(id)arg1;	// IMP=0x000000010008a6dc
- (_Bool)_updateWithMostRecentElementCommunity:(id)arg1;	// IMP=0x000000010008a640
- (void)_updateMostRecentElementCommunity;	// IMP=0x000000010008a5f0
- (_Bool)_languageRotorItemsContainLanguage:(id)arg1;	// IMP=0x000000010008a400
- (void)_updateExternalAccessory:(id)arg1;	// IMP=0x000000010008a3fc
- (void)_resetQuickNavState;	// IMP=0x000000010008a284
- (void)_activateAlternativeKeyboardKey:(id)arg1;	// IMP=0x000000010008a19c
- (void)_dismissAlternativeKeyboardKeys;	// IMP=0x000000010008a04c
- (void)_handleElementMoveToStatusBar:(id)arg1;	// IMP=0x000000010008a048
- (void)_handleContainerMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100089d18
- (void)_handleGuideElementMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100089a74
- (void)_handleContainerMovement:(id)arg1;	// IMP=0x00000001000899e0
- (void)_handleIntraContainerMovement:(id)arg1;	// IMP=0x000000010008988c
- (void)_handleImageDescriptionsToggle:(long long)arg1;	// IMP=0x0000000100089478
- (void)_handleDataComprehensionAction:(long long)arg1 event:(id)arg2;	// IMP=0x000000010008932c
- (id)availableDataComprehensionActionsForElement:(id)arg1;	// IMP=0x00000001000892d8
- (void)_handleCustomRotorAction:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100088f90
- (void)_handleCustomRotorContent:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100088c70
- (id)_currentCustomActionCategory;	// IMP=0x0000000100088bd8
- (id)_currentCustomActions;	// IMP=0x0000000100088a98
- (id)_currentCachedCustomActionCategories;	// IMP=0x0000000100088a00
- (id)_customActionsAddingDragCancelActionIfNecessaryForActions:(id)arg1;	// IMP=0x00000001000889e8
- (void)_handleValidatedCustomActionMovementThroughActions:(id)arg1 forEvent:(id)arg2 inDirection:(long long)arg3;	// IMP=0x0000000100088788
- (void)_moveFocusToUpdatedRange:(struct _NSRange)arg1 element:(id)arg2 searchType:(long long)arg3;	// IMP=0x0000000100088370
- (void)_handlePublicCustomRotorMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100087924
- (_Bool)_customRotorTypeRequiresFirstElementProcessing:(id)arg1;	// IMP=0x000000010008790c
- (id)webCustomRotorDictionary:(id)arg1 direction:(long long)arg2 forElement:(id)arg3;	// IMP=0x000000010008768c
- (void)_handleVerticalMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100087268
- (void)_handleShowEditingHUD:(id)arg1;	// IMP=0x0000000100087194
- (void)_handleRealtimeElementMovement:(id)arg1;	// IMP=0x0000000100086ea4
- (void)_handleElementMovement:(id)arg1;	// IMP=0x00000001000865b4
- (void)_handleMoveToElementBelow:(id)arg1;	// IMP=0x00000001000865a4
- (void)_handleMoveToElementAbove:(id)arg1;	// IMP=0x0000000100086594
- (_Bool)_moveElementToFlowTo:(id)arg1;	// IMP=0x0000000100086338
- (void)_setNearestElementMovingForward:(_Bool)arg1;	// IMP=0x0000000100086234
- (id)_sonarElementInForwardDirection:(_Bool)arg1 limit:(long long)arg2;	// IMP=0x0000000100086224
- (id)_sonarElementFromPoint:(struct CGPoint)arg1 inForwardDirection:(_Bool)arg2 limit:(long long)arg3;	// IMP=0x0000000100085acc
- (_Bool)_prepareElementOutputHeaders:(id)arg1 currentElement:(id)arg2 request:(id)arg3;	// IMP=0x00000001000856d0
- (_Bool)speakTableHeadersForElement:(id)arg1;	// IMP=0x0000000100085618
- (_Bool)speakTableRowAndColumnForElement:(id)arg1;	// IMP=0x0000000100085560
- (_Bool)determineFullImageDescriptionsEnabled:(id)arg1;	// IMP=0x00000001000853ec
- (_Bool)determineSceneDetectionsEnabled:(id)arg1;	// IMP=0x0000000100085250
- (long long)modifierKeyChoiceForElement:(id)arg1;	// IMP=0x0000000100085198
- (id)determineActivityForElement:(id)arg1;	// IMP=0x0000000100085190
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3 language:(id)arg4;	// IMP=0x00000001000847d4
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3;	// IMP=0x00000001000847c4
- (void)_handlePerformTextOperation:(id)arg1;	// IMP=0x00000001000845f4
- (void)_handleNextTextOperationInDirection:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100083f9c
- (id)_currentResponder;	// IMP=0x0000000100083eb8
- (id)getCurrentElement;	// IMP=0x0000000100083eac
- (void)refreshBraille;	// IMP=0x0000000100083e54
- (void)_handleScreenUnlock;	// IMP=0x0000000100083e30
- (void)_handleScreenLock:(id)arg1;	// IMP=0x0000000100083a6c
- (void)_handlePressActionResultAtTime:(id)arg1;	// IMP=0x000000010008381c
- (void)_simulatedPressOutputTimer:(id)arg1;	// IMP=0x0000000100083280
- (void)_handleContextMenuStatusNotification:(id)arg1;	// IMP=0x000000010008317c
- (void)_handlePauseSpeechAndHapticsNotification:(id)arg1;	// IMP=0x0000000100082fa8
- (void)_handleDuckingDisabling:(id)arg1;	// IMP=0x0000000100082dec
- (_Bool)_handleSimulatedLongPress:(id)arg1;	// IMP=0x0000000100082c8c
- (void)_reallySimulateLongPressForElement:(id)arg1;	// IMP=0x0000000100082a58
- (void)_postBrailleHomeButtonPress;	// IMP=0x0000000100082a40
- (void)_handlePerformHomeButtonPress:(id)arg1;	// IMP=0x00000001000829cc
- (void)_handleStartSiri:(id)arg1;	// IMP=0x0000000100082984
- (void)_handleToggleCaptionPanel:(id)arg1;	// IMP=0x000000010008286c
- (void)_handleToggleScreenCurtain:(id)arg1;	// IMP=0x0000000100082828
- (void)_handleToggleRotationCapability:(id)arg1;	// IMP=0x000000010008266c
- (void)_handleToggleMute:(id)arg1;	// IMP=0x0000000100082628
- (void)_simulatedForceTouchLift;	// IMP=0x0000000100082450
- (_Bool)_canActivateTapticTime;	// IMP=0x0000000100082448
- (void)_handleWatchWakeTripleTap:(id)arg1;	// IMP=0x0000000100082390
- (void)_handleWatchWakeDoubleTap:(id)arg1;	// IMP=0x00000001000822d8
- (void)_handleWatchWakeTap:(id)arg1;	// IMP=0x00000001000821b8
- (void)_handleSimulatedForceTouchEvent:(id)arg1;	// IMP=0x0000000100081ff4
- (void)_sendAutomationTouchCommand:(unsigned int)arg1 location:(struct CGPoint)arg2;	// IMP=0x0000000100081f30
- (void)_handleAutomationGeneratedChordChangeEvent:(id)arg1;	// IMP=0x0000000100081bdc
- (void)_handleAutomationGeneratedTouchCancelEvent:(id)arg1;	// IMP=0x0000000100081b38
- (void)_handleAutomationGeneratedTouchMoveEvent:(id)arg1;	// IMP=0x0000000100081a24
- (void)_handleAutomationGeneratedTouchDownEvent:(id)arg1;	// IMP=0x000000010008188c
- (void)_handleAutomationGeneratedTouchUpEvent:(id)arg1;	// IMP=0x0000000100081740
- (void)_handleSimpleTap:(id)arg1;	// IMP=0x0000000100081508
- (_Bool)_shouldSendTapStraightToSystem;	// IMP=0x0000000100081500
- (void)_handlePerformDataComprehensionAction:(id)arg1;	// IMP=0x00000001000814fc
- (void)_handlePerformCustomAction:(id)arg1;	// IMP=0x0000000100081260
- (id)actionElement;	// IMP=0x0000000100081254
- (void)_disableQuickNavStateTemporarily;	// IMP=0x0000000100081134
- (void)_handlePerformPressAction:(id)arg1;	// IMP=0x0000000100080078
- (_Bool)_updateCursorAfterPressForElement:(id)arg1 currentElementRange:(struct _NSRange)arg2 request:(id)arg3 didHaveCursor:(_Bool)arg4 doesHaveCursor:(_Bool)arg5;	// IMP=0x000000010007fc68
- (void)_updateLastFirstResponderChangedTime;	// IMP=0x000000010007fc40
- (void)_updateCurrentWordContextForBook:(id)arg1;	// IMP=0x000000010007fb34
- (_Bool)_useLineFrameBoundsForTouch:(id)arg1;	// IMP=0x000000010007fa64
- (void)_handleTripleTap:(id)arg1;	// IMP=0x000000010007fa60
- (void)_handleDoubleTap:(id)arg1;	// IMP=0x000000010007fa54
- (void)_handleStartStopToggle:(id)arg1;	// IMP=0x000000010007f9f8
- (void)_handleToggleCrownNavigation:(id)arg1;	// IMP=0x000000010007f8e0
@property(readonly, nonatomic) _Bool shouldSnarfCrown;
- (void)_handleLabelElement:(id)arg1;	// IMP=0x000000010007f768
- (void)_handleMonitorElement:(id)arg1;	// IMP=0x000000010007f224
- (void)_resetElementLabel;	// IMP=0x000000010007f1b4
- (void)_handleLabelElementAcceptedNotification:(id)arg1;	// IMP=0x000000010007f06c
- (void)_handleAudioDuckingToggle:(id)arg1;	// IMP=0x000000010007f05c
- (_Bool)_savedDescriptionToPhoto:(id)arg1 description:(id)arg2 element:(id)arg3;	// IMP=0x000000010007eef0
- (void)_handleWebTextAvailableNotification:(id)arg1;	// IMP=0x000000010007ee60
- (void)_handleWebSearchResult:(long long)arg1 withEvent:(id)arg2;	// IMP=0x000000010007ee04
- (void)_handleWebTextMatchSelectedNotification:(id)arg1;	// IMP=0x000000010007ec00
- (_Bool)_shouldMoveToLastWebFormControl;	// IMP=0x000000010007eb14
- (void)_handleWebFormControlInteractionEndNotification:(id)arg1;	// IMP=0x000000010007ead0
- (void)_handleWebFormControlInteractionStartNotification:(id)arg1;	// IMP=0x000000010007ea30
- (void)_handleScreenWillWakeNotification:(id)arg1;	// IMP=0x000000010007e9a8
- (void)_handleRealtimeElementUpdate:(id)arg1;	// IMP=0x000000010007e918
- (void)_handleScreenWillChangeNotification:(id)arg1;	// IMP=0x000000010007e858
- (void)_handleFocusedElementContentChangeNotification:(id)arg1;	// IMP=0x000000010007e7e0
- (void)_handleBarcodeVisibilityNotification:(id)arg1;	// IMP=0x000000010007e6bc
- (void)_handleCameraCenteredNotification:(id)arg1;	// IMP=0x000000010007e66c
- (void)_handleKBPopupVariantsNotification:(id)arg1;	// IMP=0x000000010007e54c
- (void)_handleAdjustValue:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007e2dc
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3 borderHitIfNoChange:(_Bool)arg4;	// IMP=0x000000010007df64
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3;	// IMP=0x000000010007df00
- (_Bool)_handleNextAutofill:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007db50
- (void)_finishHandlingNextAutofillWithElement:(id)arg1;	// IMP=0x000000010007da90
- (void)_handlePerformTapAutofill:(id)arg1;	// IMP=0x000000010007d8b8
- (void)_handleOutputTextStyle:(id)arg1;	// IMP=0x000000010007d694
- (void)_handleSearchRotorSetMathPosition:(id)arg1;	// IMP=0x000000010007d460
- (id)_currentRotorSelection;	// IMP=0x000000010007d2f0
- (void)_handleMathGranularMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007d12c
- (id)_treePositionForMathSegment:(id)arg1;	// IMP=0x000000010007d0c0
- (void)_handleUpdatedMathElementIndex;	// IMP=0x000000010007cfec
- (void)_refreshMathSegmentsIfNeeded;	// IMP=0x000000010007cfdc
- (void)_refreshMathSegmentsIfNeededWithPreferredDirection:(long long)arg1;	// IMP=0x000000010007cd18
- (unsigned long long)_currentMathGranularityLevel;	// IMP=0x000000010007ccdc
- (void)_resetMathGranularMovementState;	// IMP=0x000000010007cca8
- (void)_outputNavigationDirectionMode:(long long)arg1;	// IMP=0x000000010007cbe0
- (long long)_newNavigationDirectionModeForRotorDirection:(long long)arg1;	// IMP=0x000000010007cb44
- (void)_handleNavigationDirectionChangeWithDirection:(long long)arg1;	// IMP=0x000000010007ca84
- (void)_handleTrackingDetailMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010007c9b8
- (void)_handleZoomMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007c7f4
- (CDStruct_912cb5d2)_handleUserCharacterSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007c618
- (struct _NSRange)_characterRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x000000010007c578
- (CDStruct_912cb5d2)_handleUserAllSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007c4f4
- (CDStruct_912cb5d2)_handleUserPageSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007c440
- (CDStruct_912cb5d2)_handleUserLineSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007c214
- (struct _NSRange)_lineRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x000000010007c194
- (CDStruct_912cb5d2)_handleUserWordSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007c048
- (void)_handleUserSelection:(id)arg1;	// IMP=0x000000010007c044
- (void)updateCursorFrameAfterLift;	// IMP=0x000000010007c020
- (void)_updateCursorFrameAfterLift;	// IMP=0x000000010007bf70
- (void)_handleStartStopTextSelection:(id)arg1;	// IMP=0x000000010007be50
- (void)_handleMisspelledWordRotorAction:(_Bool)arg1;	// IMP=0x000000010007ba6c
- (void)_processMisspelledWordTextReplacement;	// IMP=0x000000010007b7f8
- (void)_handleTextRotorSelectionAction:(_Bool)arg1;	// IMP=0x000000010007b784
- (void)_handleWebSelection:(id)arg1;	// IMP=0x000000010007b780
- (void)_outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2;	// IMP=0x000000010007b354
- (void)_handleOutputCharacterPhonetically:(id)arg1;	// IMP=0x000000010007b1c0
- (void)_handleOutputRowHeader:(id)arg1;	// IMP=0x000000010007b1b0
- (void)_handleOutputColumnHeader:(id)arg1;	// IMP=0x000000010007b1a0
- (void)_handleOutputColumnOrRowHeader:(id)arg1 row:(_Bool)arg2;	// IMP=0x000000010007af04
- (void)_handleOutputColumnContents:(id)arg1;	// IMP=0x000000010007aef4
- (void)_handleOutputRowContents:(id)arg1;	// IMP=0x000000010007aee4
- (void)_handleOutputTableRowColumnInfo:(id)arg1;	// IMP=0x000000010007adac
- (void)_handleOutputCellRowColumnInfo:(id)arg1;	// IMP=0x000000010007ac70
- (void)_handleOutputColumnOrRowContents:(id)arg1 row:(_Bool)arg2;	// IMP=0x000000010007aa14
- (void)_handleOutputCharacter:(id)arg1;	// IMP=0x000000010007a8f8
- (id)_retrieveCurrentCharacterFromEditableElement;	// IMP=0x000000010007a7cc
- (void)_handleRowMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010007a518
- (void)_handleGenericTextSegmentMovement:(id)arg1 direction:(long long)arg2 granulary:(long long)arg3;	// IMP=0x000000010007a33c
- (void)_handleTextWordMovement:(id)arg1;	// IMP=0x0000000100079fa4
- (void)_handleTextDocumentMovement:(id)arg1;	// IMP=0x0000000100079e1c
- (void)_handleRotorTextSelectionMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100079d28
- (void)_handleAdjustTextSelectionSegmentType:(id)arg1;	// IMP=0x0000000100079c94
- (void)_handleParagraphMovement:(id)arg1;	// IMP=0x0000000100079bfc
- (void)_handleSentenceMovement:(id)arg1;	// IMP=0x0000000100079b64
- (void)_handleLineMovement:(id)arg1;	// IMP=0x0000000100079acc
- (void)_handleLineMovementInWeb:(id)arg1 direction:(long long)arg2 existingRequest:(id)arg3;	// IMP=0x00000001000787bc
- (void)_finishHandlingLineMovementInWeb:(id)arg1 direction:(id)arg2 withCurrentElement:(id)arg3 markerArray:(id)arg4 textObjects:(id)arg5 existingRequest:(id)arg6;	// IMP=0x0000000100078554
- (void)_handleWordMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000783f4
- (void)_handleLetterMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100078270
- (void)_handleWordMovement:(id)arg1;	// IMP=0x00000001000781c8
- (void)_handleCharacterMovement:(id)arg1;	// IMP=0x0000000100078120
- (void)_moveCursorForElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3;	// IMP=0x0000000100077a20
- (void)_handleCursorMovementByTextSegment:(id)arg1;	// IMP=0x0000000100077914
- (void)_handleReadWord:(id)arg1;	// IMP=0x0000000100077428
- (id)_phoneticStringForLetter:(id)arg1 language:(id)arg2;	// IMP=0x000000010007731c
- (void)_handleReadLine:(id)arg1;	// IMP=0x00000001000770e8
- (void)_handleOutputLineCount:(id)arg1;	// IMP=0x0000000100076ed8
- (void)_handleReadItemHint:(id)arg1;	// IMP=0x0000000100076d90
- (void)_handleReadURL:(id)arg1;	// IMP=0x0000000100076c1c
- (id)_computeChangedFontAttributes:(id)arg1 storedAttributes:(id)arg2 haveMisspellCheck:(_Bool)arg3;	// IMP=0x00000001000757e8
- (id)_orderedMonitoredFontAttributes;	// IMP=0x0000000100075664
- (id)_fontDisplayNameForFontName:(id)arg1;	// IMP=0x00000001000755c0
- (void)_handleRotorTypingModeMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100075490
- (void)_handleRotorContinusPathChange:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100075320
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3;	// IMP=0x00000001000752d4
- (void)_handleRotorBrailleAutoAdvanceMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x00000001000752b0
- (void)_handleRotorBrailleLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100075134
- (void)_handleRotorLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100074978
- (id)_languageNameForCode:(id)arg1;	// IMP=0x000000010007474c
- (void)_resetRotorTextNavigation;	// IMP=0x0000000100074744
- (void)_resetOtherTapInputModes;	// IMP=0x00000001000746e8
- (void)_resetSearchType;	// IMP=0x00000001000746d8
- (void)_resetReadAllRequest;	// IMP=0x00000001000746c8
- (void)handleSearchRotorDown:(id)arg1;	// IMP=0x00000001000746b4
- (void)handleSearchRotorUp:(id)arg1;	// IMP=0x00000001000746a0
- (void)_handleSpeakScreen:(id)arg1;	// IMP=0x000000010007469c
- (void)_handleSingleLetterSearch:(id)arg1;	// IMP=0x0000000100074424
- (void)_handleSearchRotorMovementWithoutRotorUpdateInDirectionUp:(_Bool)arg1 event:(id)arg2;	// IMP=0x0000000100074018
- (void)_handleDirectElementSearch:(id)arg1;	// IMP=0x00000001000736f8
- (void)_handleColumnMovement:(id)arg1;	// IMP=0x0000000100073564
- (void)_handleSearchRotorMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x0000000100073454
- (void)_handleElementSearch:(id)arg1 rotorType:(long long)arg2 direction:(long long)arg3;	// IMP=0x000000010007334c
- (CDUnknownBlockType)_copyRangeMatchBlockForRotorType:(long long)arg1;	// IMP=0x00000001000731e0
- (void)_customPublicRotorMatchForType:(id)arg1 range:(struct _NSRange *)arg2 element:(id *)arg3 direction:(long long)arg4 lastSearchUUID:(id *)arg5;	// IMP=0x0000000100072f78
- (CDUnknownBlockType)_copyMatchBlockForRotorType:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0000000100072c68
- (CDUnknownBlockType)_copyMatchBlockSearchField;	// IMP=0x0000000100072c28
- (CDUnknownBlockType)_copyMatchBlockTextField;	// IMP=0x0000000100072be8
- (CDUnknownBlockType)_copyMatchBlockDifferent;	// IMP=0x0000000100072a9c
- (CDUnknownBlockType)_copyMatchBlockSimilar;	// IMP=0x0000000100072950
- (CDUnknownBlockType)_copyMatchBlockSameHeading;	// IMP=0x0000000100072810
- (CDUnknownBlockType)_copyMatchBlockSameBlockquote;	// IMP=0x0000000100072718
- (CDUnknownBlockType)_copyMatchBlockBlockquote;	// IMP=0x00000001000726e4
- (unsigned long long)filterTraitsByPriority:(unsigned long long)arg1;	// IMP=0x0000000100072608
- (CDUnknownBlockType)_copyMatchBlockButton;	// IMP=0x000000010007253c
- (CDUnknownBlockType)_copyMatchBlockInternalLink;	// IMP=0x00000001000724a0
- (CDUnknownBlockType)_copyMatchBlockLandmarkStart;	// IMP=0x00000001000723e4
- (CDUnknownBlockType)_copyMatchBlockArticleStart;	// IMP=0x0000000100072328
- (CDUnknownBlockType)_copyMatchBlockTableStart;	// IMP=0x000000010007226c
- (CDUnknownBlockType)_copyMatchBlockFrameStart;	// IMP=0x00000001000721b0
- (CDUnknownBlockType)_copyMatchBlockListStart;	// IMP=0x0000000100072074
- (CDUnknownBlockType)_copyMatchBlockFormElement;	// IMP=0x0000000100071fbc
- (CDUnknownBlockType)_copyMatchBlockStaticText;	// IMP=0x0000000100071dec
- (CDUnknownBlockType)_copyMatchBlockLink;	// IMP=0x0000000100071dac
- (CDUnknownBlockType)_copyMatchBlockNonVisitedLink;	// IMP=0x0000000100071d14
- (CDUnknownBlockType)_copyMatchBlockForHeadingLevel:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0000000100071b94
- (CDUnknownBlockType)_copyMatchBlockHeader;	// IMP=0x0000000100071b08
- (CDUnknownBlockType)_copyMatchBlockVisitedLink;	// IMP=0x0000000100071ab8
- (CDUnknownBlockType)_copyMatchBlockImage;	// IMP=0x0000000100071a78
- (CDUnknownBlockType)_copyMatchBlockAnyElement;	// IMP=0x0000000100071688
- (CDUnknownBlockType)_copyMatchBlockForTextAttribute:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0000000100071648
- (CDUnknownBlockType)_copyMatchBlockSearchText;	// IMP=0x00000001000714c4
- (void)_elementFetchFoundElement:(id)arg1;	// IMP=0x0000000100070a48
- (_Bool)_isShowingTodayViewForPhone;	// IMP=0x0000000100070990
- (void)_echoSearchTypeNotFound:(long long)arg1;	// IMP=0x00000001000707dc
- (void)_echoSearchNavigationElement:(id)arg1 forRangeAdjustment:(_Bool)arg2;	// IMP=0x00000001000705e8
- (void)_echoFlickNavigationElement:(id)arg1;	// IMP=0x0000000100070374
- (_Bool)_touchContainerDidChangeForElement:(id)arg1 oldElement:(id)arg2;	// IMP=0x00000001000702bc
- (void)_updateContextDescriptors;	// IMP=0x0000000100070038
- (void)elementFetchFound:(id)arg1;	// IMP=0x000000010006fd8c
- (void)_handleSearchRotorRight:(id)arg1;	// IMP=0x000000010006fd78
- (void)_handleSearchRotorLeft:(id)arg1;	// IMP=0x000000010006fd64
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2 notifyUser:(_Bool)arg3;	// IMP=0x000000010006f9e4
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2;	// IMP=0x000000010006f9d4
- (void)_outputRotorTypeCount;	// IMP=0x000000010006f86c
- (void)setCurrentElementToWebEditableAncestor;	// IMP=0x000000010006f7c8
- (id)webEditableAncestor:(id)arg1;	// IMP=0x000000010006f6bc
- (_Bool)_rotorTypeSupportsCounting:(long long)arg1;	// IMP=0x000000010006f694
- (void)elementsCounted:(long long)arg1;	// IMP=0x000000010006f0bc
- (int)cancelElementCountOutput;	// IMP=0x000000010006f0a4
- (_Bool)forceRotorOffGesturedTextInputIfNeeded:(_Bool)arg1;	// IMP=0x000000010006f09c
- (void)setElementRotorToType:(long long)arg1 saveToPreferences:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x000000010006f03c
- (_Bool)_inMisspelledWordRotor;	// IMP=0x000000010006f02c
- (void)setRotor:(id)arg1 toType:(long long)arg2 saveToPreferences:(_Bool)arg3 userInitiated:(_Bool)arg4;	// IMP=0x000000010006f010
- (void)setCurrentTextSelectionSegmentType:(long long)arg1;	// IMP=0x000000010006efc8
- (long long)currentRotorType;	// IMP=0x000000010006efb8
- (void)_handleSearchRotorEcho:(id)arg1;	// IMP=0x000000010006ef84
- (void)_updateRotorForCurrentElement;	// IMP=0x000000010006ef08
- (void)_updateRotorForCurrentElement:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010006ed60
- (void)updateRotorForCurrentElement:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010006eca0
- (void)_handleStartTextSearch:(id)arg1;	// IMP=0x000000010006eb10
- (void)_handleOngoingTextSearch:(id)arg1;	// IMP=0x000000010006ea04
- (_Bool)isItemChooserVisible;	// IMP=0x000000010006e9fc
- (void)_handleItemChooserSelection:(id)arg1;	// IMP=0x000000010006e914
- (void)_didDismissItemChooser;	// IMP=0x000000010006e90c
- (void)_closeItemChooser;	// IMP=0x000000010006e894
- (void)_handleItemChooserSelectionMade:(id)arg1;	// IMP=0x000000010006e4f0
- (void)_handleMoveToNativeFocusedElement:(id)arg1;	// IMP=0x000000010006e394
- (void)_handleMoveToLinkedUI:(id)arg1;	// IMP=0x000000010006df68
- (long long)_customActionIndex;	// IMP=0x000000010006df60
- (id)_customActionIdentifier;	// IMP=0x000000010006df58
- (void)didSearchForOpaqueElement;	// IMP=0x000000010006df4c
- (void)elementsRetrieved:(id)arg1 finished:(_Bool)arg2;	// IMP=0x000000010006deec
- (void)_elementsRetrieved:(id)arg1 finished:(id)arg2;	// IMP=0x000000010006d928
- (void)_showItemChooser:(id)arg1;	// IMP=0x000000010006ca98
- (void)_resetItemChooserCache;	// IMP=0x000000010006ca7c
- (void)systemServerDied;	// IMP=0x000000010006ca58
- (void)_systemServerDied;	// IMP=0x000000010006ca28
- (void)_resetDirectInteractionCache;	// IMP=0x000000010006c980
- (_Bool)inDirectTouchMode;	// IMP=0x000000010006c950
- (_Bool)shouldTurnTrackingIntoDirectTouch;	// IMP=0x000000010006c948
- (void)setShouldTurnTrackingIntoDirectTouch:(_Bool)arg1;	// IMP=0x000000010006c940
- (_Bool)avoidAnnouncingDirectTouchArea;	// IMP=0x000000010006c938
- (_Bool)currentElementAllowsDirectTouch;	// IMP=0x000000010006c930
- (void)_handleDirectTouchExplorationMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006c90c
- (void)_handleHintsSettingMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006c7f4
- (void)_handleDescribedMediaMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006c6ac
- (void)_handleDescribeImage:(id)arg1;	// IMP=0x000000010006c5a0
- (void)_handleSearchTextEvent:(id)arg1;	// IMP=0x000000010006c248
- (void)_endTextSearchMode;	// IMP=0x000000010006c154
- (void)_handleCancelSpeaking:(id)arg1;	// IMP=0x000000010006c108
- (void)_handleToggleSpeaking:(id)arg1;	// IMP=0x000000010006c064
- (void)_handlePauseSpeaking:(id)arg1;	// IMP=0x000000010006c018
- (void)_handleContinueSpeaking:(id)arg1;	// IMP=0x000000010006bfd0
- (void)_handleReadFromTop:(id)arg1;	// IMP=0x000000010006baa0
- (void)_handleCopySpeechToClipboard:(id)arg1;	// IMP=0x000000010006b7a0
- (void)_handleReadAll:(id)arg1;	// IMP=0x000000010006b680
- (void)_handleReadScreenSummary:(id)arg1;	// IMP=0x000000010006b594
- (void)_continueReadAllWithElement:(id)arg1 setCurrentElement:(_Bool *)arg2;	// IMP=0x000000010006b0d4
- (_Bool)_prepareStitchedWebReadAll:(id)arg1 request:(id)arg2 setCurrentElement:(_Bool *)arg3;	// IMP=0x000000010006a784
- (void)_handleReadAllNextElement;	// IMP=0x000000010006a6e4
- (void)_stopReadAll;	// IMP=0x000000010006a680
- (void)_handleReadAllBookContent:(id)arg1 fromTop:(_Bool)arg2;	// IMP=0x000000010006a158
- (_Bool)isReadingAll;	// IMP=0x000000010006a138
- (void)_startReadingBookForNewPage;	// IMP=0x0000000100069efc
- (_Bool)_handleBookNavigateOverPageBoundary:(long long)arg1 unit:(long long)arg2;	// IMP=0x0000000100069e38
- (void)_handleBookPageFlipAndContinue;	// IMP=0x0000000100069da4
- (_Bool)_handleMoreBookContentElements;	// IMP=0x0000000100069a8c
- (void)_echoLineInBookElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100068b50
- (_Bool)_bookContentElementInteraction:(struct CGPoint)arg1 element:(id)arg2;	// IMP=0x00000001000689e0
- (id)_currentTextLineInBookElement:(_Bool)arg1;	// IMP=0x00000001000687d4
- (id)_convertTextMarkerArrayToString:(id)arg1 addInContentExtras:(_Bool)arg2;	// IMP=0x0000000100068230
- (_Bool)_handleMovementForElementFollowingElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 mode:(long long)arg4;	// IMP=0x00000001000680b4
- (void)_handleBookContentMovement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 generateOutput:(_Bool)arg4;	// IMP=0x0000000100067670
- (void)_handleCurrentContentReadingLineUpdated:(id)arg1;	// IMP=0x0000000100067548
- (struct _NSRange)_rangeOfLine:(id)arg1 inBookContent:(id)arg2;	// IMP=0x000000010006737c
- (void)_setSelectedTextRange:(struct _NSRange)arg1 onElement:(id)arg2 refreshBraille:(_Bool)arg3;	// IMP=0x00000001000672d8
- (void)_handleIdle:(id)arg1;	// IMP=0x00000001000672cc
- (void)_tvOS_handleIdleAndTrackingEvents:(id)arg1;	// IMP=0x00000001000671ec
- (void)_cleanupMapInteractionOnIdle;	// IMP=0x0000000100067160
- (void)_performTouchTypingKeyPress:(id)arg1;	// IMP=0x0000000100066f38
- (_Bool)_isTouchTypingEventTooCloseToEdge:(id)arg1;	// IMP=0x0000000100066e64
- (void)_setPreviousTouchTypingKey:(id)arg1;	// IMP=0x0000000100066e10
- (void)_setElementUnitIndexesToEndOfElement:(id)arg1;	// IMP=0x0000000100066b34
- (void)_resetElementUnitIndexes;	// IMP=0x0000000100066acc
- (_Bool)rotorEnabled;	// IMP=0x0000000100066ac4
- (void)hideVisualRotor;	// IMP=0x0000000100066a54
- (void)_hideVisualRotor;	// IMP=0x0000000100066928
- (void)_showVisualRotor:(id)arg1 direction:(_Bool)arg2;	// IMP=0x0000000100066724
- (double)keyboardKeyPenumbra:(id)arg1;	// IMP=0x00000001000666ec
- (void)sendRequest:(id)arg1;	// IMP=0x000000010006663c
- (id)_notificationData:(id)arg1 consumingToken:(id)arg2;	// IMP=0x0000000100066534
- (_Bool)_notificationData:(id)arg1 containsToken:(id)arg2;	// IMP=0x000000010006644c
- (void)handleNotification:(int)arg1 withData:(id)arg2 forElement:(struct __AXUIElement *)arg3;	// IMP=0x0000000100065b54
- (void)_updateStateForNotificationData:(id)arg1;	// IMP=0x0000000100065510
- (void)_notificationThreadCancel;	// IMP=0x000000010006550c
- (void)_pausedSpeechInterrupted:(id)arg1;	// IMP=0x0000000100065498
- (void)_handleEvent:(id)arg1;	// IMP=0x0000000100064c94
- (_Bool)directTouchModeHandledEvent:(id)arg1;	// IMP=0x0000000100064968
- (void)_updateContinuousPathTimeout;	// IMP=0x000000010006486c
- (void)_monitorElements;	// IMP=0x00000001000641c8
- (id)_monitoredElementCachedText:(id)arg1;	// IMP=0x0000000100064120
- (id)_similarMonitoredElement:(id)arg1;	// IMP=0x0000000100063f98
- (void)handleEvent:(id)arg1;	// IMP=0x0000000100063a80
- (_Bool)eventIsSystemEvent:(id)arg1;	// IMP=0x000000010006384c
- (void)_updateNavigationModeForClassicRemote;	// IMP=0x00000001000636e0
- (void)updateNavigationModeForClassicRemote;	// IMP=0x00000001000636bc
- (void)_initializeCommands;	// IMP=0x000000010005e5fc
- (void)_initializeSystemEventThread;	// IMP=0x000000010005e5a4
- (void)_initializeElementManagerThread;	// IMP=0x000000010005e528
- (void)dealloc;	// IMP=0x000000010005e1ec
- (id)init;	// IMP=0x000000010005d658
- (void)_cleanupStateForUnitTesting;	// IMP=0x000000010005d41c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


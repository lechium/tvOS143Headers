//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CBAdvertiser, CBController, CBDiscovery, CUSystemMonitor, NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, RPIdentity;
@protocol CBStackAdaptor, CBStackAddressMonitor, CBStackBLEScanner, CBStackController, CBStackDeviceMonitor, OS_dispatch_queue, OS_dispatch_source, OS_xpc_event_publisher, OS_xpc_object;

@interface CBDaemonServer : NSObject
{
    _Bool _activateCalled;	// 8 = 0x8
    unsigned int _assertionFlags;	// 12 = 0xc
    _Bool _assertionFlagsValid;	// 16 = 0x10
    CBAdvertiser *_bleAdvertiser;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_bleAdvertiserSpatialLingerTimer;	// 32 = 0x20
    NSObject<OS_dispatch_source> *_bleAdvertiserSpatialRestartTimer;	// 40 = 0x28
    _Bool _bleAdvertiserSpatialValid;	// 48 = 0x30
    NSMutableArray *_bleDiscoveryArray;	// 56 = 0x38
    unsigned long long _deviceMonitorFlags;	// 64 = 0x40
    _Bool _deviceMonitorFlagsValid;	// 72 = 0x48
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 80 = 0x50
    int _identitiesNotifyToken;	// 88 = 0x58
    NSMutableDictionary *_identityMapSameAccount;	// 96 = 0x60
    RPIdentity *_identitySelf;	// 104 = 0x68
    _Bool _prefBLEAdvertising;	// 112 = 0x70
    _Bool _prefBLEScanning;	// 113 = 0x71
    _Bool _prefDiscoveryProxy;	// 114 = 0x72
    int _prefsChangedNotifyToken;	// 116 = 0x74
    id <CBStackAdaptor> _stackAdaptor;	// 120 = 0x78
    id <CBStackBLEScanner> _stackBLEScanner;	// 128 = 0x80
    _Bool _stackBLENeedsIdentify;	// 136 = 0x88
    unsigned long long _stackBLEProxControlFlags;	// 144 = 0x90
    _Bool _stackBLEProxControlNeedsDeviceClose;	// 152 = 0x98
    id <CBStackDeviceMonitor> _stackDeviceMonitor;	// 160 = 0xa0
    unsigned long long _startTicksAwake;	// 168 = 0xa8
    unsigned long long _startTicksFull;	// 176 = 0xb0
    unsigned long long _stateHandler;	// 184 = 0xb8
    CUSystemMonitor *_systemMonitor;	// 192 = 0xc0
    _Bool _updatePending;	// 200 = 0xc8
    _Bool _wifiCritical;	// 201 = 0xc9
    NSObject<OS_xpc_object> *_xpcListener;	// 208 = 0xd0
    NSObject<OS_xpc_event_publisher> *_xpcPublisher;	// 216 = 0xd8
    _Bool _prefEnforceApprovedList;	// 224 = 0xe0
    int _wifiCriticalOverride;	// 228 = 0xe4
    id <CBStackAddressMonitor> _addressMonitor;	// 232 = 0xe8
    NSMutableDictionary *_deviceMap;	// 240 = 0xf0
    NSArray *_identityArray;	// 248 = 0xf8
    id <CBStackController> _stackController;	// 256 = 0x100
    CBAdvertiser *_testAdvertiser;	// 264 = 0x108
    CBController *_testAssertion;	// 272 = 0x110
    CBDiscovery *_testDiscovery;	// 280 = 0x118
    NSMutableSet *_xpcConnections;	// 288 = 0x120
    NSMutableDictionary *_identifyDevices;	// 296 = 0x128
}

- (void).cxx_destruct;	// IMP=0x000000010001a6b8
@property(retain, nonatomic) NSMutableDictionary *identifyDevices; // @synthesize identifyDevices=_identifyDevices;
@property(retain, nonatomic) NSMutableSet *xpcConnections; // @synthesize xpcConnections=_xpcConnections;
@property(nonatomic) int wifiCriticalOverride; // @synthesize wifiCriticalOverride=_wifiCriticalOverride;
@property(retain, nonatomic) CBDiscovery *testDiscovery; // @synthesize testDiscovery=_testDiscovery;
@property(retain, nonatomic) CBController *testAssertion; // @synthesize testAssertion=_testAssertion;
@property(retain, nonatomic) CBAdvertiser *testAdvertiser; // @synthesize testAdvertiser=_testAdvertiser;
@property(retain, nonatomic) id <CBStackController> stackController; // @synthesize stackController=_stackController;
@property(nonatomic) _Bool prefEnforceApprovedList; // @synthesize prefEnforceApprovedList=_prefEnforceApprovedList;
@property(retain, nonatomic) NSArray *identityArray; // @synthesize identityArray=_identityArray;
@property(retain, nonatomic) NSMutableDictionary *deviceMap; // @synthesize deviceMap=_deviceMap;
@property(retain, nonatomic) id <CBStackAddressMonitor> addressMonitor; // @synthesize addressMonitor=_addressMonitor;
- (_Bool)_supportsProxControl;	// IMP=0x000000010001a574
- (void)_xpcPublisherRemoveToken:(unsigned long long)arg1;	// IMP=0x000000010001a368
- (void)_xpcPublisherAddToken:(unsigned long long)arg1 info:(id)arg2;	// IMP=0x0000000100019ddc
- (void)_xpcPublisherAction:(unsigned int)arg1 token:(unsigned long long)arg2 info:(id)arg3;	// IMP=0x0000000100019cb4
- (void)xpcConnectionInvalidated:(id)arg1;	// IMP=0x0000000100019c78
- (void)_xpcConnectionAccept:(id)arg1;	// IMP=0x0000000100019b1c
- (void)_xpcListenerEvent:(id)arg1;	// IMP=0x0000000100019a14
- (void)_aopMessageReceived:(id)arg1;	// IMP=0x0000000100019764
- (void)aopMessageReceived:(id)arg1;	// IMP=0x00000001000196cc
- (void)_invalidateCBSpatialInteractionSession:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000194c8
- (void)invalidateCBSpatialInteractionSession:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000193ec
- (void)_activateCBSpatialInteractionSession:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100019100
- (void)activateCBSpatialInteractionSession:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100019024
- (void)_invalidateCBDiscovery:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018e20
- (void)invalidateCBDiscovery:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018d44
- (void)_activateCBDiscovery:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018a58
- (void)activateCBDiscovery:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010001897c
- (void)_invalidateCBController:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018770
- (void)invalidateCBController:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018694
- (void)_activateCBController:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000183a8
- (void)activateCBController:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100018290
- (void)updateIdentities:(id)arg1;	// IMP=0x0000000100017fe4
- (void)_identitiesReevaluateDevices;	// IMP=0x0000000100017e88
- (void)_identitiesResolveNearbyDevice:(id)arg1;	// IMP=0x0000000100017770
- (void)_identitiesGet;	// IMP=0x00000001000171d0
- (_Bool)_identitiesShouldRun;	// IMP=0x0000000100016ff0
- (void)_identitiesEnsureStopped;	// IMP=0x0000000100016f4c
- (void)_identitiesEnsureStarted;	// IMP=0x0000000100016df8
- (void)_stackDeviceMonitorDeviceLost:(id)arg1;	// IMP=0x0000000100016cd8
- (void)_stackDeviceMonitorDeviceFound:(id)arg1;	// IMP=0x0000000100016bbc
- (_Bool)_stackDeviceMonitorShouldRun;	// IMP=0x00000001000169f8
- (void)_stackDeviceMonitorEnsureStopped;	// IMP=0x0000000100016850
- (void)_stackDeviceMonitorEnsureStarted;	// IMP=0x0000000100016654
- (void)_stackControllerEnsureStopped;	// IMP=0x00000001000165bc
- (void)_stackControllerEnsureStarted;	// IMP=0x0000000100015eb8
- (void)_stackBLEScannerUpdateProxControl:(id)arg1;	// IMP=0x0000000100015e00
- (void)_stackBLEScannerDeviceLost:(id)arg1;	// IMP=0x0000000100015cb0
- (void)_stackBLEScannerDeviceFound:(id)arg1;	// IMP=0x0000000100015b10
- (_Bool)_stackBLEScannerShouldRun;	// IMP=0x0000000100015634
- (void)_stackBLEScannerEnsureStopped;	// IMP=0x0000000100015398
- (void)_stackBLEScannerEnsureStarted;	// IMP=0x0000000100014ee8
- (_Bool)_bleAdvertiserUpdateSpatialInteraction;	// IMP=0x0000000100014348
- (void)_bleAdvertiserAddressChanged;	// IMP=0x0000000100014154
- (_Bool)_bleAdvertiserShouldRun;	// IMP=0x0000000100013f78
- (void)_bleAdvertiserEnsureStopped;	// IMP=0x0000000100013e90
- (void)_bleAdvertiserEnsureStarted;	// IMP=0x00000001000137b8
- (void)_update;	// IMP=0x00000001000134c8
- (void)scheduleUpdateImmediate:(_Bool)arg1;	// IMP=0x000000010001342c
- (void)scheduleSpatialUpdateImmediate:(_Bool)arg1;	// IMP=0x000000010001341c
- (void)scheduleDiscoveryUpdateImmediate:(_Bool)arg1;	// IMP=0x00000001000133dc
- (void)scheduleControlUpdateImmediate:(_Bool)arg1;	// IMP=0x00000001000133cc
- (void)_reportDeviceLost:(id)arg1;	// IMP=0x0000000100013284
- (void)_reportDeviceFound:(id)arg1;	// IMP=0x00000001000130f4
- (void)_prefsChanged;	// IMP=0x0000000100012e00
- (void)_invalidate;	// IMP=0x0000000100012bb4
- (void)invalidate;	// IMP=0x0000000100012ae4
- (void)_activate;	// IMP=0x0000000100012630
- (void)activate;	// IMP=0x0000000100012530
- (id)descriptionWithLevel:(int)arg1;	// IMP=0x0000000100011a10
- (id)description;	// IMP=0x0000000100011a00
- (id)initWithCBStackAdaptor:(id)arg1;	// IMP=0x00000001000118fc

@end


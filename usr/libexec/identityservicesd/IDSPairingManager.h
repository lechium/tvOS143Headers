//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "IDSUTunDeliveryControllerConnectivityDelegate-Protocol.h"

@class IDSCountdown, IDSPairedDeviceRepository, NRDeviceManager, NSData, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSSet, NSString;

@interface IDSPairingManager : NSObject <IDSUTunDeliveryControllerConnectivityDelegate>
{
    NSHashTable *_delegateMap;	// 8 = 0x8
    _Bool _hasLoadedPairedDevices;	// 16 = 0x10
    int _pairingStateToken;	// 20 = 0x14
    CDUnknownBlockType _block;	// 24 = 0x18
    _Bool _isPendingResetOfKeyRegenerationFlag;	// 32 = 0x20
    IDSCountdown *_pairedDeviceInfoRequestCountdown;	// 40 = 0x28
    NSMutableDictionary *_cbuuidToBTOutOfBandKeyDictionary;	// 48 = 0x30
    _Bool _shouldQuickSwitchAfterIPSecConnected;	// 56 = 0x38
    NRDeviceManager *_nrDeviceManager;	// 64 = 0x40
    IDSPairedDeviceRepository *_pairedDeviceRepository;	// 72 = 0x48
    NSMutableArray *_registeredPairedDeviceDidConnectBlockPairs;	// 80 = 0x50
}

+ (void)devicePairingProtocolVersion:(unsigned int *)arg1 minCompatibilityVersion:(unsigned int *)arg2 maxCompatibilityVersion:(unsigned int *)arg3;	// IMP=0x0000000100242728
+ (_Bool)_isTinkerPairedInCapabilityFlags:(unsigned long long)arg1;	// IMP=0x0000000100236504
+ (_Bool)_isIPsecSupportedByCapabilityFlags:(unsigned long long)arg1;	// IMP=0x00000001002364d4
+ (_Bool)_isEncryptionKeyRegenerationSupportedByCapabilityFlags:(unsigned long long)arg1;	// IMP=0x00000001002364a8
+ (id)sharedInstance;	// IMP=0x0000000100233c58
- (void).cxx_destruct;	// IMP=0x0000000100243484
@property(nonatomic) _Bool shouldQuickSwitchAfterIPSecConnected; // @synthesize shouldQuickSwitchAfterIPSecConnected=_shouldQuickSwitchAfterIPSecConnected;
@property(readonly, nonatomic) NSMutableArray *registeredPairedDeviceDidConnectBlockPairs; // @synthesize registeredPairedDeviceDidConnectBlockPairs=_registeredPairedDeviceDidConnectBlockPairs;
@property(readonly, nonatomic) IDSPairedDeviceRepository *pairedDeviceRepository; // @synthesize pairedDeviceRepository=_pairedDeviceRepository;
@property(readonly, nonatomic) NRDeviceManager *nrDeviceManager; // @synthesize nrDeviceManager=_nrDeviceManager;
- (id)_nrDeviceIdentifierWithCBUUID:(id)arg1;	// IMP=0x00000001002431b0
- (void)deliveryController:(id)arg1 foundNearbyIPsecCapableDeviceWithUniqueID:(id)arg2;	// IMP=0x00000001002429e4
- (void)refreshPairedDeviceEncryptionKeys;	// IMP=0x000000010024236c
- (_Bool)updatePairedDeviceiCloudURIs:(id)arg1 pushToken:(id)arg2;	// IMP=0x0000000100241e34
- (_Bool)updatePairedDeviceBuildVersion:(id)arg1 productVersion:(id)arg2 productName:(id)arg3 pairingProtocolVersion:(unsigned int)arg4 minCompatibilityVersion:(unsigned int)arg5 maxCompatibilityVersion:(unsigned int)arg6 serviceMinCompatibilityVersion:(unsigned short)arg7 capabilityFlags:(unsigned long long)arg8 deviceUniqueID:(id)arg9;	// IMP=0x0000000100240374
- (_Bool)_isIPSecLinkEnabled;	// IMP=0x0000000100240348
- (void)_networkRelayRegisterDeviceWithCBUUID:(id)arg1 properties:(id)arg2 shouldPairDirectlyOverIPsec:(_Bool)arg3;	// IMP=0x000000010023fc2c
- (void)_networkRelayRegisterDeviceWithCBUUID:(id)arg1 wasInitiallySetupUsingIDSPairing:(_Bool)arg2 maxCompatibilityVersion:(id)arg3 BTOutOfBandKey:(id)arg4 supportsIPsecWithSPPLink:(_Bool)arg5 bluetoothMACAddress:(id)arg6;	// IMP=0x000000010023faa8
- (id)_createRegistrationProperties:(_Bool)arg1 maxCompatibilityVersion:(id)arg2 BTOutOfBandKey:(id)arg3 supportsIPsecWithSPPLink:(_Bool)arg4 bluetoothMACAddress:(id)arg5;	// IMP=0x000000010023f8cc
- (_Bool)isMissingAnyPublicKeyForPairedDeviceWithCBUUID:(id)arg1;	// IMP=0x000000010023f7c8
- (_Bool)setPairedDeviceInfo:(id)arg1;	// IMP=0x000000010023edc4
- (_Bool)updateLocalPairedDevice:(id)arg1 pairingType:(long long)arg2;	// IMP=0x000000010023eb74
- (_Bool)updatePairedDeviceWithCBUUID:(id)arg1 supportIPsec:(_Bool)arg2;	// IMP=0x000000010023ea6c
- (void)_clearPairedDeviceDidConnectBlocksForUniqueID:(id)arg1;	// IMP=0x000000010023e71c
- (void)_callPairedDeviceDidConnectBlocksForUniqueID:(id)arg1 withError:(id)arg2;	// IMP=0x000000010023e3c8
- (void)registerPairedDeviceWithUniqueID:(id)arg1 didConnectBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010023e1e4
- (_Bool)shouldUseIPsecLinkForDefaultPairedDeviceAndLogQuery:(_Bool)arg1;	// IMP=0x000000010023e010
- (_Bool)shouldUseIPsecLinkForDefaultPairedDevice;	// IMP=0x000000010023dfc0
- (id)_cbuuidsWithIsPairingValue:(_Bool)arg1;	// IMP=0x000000010023dcd0
- (id)pairedDeviceRecords;	// IMP=0x000000010023d77c
- (id)localDeviceRecord;	// IMP=0x000000010023d620
- (id)_identityDataErrorPairForDataProtectionClass:(unsigned int)arg1;	// IMP=0x000000010023d498
- (id)cbuuidsOfPairedDevices;	// IMP=0x000000010023d45c
- (id)cbuuidsOfPairingDevices;	// IMP=0x000000010023d420
- (_Bool)isTraditionalDevicePairedOrPairing;	// IMP=0x000000010023d370
- (_Bool)isCurrentDevicePairedOrPairing;	// IMP=0x000000010023d2c8
- (void)ensureCommunicationWithActivePairedDeviceIsPossible;	// IMP=0x000000010023cf2c
- (void)updateNetworkRelayStateForAllPairedDevices;	// IMP=0x000000010023c760
- (void)deactivatePairedDevices;	// IMP=0x000000010023c250
- (long long)activatePairedDeviceWithCBUUID:(id)arg1;	// IMP=0x000000010023b94c
- (void)disconnectActivePairedDevice;	// IMP=0x000000010023b818
- (_Bool)removeLocalPairedDevice:(id)arg1;	// IMP=0x000000010023b2e4
- (_Bool)addLocalPairedDevice:(id)arg1 BTOutOfBandKey:(id)arg2 shouldPairDirectlyOverIPsec:(_Bool)arg3 pairingType:(long long)arg4 bluetoothMACAddress:(id)arg5;	// IMP=0x000000010023a6b0
- (void)removeDelegate:(id)arg1;	// IMP=0x000000010023a620
- (void)addDelegate:(id)arg1;	// IMP=0x000000010023a55c
- (void)_updateActiveStateForAllPairedDevices:(_Bool)arg1;	// IMP=0x0000000100239f9c
- (void)_updateActiveStateForAllPairedDevices;	// IMP=0x0000000100239f60
- (void)_updatePairedState:(_Bool)arg1;	// IMP=0x0000000100239de4
- (_Bool)_hasAllEncryptionKeys;	// IMP=0x0000000100239bf4
- (id)pairedDeviceForUniqueID:(id)arg1;	// IMP=0x0000000100239930
@property(readonly, nonatomic) NSSet *allTraditionallyPairedUniqueIDs;
@property(readonly, nonatomic) NSSet *allPairedUniqueIDs;
- (_Bool)_isPairedToDevice:(id)arg1;	// IMP=0x0000000100239284
@property(readonly, nonatomic) _Bool isPaired;
@property(readonly, nonatomic) NSDictionary *pairedDevicePrivateData;
- (long long)pairedDevicePairingType;	// IMP=0x00000001002390c4
- (id)pairedDeviceiCloudURIs;	// IMP=0x0000000100239034
@property(readonly, nonatomic) NSData *pairedDevicePushToken;
@property(readonly, nonatomic) NSData *pairedDevicePublicClassCKey;
@property(readonly, nonatomic) NSData *pairedDevicePublicClassAKey;
@property(readonly, nonatomic) NSData *pairedDevicePublicKey;
@property(readonly, nonatomic) NSDictionary *pairedDevice;
- (id)pairedDeviceHandlesWithPairingType:(long long)arg1;	// IMP=0x0000000100238a7c
- (id)allPairedDevicesWithType:(long long)arg1;	// IMP=0x0000000100238a08
@property(readonly, nonatomic) NSSet *allPairedDevices;
@property(readonly, nonatomic) _Bool isCurrentDeviceTinkerConfiguredWatch;
- (_Bool)activePairedDeviceHasPairingType:(long long)arg1;	// IMP=0x00000001002388e0
@property(readonly, nonatomic) unsigned short pairedDeviceServiceMinCompatibilityVersion;
@property(readonly, nonatomic) unsigned int pairedDeviceMaxCompatibilityVersion;
@property(readonly, nonatomic) unsigned int pairedDeviceMinCompatibilityVersion;
@property(readonly, nonatomic) unsigned int pairedDevicePairingProtocolVersion;
- (id)pairedDeviceProductName;	// IMP=0x000000010023862c
- (id)pairedDeviceProductVersion;	// IMP=0x000000010023859c
- (id)pairedDeviceBuildVersion;	// IMP=0x000000010023850c
@property(readonly, nonatomic) NSString *pairedDeviceUniqueID;
@property(readonly, nonatomic) NSString *pairedDeviceUUIDString;
- (id)_activePairedDeviceCBUUID;	// IMP=0x00000001002383b8
- (void)gatherLocalDeviceInfoWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100237954
- (id)_localDevicePrivateData;	// IMP=0x00000001002371b8
@property(readonly, nonatomic) NSDictionary *localDevice;
- (_Bool)_purgeSecuredEncryptionKeysForAllPairedDevices;	// IMP=0x0000000100236be0
- (void)_suspendOTRSessionsWithProtectionClass:(unsigned int)arg1;	// IMP=0x0000000100236720
- (void)_regenerateSecuredEncryptionKeys;	// IMP=0x0000000100236534
- (_Bool)_markSecuredEncryptionKeysAsRegenerated:(_Bool)arg1;	// IMP=0x00000001002360bc
- (unsigned long long)_hasRegeneratedSecuredEncryptionKeys;	// IMP=0x0000000100235bf4
- (long long)_migrateSecuredEncryptionKeys;	// IMP=0x00000001002356a8
- (void)_loadPairedDevicePropertiesIfNeeded;	// IMP=0x00000001002354a8
- (void)systemDidLeaveFirstDataProtectionLock;	// IMP=0x0000000100235474
- (id)init;	// IMP=0x000000010023535c
- (id)initWithNRDeviceManager:(id)arg1 pairedDeviceRepository:(id)arg2;	// IMP=0x0000000100234fa8
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x0000000100234e54
- (void)_requestPairedDeviceInfo;	// IMP=0x00000001002348e0
- (void)_requestPairedDeviceInfoAfterDelay:(double)arg1;	// IMP=0x00000001002346c8
- (void)_notifyDelegatesDeviceUnpairedFromDevice:(id)arg1;	// IMP=0x00000001002343a8
- (void)_notifyDelegatesDevicePairedToDevice:(id)arg1;	// IMP=0x0000000100234088
- (void)_notifyDelegatesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100233e04

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


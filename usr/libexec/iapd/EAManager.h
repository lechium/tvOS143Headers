//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class IAPApplicationStateMonitor, NSLock, NSMutableDictionary;

@interface EAManager : NSObject
{
    NSMutableDictionary *_connectedAccessories;	// 8 = 0x8
    struct map<unsigned int, NSNumber *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSNumber *>>> _connectionIDMap;	// 16 = 0x10
    NSLock *_connectedAccessoriesLock;	// 40 = 0x28
    _Bool _fakedLocationDeviceEnabled;	// 48 = 0x30
    _Bool _fakedLocationDeviceFilteringSupport;	// 49 = 0x31
    NSMutableDictionary *_clients;	// 56 = 0x38
    NSLock *_clientLock;	// 64 = 0x40
    IAPApplicationStateMonitor *_appStateMonitor;	// 72 = 0x48
}

+ (void)_updatePlistWithAccessoryProtocolsInternal:(id)arg1;	// IMP=0x000000010000b6f0
+ (id)newPlistForAccessory:(id)arg1;	// IMP=0x0000000100004c54
+ (id)stringForClientID:(unsigned int)arg1;	// IMP=0x0000000100004c1c
+ (id)sharedManager;	// IMP=0x0000000100004a7c
- (id).cxx_construct;	// IMP=0x000000010000b780
- (void).cxx_destruct;	// IMP=0x000000010000b76c
@property(nonatomic) _Bool fakedLocationDeviceFilteringSupport; // @synthesize fakedLocationDeviceFilteringSupport=_fakedLocationDeviceFilteringSupport;
- (void)updatePlistWithProtocolsForAccessory:(id)arg1;	// IMP=0x000000010000b6a8
- (_Bool)_isProtocolContainedInWhitelist:(id)arg1;	// IMP=0x000000010000b5d8
- (void)_unregisteredClientAssertionTimerFired:(id)arg1;	// IMP=0x000000010000b560
- (void)_takeClientAssertionsForAccessoryDisconnection;	// IMP=0x000000010000b3d0
- (void)_takeClientAssertionsForAccessoryConnection;	// IMP=0x000000010000b210
- (void)_dpServiceWithFirmwareVersionFound:(id)arg1;	// IMP=0x000000010000afc4
- (void)takeProcessAssertionForBundleID:(id)arg1;	// IMP=0x000000010000aec0
- (void)applicationStateChanged:(id)arg1;	// IMP=0x000000010000a6ac
- (void)_shouldPostNoAppAlert:(id)arg1;	// IMP=0x000000010000a6a8
- (void)setFakedLocationDeviceEnabled:(_Bool)arg1 forClientID:(unsigned int)arg2;	// IMP=0x000000010000a380
- (_Bool)isFakedLocationDeviceEnabled;	// IMP=0x000000010000a364
- (void)fakedLocationDeviceFilteringSupport:(_Bool)arg1;	// IMP=0x000000010000a2ec
- (void)fakedLocationDeviceSetFilter:(id)arg1;	// IMP=0x000000010000a120
- (void)fakedLocationRequestGPSTime;	// IMP=0x000000010000a0bc
- (void)fakedLocationDeviceEphemerisRefreshIntervalAvailable;	// IMP=0x000000010000a058
- (void)fakedLocationDeviceEphemerisMaxIntervalAvailable;	// IMP=0x0000000100009ff4
- (void)fakedLocationDeviceEphemerisURLAvailable;	// IMP=0x0000000100009f90
- (void)fakedLocationDevicePointDataAvailable;	// IMP=0x0000000100009f2c
- (void)fakedLocationDeviceNMEAAvailable;	// IMP=0x0000000100009ec8
- (id)connectedAccessoriesForEAClient:(unsigned int)arg1;	// IMP=0x0000000100009c50
- (id)connectedAccessories;	// IMP=0x0000000100009bb8
- (_Bool)closeSessionForConnectionID:(unsigned int)arg1 sessionID:(unsigned short)arg2 notifyApp:(_Bool)arg3;	// IMP=0x00000001000099d0
- (void)openCompleteForSessionWithConnectionID:(unsigned int)arg1 sessionID:(unsigned short)arg2;	// IMP=0x0000000100009914
- (_Bool)openSessionForClientID:(unsigned int)arg1 connetionID:(unsigned int)arg2 protocolID:(unsigned char)arg3 sessionID:(unsigned short *)arg4;	// IMP=0x00000001000094e0
- (id)sessionForAccessoryWithConnectionID:(unsigned int)arg1 andSessionID:(unsigned short)arg2;	// IMP=0x0000000100009470
- (id)accessoryForConnectionID:(id)arg1;	// IMP=0x0000000100009450
- (void)reset;	// IMP=0x00000001000092f4
- (void)detachAccessory:(unsigned int)arg1;	// IMP=0x0000000100008f9c
- (id)valueForProperty:(id)arg1 forAccessory:(unsigned int)arg2;	// IMP=0x0000000100008ee8
- (void)updateValueFromApp:(id)arg1;	// IMP=0x0000000100008b84
- (void)updateValueFromIap:(id)arg1 forPort:(id)arg2 andPortPorperty:(id)arg3 forAccessory:(unsigned int)arg4 updateApp:(_Bool)arg5;	// IMP=0x0000000100008988
- (void)updateValueFromIap:(id)arg1 forPort:(id)arg2 andPortPorperty:(id)arg3 forAccessory:(unsigned int)arg4;	// IMP=0x0000000100008978
- (void)updateLocationSupport:(unsigned int)arg1 isReady:(_Bool)arg2;	// IMP=0x0000000100008830
- (void)updateSpeakerEqIndex:(unsigned int)arg1 eqIndex:(unsigned int)arg2;	// IMP=0x000000010000872c
- (void)updateSpeakerMenu:(unsigned int)arg1 withEqNames:(id)arg2 andSelection:(unsigned int)arg3;	// IMP=0x00000001000085d0
- (void)updateAccessoryInfo:(const struct IPodAccessoryDetails *)arg1;	// IMP=0x00000001000081dc
- (void)updateAccessoryProtocols:(const struct IPodAccessoryDetails *)arg1;	// IMP=0x0000000100007d74
- (void)attachAccessory:(const struct IPodAccessoryDetails *)arg1 forTransport:(struct IPodTransport *)arg2;	// IMP=0x0000000100006408
- (_Bool)sessionsOpenForDisplayIdentifer:(const char *)arg1;	// IMP=0x0000000100006110
- (unsigned int)clientIDForDisplayIdentifier:(const char *)arg1;	// IMP=0x0000000100005f24
- (void)removeAllClients;	// IMP=0x00000001000059d0
- (void)removeClientForXPCConnection:(id)arg1;	// IMP=0x000000010000556c
- (unsigned int)addClient:(unsigned int)arg1 withAuditToken:(CDStruct_4c969caf)arg2 currentClientID:(unsigned int)arg3 xpcConnection:(id)arg4 eaProtocols:(id)arg5 notifyOfAlreadyConnectedAccessories:(_Bool)arg6 andBundleId:(id)arg7;	// IMP=0x0000000100005090
- (id)connectionIDObjectForConnectionID:(unsigned int)arg1;	// IMP=0x0000000100004fe8
- (void)logAccessoryDetach:(id)arg1 reason:(id)arg2;	// IMP=0x0000000100004ec0
- (void)logAccessoryAttach:(id)arg1 reason:(id)arg2;	// IMP=0x0000000100004d80
- (unsigned int)generateClientID;	// IMP=0x0000000100004cf0
- (void)dealloc;	// IMP=0x00000001000048f8
- (id)init;	// IMP=0x00000001000047dc
- (void)notifyEAClientsOfAccessoryReconnection:(id)arg1;	// IMP=0x0000000100019840
- (void)notifyEAClientsOfAccessoryDisconnection:(id)arg1;	// IMP=0x0000000100019828
- (void)notifyEAClientsOfAccessoryConnection:(id)arg1;	// IMP=0x0000000100019810
- (void)notifyEAClientsOfAccessoryEvent:(const char *)arg1 accessory:(id)arg2;	// IMP=0x0000000100019674
- (void)notifyEAClient:(id)arg1 ofAccessoryEvent:(const char *)arg2 accessory:(id)arg3;	// IMP=0x000000010001952c

@end


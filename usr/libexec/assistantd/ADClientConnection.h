//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADAudioPlaybackServiceListening-Protocol.h"
#import "ADAudioStateListening-Protocol.h"
#import "ADBluetoothDeviceObserver-Protocol.h"
#import "ADCommandCenterClient-Protocol.h"
#import "ADCommandCenterRequestDelegate-Protocol.h"
#import "ADCommandCenterSpeechDelegate-Protocol.h"
#import "ADHandsFreeStateChangedObserver-Protocol.h"
#import "AFClientService-Protocol.h"

@class AFClientConfiguration, AFRequestInfo, AFSpeechRequestOptions, AFWatchdogTimer, NSMutableOrderedSet, NSString, NSUUID, NSXPCConnection;
@protocol ADBluetoothDevice, OS_dispatch_group, OS_dispatch_queue, OS_os_transaction;

@interface ADClientConnection : NSObject <ADHandsFreeStateChangedObserver, ADAudioStateListening, ADAudioPlaybackServiceListening, ADBluetoothDeviceObserver, ADCommandCenterClient, ADCommandCenterRequestDelegate, ADCommandCenterSpeechDelegate, AFClientService>
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    AFRequestInfo *_requestInfo;	// 24 = 0x18
    AFSpeechRequestOptions *_requestOptions;	// 32 = 0x20
    CDUnknownBlockType _requestCompletion;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_requestGroup;	// 48 = 0x30
    NSUUID *_requestUUID;	// 56 = 0x38
    AFClientConfiguration *_clientConfiguration;	// 64 = 0x40
    unsigned long long _pendingRequestId;	// 72 = 0x48
    double _pendingRequestTimestamp;	// 80 = 0x50
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 88 = 0x58
    long long _numberOfPresentedUIs;	// 96 = 0x60
    CDUnknownBlockType _presentedUIReply;	// 104 = 0x68
    NSObject<OS_os_transaction> *_presentedUITransaction;	// 112 = 0x70
    int _ringerStateToken;	// 120 = 0x78
    _Bool _hasCachedADShouldSpeak;	// 124 = 0x7c
    _Bool _cachedADShouldSpeak;	// 125 = 0x7d
    _Bool _requestOptionsRequireTTS;	// 126 = 0x7e
    _Bool _serverIsForcingTTS;	// 127 = 0x7f
    _Bool _combinedShouldSpeakState;	// 128 = 0x80
    _Bool _isConnected;	// 129 = 0x81
    id <ADBluetoothDevice> _bluetoothDevice;	// 136 = 0x88
    NSMutableOrderedSet *_audioSessionAssertions;	// 144 = 0x90
    NSMutableOrderedSet *_speechCapturingContexts;	// 152 = 0x98
    AFWatchdogTimer *_longLivedConnectionABCTimer;	// 160 = 0xa0
    _Bool adSpeechSessionEnded;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x000000010026fc74
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x000000010026fb88
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x000000010026fa70
- (oneway void)recordUIMetrics:(id)arg1;	// IMP=0x000000010026fa6c
- (oneway void)_refreshAssistantValidation;	// IMP=0x000000010026fa24
- (oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x000000010026f99c
- (oneway void)_requestBarrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026f92c
- (oneway void)_barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026f920
- (oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1;	// IMP=0x000000010026f8a0
- (oneway void)_fetchAppContextForApplicationInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010026f6e4
- (oneway void)_broadcastCommandDictionary:(id)arg1;	// IMP=0x000000010026f5f4
- (oneway void)_performTaskCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026f124
- (oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026ebfc
- (oneway void)_sendLargeData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010026ebb8
- (oneway void)_pingServiceForIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010026e9d8
- (oneway void)_listInstalledServicesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026e968
- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x000000010026e918
- (oneway void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;	// IMP=0x000000010026e7ac
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x000000010026e69c
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x000000010026e5b0
- (oneway void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x000000010026e540
- (oneway void)endUpdateOutputAudioPower;	// IMP=0x000000010026e4f0
- (oneway void)beginUpdateOutputAudioPowerWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026e478
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x000000010026e424
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x000000010026e3ac
- (oneway void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026e310
- (oneway void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010026dfdc
- (oneway void)getSerializedCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026dc18
- (oneway void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026db8c
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x000000010026db44
- (oneway void)recordCancellationMetrics;	// IMP=0x000000010026dafc
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x000000010026da8c
- (oneway void)telephonyRequestCompleted;	// IMP=0x000000010026da44
- (oneway void)prepareForPhoneCall;	// IMP=0x000000010026d9fc
- (oneway void)setAlertContextDirty;	// IMP=0x000000010026d9b4
- (oneway void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x000000010026d928
- (oneway void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x000000010026d8d4
- (oneway void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x000000010026d824
- (oneway void)setApplicationContext:(id)arg1;	// IMP=0x000000010026d7b4
- (oneway void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x000000010026d744
- (oneway void)rollbackClearContext;	// IMP=0x000000010026d65c
- (oneway void)clearContext;	// IMP=0x000000010026d560
- (oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010026d4b8
- (oneway void)requestStateUpdateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026d394
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x000000010026d260
- (oneway void)cancelSpeech;	// IMP=0x000000010026d160
- (oneway void)rollbackRequest;	// IMP=0x000000010026d074
- (oneway void)cancelRequestForReason:(long long)arg1;	// IMP=0x000000010026cefc
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x000000010026cdd0
- (oneway void)startAcousticIDRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026cd18
- (oneway void)startSpeechPronunciationRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026cc60
- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;	// IMP=0x000000010026cbe8
- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 requestId:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026c884
- (oneway void)startRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026c65c
- (void)_setRequestCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010026c49c
- (oneway void)endSession;	// IMP=0x000000010026c2bc
- (oneway void)setConfiguration:(id)arg1;	// IMP=0x000000010026c184
- (oneway void)didDismissUI;	// IMP=0x000000010026c040
- (oneway void)willPresentUIWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010026be14
- (oneway void)setCarDNDActive:(_Bool)arg1;	// IMP=0x000000010026bdc4
- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;	// IMP=0x000000010026bd64
- (oneway void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x000000010026bd1c
- (oneway void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026bc40
- (oneway void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 speechRequestOptions:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010026b9f8
- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010026b97c
- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x000000010026b900
- (void)bluetoothDeviceDidInvalidate:(id)arg1;	// IMP=0x000000010026b824
- (void)bluetoothDevice:(id)arg1 headphoneListeningModeDidChangeFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x000000010026b728
- (void)bluetoothDevice:(id)arg1 headphoneInEarDetectionStateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010026ae70
- (void)bluetoothDevice:(id)arg1 deviceInfoDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010026ad4c
- (void)audioPlaybackService:(id)arg1 didStopRequest:(id)arg2 error:(id)arg3;	// IMP=0x000000010026ac3c
- (void)audioPlaybackService:(id)arg1 didStartRequest:(id)arg2;	// IMP=0x000000010026ab6c
- (void)audioPlaybackService:(id)arg1 willStartRequest:(id)arg2;	// IMP=0x000000010026aa9c
- (void)audioStateAnnouncer:(id)arg1 didChangeAudioStateFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010026a980
- (void)adShouldSpeakStateDidChange:(_Bool)arg1;	// IMP=0x000000010026a8e4
- (void)_logShouldSpeakState:(_Bool)arg1;	// IMP=0x000000010026a888
- (_Bool)adWaitingForAudioFile;	// IMP=0x000000010026a880
- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026a514
- (void)adSpeechRecordingDidDetectStartPointWithContext:(id)arg1;	// IMP=0x000000010026a260
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x000000010026a160
- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(id)arg1;	// IMP=0x000000010026a090
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 utterances:(id)arg2 sessionUUID:(id)arg3 refId:(id)arg4;	// IMP=0x000000010026a08c
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x000000010026a088
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x0000000100269f0c
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x0000000100269d90
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x00000001002699cc
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x0000000100269664
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x00000001002692fc
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x0000000100268f40
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x0000000100268ad4
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x0000000100268798
- (void)_updateShouldSpeak;	// IMP=0x000000010026866c
- (_Bool)_shouldSpeak;	// IMP=0x0000000100268640
- (void)_computeShouldSpeak;	// IMP=0x000000010026845c
- (void)_handleAudioSessionInterruption:(id)arg1;	// IMP=0x00000001002682b0
- (void)_unregisterForAudioSessionInterruptionNotification;	// IMP=0x0000000100268250
- (void)_registerForAudioSessionInterruptionNotification;	// IMP=0x00000001002681e8
- (void)_unregisterForRingerStateNotification;	// IMP=0x00000001002681b4
- (void)_registerForRingerStateNotification;	// IMP=0x00000001002680e8
- (void)_setServerForcedTTS:(_Bool)arg1;	// IMP=0x0000000100268098
- (void)_setRequestOptionsRequireTTS:(_Bool)arg1;	// IMP=0x0000000100268088
- (void)_setADShouldSpeak:(_Bool)arg1;	// IMP=0x0000000100268070
- (void)adFailedToLaunchAppWithBundleIdentifier:(id)arg1;	// IMP=0x0000000100267fa0
- (void)adWillProcessAppLaunchWithBundleIdentifier:(id)arg1;	// IMP=0x0000000100267ed0
- (void)adAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x0000000100267e28
- (void)adAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x0000000100267d80
- (void)adRequestWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100267b98
- (void)adRequestDidHandleFailedStartPlayback:(long long)arg1;	// IMP=0x0000000100267af4
- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;	// IMP=0x0000000100267a80
- (void)adAceConnectionWillRetryOnError:(id)arg1;	// IMP=0x00000001002679b0
- (void)adInvalidateCurrentUserActivity;	// IMP=0x0000000100267914
- (void)adSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x0000000100267804
- (void)adAcousticIDRequestDidFinishSuccessfully:(_Bool)arg1;	// IMP=0x000000010026775c
- (void)adMusicWasDetected;	// IMP=0x00000001002676c0
- (void)adAcousticIDRequestWillStart;	// IMP=0x0000000100267624
- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;	// IMP=0x0000000100267580
- (void)adRequestRequestedDismissAssistant;	// IMP=0x00000001002674e4
- (void)adExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x00000001002673d4
- (void)adExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x0000000100267304
- (void)adWantsToCacheImage:(id)arg1;	// IMP=0x00000001002671d4
- (_Bool)adTextToSpeechIsMuted;	// IMP=0x00000001002670b8
- (void)adGetClockContext:(CDUnknownBlockType)arg1;	// IMP=0x0000000100266f1c
- (void)adGetBulletinContext:(CDUnknownBlockType)arg1;	// IMP=0x0000000100266d84
- (void)adRequestRequestedOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100266ba0
- (void)adRequestRequestedOpenApplicationWithBundleID:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010026699c
- (void)adStartUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100266770
- (void)adRequestEncounteredIntermediateError:(id)arg1;	// IMP=0x0000000100266664
- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x0000000100266278
- (void)_handleRequestCompletedWithUUID:(id)arg1 error:(id)arg2;	// IMP=0x0000000100266084
- (void)adRequestDidReceiveCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100265be8
- (void)adRequestWillReceiveCommand:(id)arg1;	// IMP=0x0000000100265b10
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x0000000100265648
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x0000000100265530
- (void)_removeAllSpeechCapturingContextsForReason:(id)arg1;	// IMP=0x0000000100265198
- (void)_addSpeechCapturingContext:(id)arg1;	// IMP=0x0000000100265080
- (void)_setBluetoothDevice:(id)arg1;	// IMP=0x0000000100264f60
- (void)_speechRecordingDidFinish;	// IMP=0x0000000100264ed4
- (void)_updateSpeechRequestOptions:(id)arg1;	// IMP=0x0000000100264c4c
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100264ba8
- (id)_serviceDelegate;	// IMP=0x0000000100264b98
- (void)connectionDisconnected;	// IMP=0x0000000100264860
- (void)dealloc;	// IMP=0x00000001002646ec
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x00000001002642a8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


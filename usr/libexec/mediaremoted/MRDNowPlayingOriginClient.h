//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "MRDDeviceInfoDataSourceDelegate-Protocol.h"
#import "MRDNowPlayingDataSourceDelegate-Protocol.h"

@class MRDDeviceInfoDataSource, MRDMediaRemoteClient, MRDNowPlayingClient, MRDNowPlayingDataSource, MRDeviceInfo, MRMutableApplicationActivity, MROSTransaction, MROrigin, MRPlayerPath, MSVPersistentTimer, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;
@protocol MRDNowPlayingOriginClientDelegate, OS_dispatch_queue;

@interface MRDNowPlayingOriginClient : NSObject <MRDNowPlayingDataSourceDelegate, MRDDeviceInfoDataSourceDelegate>
{
    NSObject<OS_dispatch_queue> *_serialQueue;	// 8 = 0x8
    NSMutableArray *_nowPlayingClients;	// 16 = 0x10
    unsigned int _volumeControlCapabilities;	// 24 = 0x18
    float _volume;	// 28 = 0x1c
    MRDNowPlayingClient *_explicitNowPlayingClient;	// 32 = 0x20
    MRDNowPlayingClient *_activeNowPlayingClient;	// 40 = 0x28
    MROSTransaction *_activeNowPlayingClientTransaction;	// 48 = 0x30
    NSMutableDictionary *_defaultSupportedCommandsData;	// 56 = 0x38
    MSVPersistentTimer *_playbackTimer;	// 64 = 0x40
    NSDate *_lastPlayingDate;	// 72 = 0x48
    MROrigin *_origin;	// 80 = 0x50
    MRPlayerPath *_playerPath;	// 88 = 0x58
    MRDeviceInfo *_deviceInfo;	// 96 = 0x60
    NSData *_deviceInfoData;	// 104 = 0x68
    MRMutableApplicationActivity *_activity;	// 112 = 0x70
    MRDMediaRemoteClient *_overrideClient;	// 120 = 0x78
    MRDNowPlayingDataSource *_nowPlayingDataSource;	// 128 = 0x80
    MRDDeviceInfoDataSource *_deviceInfoDataSource;	// 136 = 0x88
    NSDate *_registrationDate;	// 144 = 0x90
    NSArray *_activePlayerClients;	// 152 = 0x98
    id <MRDNowPlayingOriginClientDelegate> _delegate;	// 160 = 0xa0
    MRDNowPlayingClient *_computedNowPlayingClient;	// 168 = 0xa8
    MRDNowPlayingClient *_inferredNowPlayingClient;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x0000000100049920
@property(retain, nonatomic) MRDNowPlayingClient *inferredNowPlayingClient; // @synthesize inferredNowPlayingClient=_inferredNowPlayingClient;
@property(retain, nonatomic) MRDNowPlayingClient *computedNowPlayingClient; // @synthesize computedNowPlayingClient=_computedNowPlayingClient;
@property(nonatomic) __weak id <MRDNowPlayingOriginClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSArray *activePlayerClients; // @synthesize activePlayerClients=_activePlayerClients;
@property(readonly, nonatomic) NSDate *registrationDate; // @synthesize registrationDate=_registrationDate;
@property(retain, nonatomic) MRDDeviceInfoDataSource *deviceInfoDataSource; // @synthesize deviceInfoDataSource=_deviceInfoDataSource;
@property(retain, nonatomic) MRDNowPlayingDataSource *nowPlayingDataSource; // @synthesize nowPlayingDataSource=_nowPlayingDataSource;
@property(retain, nonatomic) MRDNowPlayingClient *explicitNowPlayingClient; // @synthesize explicitNowPlayingClient=_explicitNowPlayingClient;
@property(retain, nonatomic) MRDMediaRemoteClient *overrideClient; // @synthesize overrideClient=_overrideClient;
@property(retain, nonatomic) MRMutableApplicationActivity *activity; // @synthesize activity=_activity;
@property(retain, nonatomic) NSData *deviceInfoData; // @synthesize deviceInfoData=_deviceInfoData;
@property(retain, nonatomic) MRDeviceInfo *deviceInfo; // @synthesize deviceInfo=_deviceInfo;
@property(readonly, nonatomic) MRPlayerPath *playerPath; // @synthesize playerPath=_playerPath;
@property(readonly, nonatomic) MROrigin *origin; // @synthesize origin=_origin;
- (id)_playerPathForNowPlayingClient:(id)arg1;	// IMP=0x00000001000497d0
- (unsigned int)_stateFromDataSource:(id)arg1;	// IMP=0x0000000100049760
- (id)_pineboardHangdogInterface;	// IMP=0x00000001000496e8
- (void)_registerCallbacks;	// IMP=0x00000001000492a4
- (void)_onQueue_maybeSavePlaybackStateForNotification:(id)arg1;	// IMP=0x0000000100049174
- (void)_onQueue_maybeSetupPlaybackTimeoutTimerForNotification:(id)arg1;	// IMP=0x0000000100048e34
- (void)_reloadNowPlayingClientFromDataSource:(id)arg1;	// IMP=0x000000010004864c
- (id)_onQueue_addNowPlayingClient:(id)arg1;	// IMP=0x0000000100048434
- (void)_updateActivityStatus:(int)arg1;	// IMP=0x0000000100048380
- (void)_reevaluateStateWithReason:(id)arg1;	// IMP=0x0000000100047cdc
- (id)_calculateActiveNowPlayingPlayerClients;	// IMP=0x0000000100047a38
- (id)_calculateComputedNowPlayingClient;	// IMP=0x0000000100047648
- (id)_calculateActiveNowPlayingClient;	// IMP=0x000000010004738c
- (_Bool)_shouldHandleNotification:(id)arg1;	// IMP=0x000000010004728c
- (void)_handlePlayerDidRegister:(id)arg1;	// IMP=0x00000001000471d8
- (void)_handleNowPlayingApplicationDidUnregisterCanBeNowPlaying:(id)arg1;	// IMP=0x0000000100047108
- (void)_handleActivePlayerDidChange:(id)arg1;	// IMP=0x0000000100047038
- (void)_handlePlayerPictureInPictureEnabledDidChange:(id)arg1;	// IMP=0x0000000100046f68
- (void)_handlePlayerPropertiesDidChange:(id)arg1;	// IMP=0x0000000100046ea0
- (void)_handleOriginIsPlayingDidChange:(id)arg1;	// IMP=0x0000000100046db0
- (void)_handlePlayerIsPlayingDidChange:(id)arg1;	// IMP=0x0000000100046c64
- (void)_handleNowPlayingAppMaybeDidChange:(id)arg1;	// IMP=0x0000000100046b8c
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000100046a5c
- (void)deviceInfoDataSource:(id)arg1 deviceInfoDidChange:(id)arg2;	// IMP=0x0000000100046a4c
- (void)nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange:(id)arg1;	// IMP=0x0000000100046544
- (void)nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange:(id)arg1;	// IMP=0x00000001000461d0
- (void)nowPlayingDataSourceNowPlayingApplicationDidChange:(id)arg1;	// IMP=0x00000001000461c4
- (void)updateLastPlayingDate:(id)arg1;	// IMP=0x0000000100046048
- (void)clearDefaultSupportedCommandsData;	// IMP=0x0000000100045fdc
@property(readonly, nonatomic) NSDictionary *defaultSupportedCommands;
- (id)defaultSupportedCommandsForClient:(id)arg1;	// IMP=0x0000000100045c90
- (id)defaultSupportedCommandsDataForClient:(id)arg1;	// IMP=0x0000000100045adc
- (void)updateDefaultSupportedCommandsData:(id)arg1 forClient:(id)arg2;	// IMP=0x0000000100045968
- (void)removeNowPlayingClientForClient:(id)arg1;	// IMP=0x0000000100045534
- (id)existingNowPlayingClientForClient:(id)arg1;	// IMP=0x000000010004520c
- (id)existingNowPlayingClientForDisplayID:(id)arg1;	// IMP=0x0000000100045180
- (id)existingNowPlayingClientForPid:(int)arg1;	// IMP=0x0000000100045110
- (id)existingNowPlayingClientForPlayerPath:(id)arg1;	// IMP=0x00000001000450ac
- (id)nowPlayingClientForPlayerPath:(id)arg1;	// IMP=0x0000000100044ef4
- (id)nowPlayingClientForClient:(id)arg1;	// IMP=0x0000000100044e58
@property(readonly, nonatomic) double timeSincePlaying;
@property(readonly, nonatomic) _Bool isPlaying;
@property(readonly, nonatomic) _Bool isActivityActive;
@property(readonly, nonatomic) MRDNowPlayingClient *activeNowPlayingClient;
@property(readonly, nonatomic) NSArray *mostRecentPlayers;
@property(readonly, nonatomic) NSArray *nowPlayingClients;
- (void)flipVolumeControlCapabilityFlag:(unsigned int)arg1 enable:(_Bool)arg2;	// IMP=0x000000010004322c
@property(nonatomic) unsigned int volumeControlCapabilities;
@property(nonatomic) float volume;
@property(readonly, nonatomic) MRPlayerPath *activePlayerPath;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)initWithOrigin:(id)arg1;	// IMP=0x0000000100041d7c

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


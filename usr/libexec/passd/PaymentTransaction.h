//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SQLiteEntity.h"

@interface PaymentTransaction : SQLiteEntity
{
}

+ (id)_propertySettersForTransactionAuthenticationContext;	// IMP=0x000000010028e814
+ (id)_propertySettersForTransactionAuthenticationResult;	// IMP=0x000000010028e668
+ (id)_propertySettersForForeignExchangeInformation;	// IMP=0x000000010028e548
+ (id)_propertySettersForMerchant;	// IMP=0x000000010028de10
+ (id)_propertySettersForPaymentTransaction;	// IMP=0x000000010028b964
+ (id)_closestTransactionInDatabase:(id)arg1 withTransactionDate:(id)arg2 withinWindow:(double)arg3 forTransactionSourceIdentifiers:(id)arg4 additionalPredicates:(id)arg5;	// IMP=0x000000010028b474
+ (id)_paymentTransactionsWithQuery:(id)arg1 regions:(id *)arg2 tags:(id *)arg3;	// IMP=0x0000000100289cfc
+ (id)_paymentTransactionsWithQuery:(id)arg1;	// IMP=0x0000000100289ce8
+ (void)_count:(unsigned long long *)arg1 totalAmount:(id *)arg2 currencyCode:(id)arg3 forPredicate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x0000000100289af8
+ (id)_paymentTransactionsInDatabase:(id)arg1 matchingPredicate:(id)arg2;	// IMP=0x0000000100289a38
+ (id)_predicateForRewardsValue:(id)arg1 unit:(unsigned long long)arg2;	// IMP=0x0000000100289950
+ (id)_predicateForTransactionTag:(id)arg1;	// IMP=0x0000000100289930
+ (id)_predicateForAmount:(id)arg1 comparison:(long long)arg2;	// IMP=0x00000001002895e8
+ (id)_predicateForCurrencyCode:(id)arg1;	// IMP=0x00000001002895c8
+ (id)_predicateForWorldRegionIdentifier:(id)arg1;	// IMP=0x00000001002895a8
+ (id)_predicateForNoWorldRegion;	// IMP=0x000000010028958c
+ (id)_predicateForWorldRegion;	// IMP=0x0000000100289570
+ (id)_predicateForMerchant:(id)arg1;	// IMP=0x0000000100288d9c
+ (id)_predicateForMerchantCategory:(long long)arg1;	// IMP=0x0000000100288a64
+ (id)_predicateForMapsBrandCategory:(long long)arg1;	// IMP=0x0000000100288904
+ (id)_predicateForMapsMerchantCategory:(long long)arg1;	// IMP=0x00000001002887a4
+ (id)_predicateForFallbackCategory:(long long)arg1;	// IMP=0x0000000100288730
+ (id)_predicateForLastMerchantReprocessingDateBeforeDate:(id)arg1;	// IMP=0x00000001002885d4
+ (id)_predicateForMapsMatch;	// IMP=0x00000001002884c0
+ (id)_predicateForHasCityAndCountry;	// IMP=0x00000001002883ac
+ (id)_predicateForHasLocation;	// IMP=0x0000000100288390
+ (id)_predicateForHasPOIMatch;	// IMP=0x0000000100288374
+ (id)_predicateForNoMapsMatch;	// IMP=0x0000000100288260
+ (id)_predicateForRequiresMerchantReprocessing:(_Bool)arg1;	// IMP=0x00000001002881ec
+ (id)_predicateForOriginatedOnDevice:(_Bool)arg1;	// IMP=0x0000000100288178
+ (id)_predicateForIsCloudKitArchived:(_Bool)arg1;	// IMP=0x0000000100288104
+ (id)_predicateForMapsBrandIdentifier:(unsigned long long)arg1;	// IMP=0x0000000100288090
+ (id)_predicateForMapsIdentifier:(unsigned long long)arg1;	// IMP=0x000000010028801c
+ (id)_predicateForLifecycleIdentifier:(id)arg1;	// IMP=0x0000000100287ffc
+ (id)_predicateForTransactionTypes:(id)arg1;	// IMP=0x0000000100287de4
+ (id)_predicateForPeerPaymentSubType:(long long)arg1;	// IMP=0x0000000100287d70
+ (id)_predicateForTransactionType:(long long)arg1;	// IMP=0x0000000100287cfc
+ (id)_predicateForPeerPaymentCounterpartHandles:(id)arg1;	// IMP=0x0000000100287b2c
+ (id)_predicateForPeerPaymentCounterpartHandle:(id)arg1;	// IMP=0x0000000100287b0c
+ (id)_predicateForGreaterThanTransactionPID:(id)arg1;	// IMP=0x0000000100287aec
+ (id)_predicateForMapsBrandPID:(id)arg1;	// IMP=0x0000000100287acc
+ (id)_predicateForMapsMerchantPID:(id)arg1;	// IMP=0x0000000100287aac
+ (id)_predicateForSourcePID:(id)arg1;	// IMP=0x0000000100287a8c
+ (id)_predicateForMapsBrandName:(id)arg1;	// IMP=0x0000000100287a6c
+ (id)_predicateForMapsMerchantName:(id)arg1;	// IMP=0x0000000100287a4c
+ (id)_predicateForMerchantWebMerchantIdentifier:(id)arg1;	// IMP=0x0000000100287a2c
+ (id)_predicateForMerchantAdamIdentifier:(long long)arg1;	// IMP=0x00000001002879b8
+ (id)_predicateForMerchantRawCANL:(id)arg1;	// IMP=0x0000000100287998
+ (id)_predicateForMerchantRawName:(id)arg1;	// IMP=0x0000000100287978
+ (id)_predicateForMerchantName:(id)arg1;	// IMP=0x0000000100287958
+ (id)_predicateForTransactionStatus:(long long)arg1;	// IMP=0x00000001002878e4
+ (id)_predicateForTransactionDateNewerThanDate:(id)arg1;	// IMP=0x0000000100287854
+ (id)_predicateForTransactionDate:(id)arg1 withinWindow:(double)arg2;	// IMP=0x0000000100287690
+ (id)_predicateForPaymentHash:(id)arg1;	// IMP=0x00000001002873b0
+ (id)_predicateForUnansweredQuestions;	// IMP=0x00000001002871b4
+ (id)_predicateForAccountType:(long long)arg1;	// IMP=0x0000000100287140
+ (id)_predicateForAccountIdentifier:(id)arg1;	// IMP=0x0000000100287120
+ (id)_predicateForRedemptionType:(long long)arg1;	// IMP=0x00000001002870ac
+ (id)_predicateForSuppressFromUI:(_Bool)arg1;	// IMP=0x0000000100286f28
+ (id)_predicateForReferenceIdentifier:(id)arg1;	// IMP=0x0000000100286f08
+ (id)_predicateForServiceIdentifier:(id)arg1;	// IMP=0x0000000100286ee8
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x0000000100286ec8
+ (id)_predicateForWithNotificationServiceData:(unsigned long long)arg1;	// IMP=0x0000000100286e28
+ (id)_predicateForEndStatusChangedDate:(id)arg1;	// IMP=0x0000000100286d98
+ (id)_predicateForStartStatusChangedDate:(id)arg1;	// IMP=0x0000000100286d08
+ (id)_predicateForRedemptionEndDate:(id)arg1;	// IMP=0x0000000100286c78
+ (id)_predicateForRedemptionStartDate:(id)arg1;	// IMP=0x0000000100286be8
+ (id)_predicateForEndDate:(id)arg1;	// IMP=0x0000000100286b58
+ (id)_predicateForStartDate:(id)arg1;	// IMP=0x0000000100286ac8
+ (id)_predicateForWithBackingData:(unsigned long long)arg1;	// IMP=0x0000000100286874
+ (id)_predicateForWithTransactionSource:(unsigned long long)arg1 excludeCardType:(_Bool)arg2;	// IMP=0x0000000100286668
+ (id)_predicateForTransactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2;	// IMP=0x0000000100286534
+ (id)_predicateForTransactionSource:(unsigned long long)arg1;	// IMP=0x00000001002863ac
+ (id)_predicateForPID:(id)arg1;	// IMP=0x000000010028638c
+ (id)_predicateForTransactionSourceType:(unsigned long long)arg1;	// IMP=0x0000000100286318
+ (id)_predicateForTransactionSourceIdentifier:(id)arg1;	// IMP=0x00000001002862c0
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x00000001002860f0
+ (id)_predicateForTransactionSourcePID:(long long)arg1;	// IMP=0x000000010028607c
+ (unsigned long long)_countOfTransactionsWithMapsBrandPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0000000100285fe0
+ (unsigned long long)_countOfTransactionsWithMapsMerchantPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0000000100285f44
+ (id)authenticationContextFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x0000000100285df4
+ (id)foreignExchangeInformationFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x000000010028509c
+ (id)merchantFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x0000000100284ad4
+ (id)rewardsValuesForUnit:(unsigned long long)arg1 inDatabase:(id)arg2;	// IMP=0x000000010027fc2c
+ (id)tagsForTransactionPID:(long long)arg1 inDatabase:(id)arg2;	// IMP=0x000000010027f958
+ (void)setTags:(id)arg1 toTransactionWithIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x000000010027f5ac
+ (void)updateTransactionsWithTransactionSource:(id)arg1 toTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x000000010027f25c
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x000000010027f1d0
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 fromPID:(long long)arg2 batchHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010027ec44
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 batchHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010027ebec
+ (id)transactionsInDatabase:(id)arg1 forInstallmentPlanIdentifier:(id)arg2;	// IMP=0x000000010027ea20
+ (id)transactionsRequiringMerchantCleanupInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withLastReprocessingDateBeforeDate:(id)arg3 transactionDateWithinWindow:(double)arg4;	// IMP=0x000000010027e6b8
+ (_Bool)hasPaymentTransactionInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3;	// IMP=0x000000010027e53c
+ (id)_predicateForHasAssociatedReceipt;	// IMP=0x000000010027e42c
+ (id)transactionReceiptUniqueIDsInDatabase:(id)arg1;	// IMP=0x000000010027e158
+ (unsigned long long)numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:(id)arg1;	// IMP=0x000000010027e0d8
+ (unsigned long long)numberOfPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 newerThanDate:(id)arg4;	// IMP=0x000000010027df2c
+ (id)paymentTransactionsInDatabase:(id)arg1 originatedOnDevice:(_Bool)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x000000010027dd94
+ (id)_predicateForWorldRegionType:(unsigned long long)arg1;	// IMP=0x000000010027dd20
+ (id)_predicateForWorldRegionLocaleIdentifier:(id)arg1;	// IMP=0x000000010027dd00
+ (id)_predicateForWorldRegionNamePattern:(id)arg1;	// IMP=0x000000010027db24
+ (id)_predicateForWorldRegionLocalizedContent;	// IMP=0x000000010027db00
+ (id)regionIdentifiersInDatabase:(id)arg1 matchingName:(id)arg2 types:(id)arg3 localeIdentifier:(id)arg4 withRequest:(id)arg5 limit:(unsigned long long)arg6;	// IMP=0x000000010027d5c8
+ (id)_predicateForTransactionsMissingWorldRegionOnlyEligibleForProcessing:(_Bool)arg1;	// IMP=0x000000010027d03c
+ (id)paymentTransactionsForTokenizedTransactionsWithRegionsInDatabase:(id)arg1;	// IMP=0x000000010027cd64
+ (_Bool)hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:(id)arg1;	// IMP=0x000000010027cca4
+ (id)paymentTransactionsInDatabase:(id)arg1 missingWorldRegionWithLimit:(unsigned long long)arg2 onlyEligibleForProcessing:(_Bool)arg3;	// IMP=0x000000010027cb9c
+ (id)paymentTransactionsThatAreCloudKitArchived:(_Bool)arg1 forTransactionSourceIdentifiers:(id)arg2 inDatabase:(id)arg3;	// IMP=0x000000010027c9a0
+ (id)paymentTransactionsInDatabaseRequiringCloudKitArchiving:(id)arg1;	// IMP=0x000000010027c988
+ (id)paymentTransactionsRequiringReviewInDatabase:(id)arg1 forAccountIdentifier:(id)arg2;	// IMP=0x000000010027c770
+ (id)installmentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 installmentPlan:(id)arg3 withRedemptionType:(long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x000000010027c32c
+ (id)installmentPlanTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x000000010027c180
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 transactionTypes:(id)arg2 transactionSources:(id)arg3 transactionStatuses:(id)arg4 peerPaymentSubType:(long long)arg5 matchingMerchant:(id)arg6 merchantCategory:(long long)arg7 inRegions:(id)arg8 tags:(id)arg9 startDate:(id)arg10 endDate:(id)arg11 currencyCode:(id)arg12 amount:(id)arg13 amountComparison:(long long)arg14 rewardsValueUnit:(unsigned long long)arg15 rewardsValue:(id)arg16;	// IMP=0x000000010027b404
+ (id)_predicateForRequest:(id)arg1;	// IMP=0x000000010027b150
+ (void)totalAmount:(id *)arg1 forTransactionsWithRequest:(id)arg2 count:(unsigned long long *)arg3 inDatabase:(id)arg4;	// IMP=0x000000010027b078
+ (id)paymentTransactionsInDatabase:(id)arg1 forPredicate:(id)arg2 limit:(long long)arg3;	// IMP=0x000000010027adf0
+ (unsigned long long)countInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x000000010027ad58
+ (id)paymentTransactionsInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x000000010027ab88
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withRedemptionType:(long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x000000010027a878
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x000000010027a4fc
+ (id)paymentTransactionsInDatabase:(id)arg1 withMerchantCategory:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x000000010027a180
+ (id)peerPaymentCounterpartHandlesforSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0000000100279ed0
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x0000000100279c18
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMerchant:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x00000001002798c4
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifierWithoutRegion:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x0000000100279704
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0000000100279550
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsBrandIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x000000010027939c
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x0000000100279060
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionTypes:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5;	// IMP=0x0000000100278e3c
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4;	// IMP=0x0000000100278c78
+ (long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x0000000100278b9c
+ (id)pendingPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00000001002787b0
+ (id)approvedPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x0000000100278448
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x0000000100278230
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x000000010027804c
+ (id)paymentTransactionsInDatabase:(id)arg1 withServiceIdentifier:(id)arg2;	// IMP=0x0000000100277f60
+ (id)closestPendingTransactionInDatabase:(id)arg1 fromTransactionDate:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 forMerchantName:(id)arg4 forTransactionSourceIdentifiers:(id)arg5;	// IMP=0x0000000100277da8
+ (id)closestTransactionInDatabase:(id)arg1 fromTransaction:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x0000000100277410
+ (id)paymentTransactionsInDatabase:(id)arg1 withIdentifiers:(id)arg2 regions:(id *)arg3 tags:(id *)arg4;	// IMP=0x00000001002771d0
+ (id)anyInDatabase:(id)arg1 withPaymentHash:(id)arg2 withTransactionSource:(unsigned long long)arg3 withNotificationServiceData:(unsigned long long)arg4 transactionSourceIdentifiers:(id)arg5;	// IMP=0x0000000100276fc0
+ (id)mostRecentActiveTransactionInDatabase:(id)arg1;	// IMP=0x0000000100276c70
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1;	// IMP=0x0000000100276bb4
+ (id)anyInDatabase:(id)arg1 withReferenceIdentifier:(id)arg2;	// IMP=0x0000000100276b28
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x0000000100276a9c
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 forTransactionSourceIdentifier:(id)arg3;	// IMP=0x0000000100276930
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 accountIdentifier:(id)arg3 accountType:(long long)arg4;	// IMP=0x000000010027678c
+ (id)anyInDatabase:(id)arg1 withTransactionSourceIdentifier:(id)arg2;	// IMP=0x0000000100276700
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x0000000100276674
+ (void)deleteEntitiesForTransactionSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001002761b4
+ (void)truncateEntitiesForTransactionSourceIdentifiers:(id)arg1 withNotificationServiceData:(unsigned long long)arg2 suppressedFromUI:(unsigned long long)arg3 inDatabase:(id)arg4 toCount:(long long)arg5;	// IMP=0x0000000100275e30
+ (id)insertPaymentTransaction:(id)arg1 withTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x0000000100275da0
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x0000000100275d08
+ (id)joinClauseForProperty:(id)arg1;	// IMP=0x00000001002759fc
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x0000000100275984
+ (id)databaseTable;	// IMP=0x0000000100275978
- (void)_createPaymentTransactionAuthentication;	// IMP=0x000000010028b8ec
- (_Bool)_hasValidMerchantData;	// IMP=0x000000010028b864
- (id)_transactionSourceIdentifierObject;	// IMP=0x0000000100285e98
- (id)transactionAuthenticationContext;	// IMP=0x0000000100285c84
- (id)transactionAuthenticationResult;	// IMP=0x0000000100285adc
- (long long)accountType;	// IMP=0x0000000100285a88
- (id)passUniqueIdentifier;	// IMP=0x00000001002859b0
- (unsigned long long)mapsMerchantIdentifier;	// IMP=0x000000010028595c
- (long long)transactionType;	// IMP=0x0000000100285908
- (id)transactionSourceIdentifier;	// IMP=0x00000001002858b4
- (id)paymentApplication;	// IMP=0x000000010028580c
- (id)accountIdentifier;	// IMP=0x00000001002857f8
- (id)serviceIdentifier;	// IMP=0x00000001002857e4
- (id)identifier;	// IMP=0x00000001002857d0
- (id)foreignExchangeInformation;	// IMP=0x0000000100285350
- (id)merchant;	// IMP=0x0000000100284d14
- (id)paymentTransaction;	// IMP=0x00000001002839d8
- (void)updateWithPaymentTransactionAmountModifiers:(id)arg1;	// IMP=0x0000000100283930
- (void)updateWithPaymentTransactionAwards:(id)arg1;	// IMP=0x0000000100283888
- (void)removeMapsDataForIssueReportIdentifier:(id)arg1;	// IMP=0x0000000100283814
- (void)updateWithMapsBrand:(id)arg1;	// IMP=0x00000001002834a8
- (void)updateWithMapsMerchant:(id)arg1;	// IMP=0x000000010028313c
- (void)updateWithPaymentTransactionQuestions:(id)arg1;	// IMP=0x00000001002830bc
- (void)updateWithPaymentTransactionRewards:(id)arg1;	// IMP=0x000000010028303c
- (void)updateWithPaymentTransactionFees:(id)arg1;	// IMP=0x0000000100282fbc
- (void)updateWithPaymentAmounts:(id)arg1;	// IMP=0x0000000100282f14
- (void)updateWithMerchant:(id)arg1;	// IMP=0x000000010028293c
- (void)updateRedemptionType:(unsigned long long)arg1;	// IMP=0x00000001002828e0
- (void)updateSuppressBehavior:(unsigned long long)arg1;	// IMP=0x0000000100282884
- (void)updateWithPaymentTransaction:(id)arg1;	// IMP=0x00000001002800c4
- (void)replaceWithPaymentTransaction:(id)arg1;	// IMP=0x000000010027fe94
- (void)_applyRewardsValuesToDictionary:(id)arg1 forTransaction:(id)arg2;	// IMP=0x000000010027fb14
- (_Bool)deleteFromDatabase;	// IMP=0x000000010027627c
- (id)initWithPaymentTransaction:(id)arg1 transactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001002738ac

@end


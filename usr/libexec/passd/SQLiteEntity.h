//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SQLiteEntity-Protocol.h"

@class NSString, SQLiteDatabase;

@interface SQLiteEntity : NSObject <SQLiteEntity>
{
    SQLiteDatabase *_database;	// 8 = 0x8
    long long _persistentID;	// 16 = 0x10
}

+ (_Bool)_insertValues:(id)arg1 intoTable:(id)arg2 withPersistentID:(long long)arg3 database:(id)arg4;	// IMP=0x00000001000470c4
+ (void)applyPropertySetters:(id)arg1 toObject:(id)arg2 withProperties:(id)arg3 values:(id *)arg4;	// IMP=0x0000000100046a18
+ (id)joinClauseForProperty:(id)arg1;	// IMP=0x00000001000455c4
+ (id)foreignKeyColumnForTable:(id)arg1;	// IMP=0x00000001000455bc
+ (id)foreignDatabaseTablesToDelete;	// IMP=0x00000001000455b4
+ (id)foreignDatabaseTableForProperty:(id)arg1;	// IMP=0x00000001000455ac
+ (id)foreignDatabaseColumnForProperty:(id)arg1;	// IMP=0x00000001000455a4
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x0000000100045528
+ (id)databaseTable;	// IMP=0x00000001000454dc
+ (id)databaseValueForProperty:(id)arg1 clientValue:(id)arg2;	// IMP=0x00000001000454d4
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x00000001000454cc
+ (id)databasePropertyToSetClientProperty:(id)arg1;	// IMP=0x00000001000454c4
+ (id)databasePropertyToGetClientProperty:(id)arg1;	// IMP=0x00000001000454bc
+ (id)copyDatabaseDictionaryToSetClientDictionary:(id)arg1;	// IMP=0x000000010004528c
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 limit:(long long)arg5 groupingProperties:(id)arg6;	// IMP=0x0000000100057e54
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 limit:(long long)arg5;	// IMP=0x0000000100057e44
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4;	// IMP=0x0000000100057e34
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3;	// IMP=0x0000000100057e24
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2;	// IMP=0x0000000100057e14
+ (id)sumForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;	// IMP=0x0000000100057df8
+ (id)minValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;	// IMP=0x0000000100057ddc
+ (id)maxValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;	// IMP=0x0000000100057dc0
+ (id)_aggregateValueForProperty:(id)arg1 function:(id)arg2 predicate:(id)arg3 database:(id)arg4;	// IMP=0x0000000100057b54
+ (long long)countInDatabase:(id)arg1 predicate:(id)arg2;	// IMP=0x0000000100057b30
+ (id)anyInDatabase:(id)arg1 predicate:(id)arg2;	// IMP=0x00000001000579d0
@property(readonly, nonatomic) long long persistentID; // @synthesize persistentID=_persistentID;
@property(readonly, nonatomic) SQLiteDatabase *database; // @synthesize database=_database;
- (_Bool)_deleteRowFromTable:(id)arg1 usingColumn:(id)arg2;	// IMP=0x00000001000476c0
- (id)_copyTableClusteredValuesWithValues:(id)arg1;	// IMP=0x0000000100047510
- (id)duplicateEntityAssigningNewPersistentID:(long long)arg1;	// IMP=0x0000000100046b88
- (id)duplicateEntity;	// IMP=0x0000000100046b78
- (void)getValuesForProperties:(id)arg1 withApplier:(CDUnknownBlockType)arg2;	// IMP=0x0000000100046958
- (id)valueForProperty:(id)arg1;	// IMP=0x00000001000468a8
- (id)valueForExternalProperty:(id)arg1;	// IMP=0x00000001000468a0
- (_Bool)setValuesWithDictionary:(id)arg1;	// IMP=0x0000000100046070
- (_Bool)setValue:(id)arg1 forProperty:(id)arg2;	// IMP=0x0000000100045fd0
- (void)setExternalValuesWithDictionary:(id)arg1;	// IMP=0x0000000100045fcc
- (id)valuesforProperties:(id)arg1;	// IMP=0x0000000100045a34
@property(readonly, nonatomic) _Bool existsInDatabase;
- (_Bool)deleteFromDatabase;	// IMP=0x00000001000455cc
- (id)initWithPropertyValues:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0000000100044f10
- (id)initWithPersistentID:(long long)arg1 inDatabase:(id)arg2;	// IMP=0x0000000100044ec4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SQLiteEntity.h"

@interface WorldRegion : SQLiteEntity
{
}

+ (id)_predicateForTransaction:(id)arg1;	// IMP=0x00000001001c236c
+ (id)_predicateForLocaleIdentifier:(id)arg1;	// IMP=0x00000001001c234c
+ (id)_predicateForNamePattern:(id)arg1;	// IMP=0x00000001001c2170
+ (id)_predicateForName:(id)arg1;	// IMP=0x00000001001c2150
+ (id)_predicateForLocalizedContent;	// IMP=0x00000001001c212c
+ (id)_predicateForCode:(id)arg1;	// IMP=0x00000001001c210c
+ (id)_predicateForLongitude:(double)arg1;	// IMP=0x00000001001c2098
+ (id)_predicateForLatitude:(double)arg1;	// IMP=0x00000001001c2024
+ (id)_predicateForType:(unsigned long long)arg1;	// IMP=0x00000001001c1fb0
+ (id)_predicateForMUID:(id)arg1;	// IMP=0x00000001001c1f90
+ (id)_predicateForParentPID:(id)arg1;	// IMP=0x00000001001c1f70
+ (id)_predicateForPID:(id)arg1;	// IMP=0x00000001001c1f50
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x00000001001c1f30
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x00000001001c1e98
+ (id)joinClauseForProperty:(id)arg1;	// IMP=0x00000001001c1de4
+ (void)deleteRegionsWithNoMatchingTransactionsInDatabase:(id)arg1;	// IMP=0x00000001001c1dcc
+ (void)resetCoordinatesForAllRegionsInDatabase:(id)arg1;	// IMP=0x00000001001c1cdc
+ (void)deleteAllRegionsInDatabase:(id)arg1;	// IMP=0x00000001001c1c3c
+ (void)failedToAssociateTransaction:(id)arg1 error:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c1b98
+ (void)associateTransaction:(id)arg1 withWorldRegion:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c1af4
+ (id)lastRegionErrorForTransaction:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001c1a60
+ (id)regionsFromQuery:(id)arg1 additionalProperties:(id)arg2;	// IMP=0x00000001001c14c0
+ (id)regionsFromQuery:(id)arg1;	// IMP=0x00000001001c14b0
+ (id)regionWithIdentifier:(id)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c12f8
+ (id)regionsForTransactionPID:(long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c10cc
+ (id)regionsMissingLocalizedContentForLocaleIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001c0e04
+ (_Bool)hasRegionsMissingLocalizedContentForLocaleIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001c0c0c
+ (id)_sqlForRegionsMissingLocalizedContent;	// IMP=0x00000001001c0c00
+ (id)insertOrUpdateRegion:(id)arg1 single:(_Bool)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001c0058
+ (id)insertOrUpdateRegion:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001bfff0
+ (id)updateSingleRegion:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001bff88
+ (id)regionsOfType:(unsigned long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001bfde8
+ (_Bool)hasMultipleRegionsOfType:(unsigned long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001bfc50
+ (id)regionsMatchingName:(id)arg1 types:(id)arg2 localeIdentifier:(id)arg3 inDatabase:(id)arg4;	// IMP=0x00000001001bf7c8
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00000001001bf73c
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x00000001001bf6b0
+ (id)databaseTable;	// IMP=0x00000001001bf6a4

@end


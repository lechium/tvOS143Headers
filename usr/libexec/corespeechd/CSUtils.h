//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@interface CSUtils : NSObject
{
}

+ (_Bool)supportsVoiceTriggerFides;	// IMP=0x00000001000970ec
+ (_Bool)supportHandsFree;	// IMP=0x00000001000970ac
+ (_Bool)supportsSpeakerRecognitionAssets;	// IMP=0x0000000100097054
+ (id)timeStampWithSaltGrain;	// IMP=0x0000000100096f58
+ (id)deviceHwRevision;	// IMP=0x0000000100096cbc
+ (id)deviceBuildVersion;	// IMP=0x0000000100096c6c
+ (id)deviceUserAssignedName;	// IMP=0x0000000100096c4c
+ (double)systemUpTime;	// IMP=0x0000000100096b50
+ (id)deviceProductVersion;	// IMP=0x0000000100096ab8
+ (id)deviceProductType;	// IMP=0x0000000100096a20
+ (id)getFixedHighPrioritySerialQueueWithLabel:(id)arg1;	// IMP=0x0000000100096908
+ (id)getFixedPrioritySerialQueueWithLabel:(id)arg1 fixedPriority:(int)arg2;	// IMP=0x0000000100096878
+ (id)rootQueueWithFixedPriority:(int)arg1;	// IMP=0x00000001000967c8
+ (_Bool)supportZeroFilter;	// IMP=0x0000000100096778
+ (_Bool)supportBeepCanceller;	// IMP=0x0000000100096770
+ (_Bool)supportCircularBuffer;	// IMP=0x0000000100096710
+ (_Bool)shouldDeinterleaveAudioOnCS;	// IMP=0x00000001000966d0
+ (_Bool)supportBluetoothDeviceVoiceTrigger;	// IMP=0x0000000100096684
+ (_Bool)supportRemoraVoiceTrigger;	// IMP=0x000000010009662c
+ (_Bool)supportJarvisVoiceTrigger;	// IMP=0x0000000100096624
+ (_Bool)supportHearstVoiceTrigger;	// IMP=0x000000010009661c
+ (_Bool)hasRemoteCoreSpeech;	// IMP=0x0000000100096614
+ (_Bool)supportLazySessionActivation;	// IMP=0x0000000100096590
+ (_Bool)shouldDownloadVTAssetsOnDaemon;	// IMP=0x0000000100096550
+ (_Bool)supportLanguageDetector;	// IMP=0x0000000100096548
+ (_Bool)supportSessionActivateDelay;	// IMP=0x0000000100096508
+ (_Bool)shouldDelayPhaticForMyriadDecision;	// IMP=0x00000001000964c8
+ (_Bool)supportPhatic;	// IMP=0x0000000100096488
+ (_Bool)supportPremiumModel;	// IMP=0x0000000100096448
+ (_Bool)supportContinuousAudioFingerprint;	// IMP=0x0000000100096408
+ (_Bool)supportAdBlocker;	// IMP=0x00000001000963c8
+ (_Bool)isIOSDeviceSupportingBargeIn;	// IMP=0x00000001000962d4
+ (_Bool)supportPremiumWatchAssets;	// IMP=0x00000001000962cc
+ (_Bool)supportCompactPlus;	// IMP=0x000000010009628c
+ (_Bool)supportRaiseToSpeak;	// IMP=0x000000010009624c
+ (_Bool)supportTTS;	// IMP=0x00000001000961e8
+ (_Bool)supportSAT;	// IMP=0x00000001000961e0
+ (_Bool)supportSmartVolume;	// IMP=0x00000001000961a0
+ (_Bool)supportHybridEndpointer;	// IMP=0x0000000100096160
+ (_Bool)supportCSTwoShotDecision;	// IMP=0x00000001000960f4
+ (_Bool)supportSelfTriggerSuppression;	// IMP=0x0000000100096070
+ (_Bool)supportOpportunisticZLL;	// IMP=0x0000000100095ff4
+ (_Bool)supportPremiumAssets;	// IMP=0x0000000100095f78
+ (_Bool)supportKeywordDetector;	// IMP=0x0000000100095f70
+ (_Bool)supportContinuousVoiceTrigger;	// IMP=0x0000000100095eb8
+ (_Bool)shouldRunVTOnCS;	// IMP=0x0000000100095e64
+ (struct AudioStreamBasicDescription)aiffFileASBD;	// IMP=0x00000001000358f0
+ (struct AudioStreamBasicDescription)utteranceFileASBD;	// IMP=0x0000000100035834
+ (struct AudioStreamBasicDescription)lpcmNarrowBandASBD;	// IMP=0x00000001000357a0
+ (struct AudioStreamBasicDescription)lpcmASBD;	// IMP=0x000000010003570c
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedASBDWithSampleRate:(float)arg1 numberOfChannels:(unsigned int)arg2;	// IMP=0x0000000100035638
+ (struct AudioStreamBasicDescription)lpcmMonoNonInterleavedWithRemoteVADASBD;	// IMP=0x00000001000355ec
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedWithRemoteVADASBD;	// IMP=0x0000000100035578
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedASBD;	// IMP=0x0000000100035504
+ (struct AudioStreamBasicDescription)lpcmInterleavedASBDWithSampleRate:(float)arg1 numberOfChannels:(unsigned int)arg2;	// IMP=0x0000000100035430
+ (struct AudioStreamBasicDescription)lpcmMonoInterleavedWithRemoteVADASBD;	// IMP=0x00000001000353e4
+ (struct AudioStreamBasicDescription)lpcmInterleavedWithRemoteVADASBD;	// IMP=0x0000000100035370
+ (struct AudioStreamBasicDescription)lpcmInterleavedASBD;	// IMP=0x00000001000352fc
+ (struct AudioStreamBasicDescription)speexASBD;	// IMP=0x00000001000352c4
+ (struct AudioStreamBasicDescription)opusNarrowBandASBD;	// IMP=0x000000010003526c
+ (struct AudioStreamBasicDescription)opusASBD;	// IMP=0x0000000100035214
+ (struct AudioStreamBasicDescription)lpcmFloatASBD;	// IMP=0x0000000100035180
+ (struct AudioStreamBasicDescription)lpcmInt16NarrowBandASBD;	// IMP=0x0000000100035120
+ (struct AudioStreamBasicDescription)lpcmInt16ASBD;	// IMP=0x00000001000350c0
+ (id)_contentsOfDirectoryAtURL:(id)arg1 matchingPattern:(id)arg2 includingPropertiesForKeys:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000494a8
+ (void)_sortedURLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000490c8
+ (void)URLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100048fd0
+ (void)clearLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 exceedNumber:(unsigned long long)arg3;	// IMP=0x0000000100048b08
+ (void)removeLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 beforeDays:(float)arg3;	// IMP=0x00000001000484b8
+ (id)_sharedDisposeLoggingQueue;	// IMP=0x0000000100048400
+ (_Bool)hasRemoteBuiltInMic;	// IMP=0x000000010005f578
+ (void)getTrialIdsForAssetType:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010005f65c
+ (unsigned long long)getAssetTypeForNamespace:(id)arg1;	// IMP=0x000000010005f580
+ (id)recordContextString:(id)arg1;	// IMP=0x0000000100064db0
+ (_Bool)isRecordContextJarvisButtonPress:(id)arg1;	// IMP=0x0000000100064d38
+ (_Bool)isRecordContextJarvisVoiceTrigger:(id)arg1;	// IMP=0x0000000100064cc0
+ (_Bool)isRecordContextRaiseToSpeak:(id)arg1;	// IMP=0x0000000100064c48
+ (_Bool)isRecordContextHearstDoubleTap:(id)arg1;	// IMP=0x0000000100064bd0
+ (_Bool)isRecordContextHearstVoiceTrigger:(id)arg1;	// IMP=0x0000000100064b58
+ (_Bool)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;	// IMP=0x0000000100064ae0
+ (_Bool)isRecordContextAutoPrompt:(id)arg1;	// IMP=0x0000000100064a68
+ (_Bool)isRecordContextHomeButtonPress:(id)arg1;	// IMP=0x00000001000649f0
+ (_Bool)isRecordContextVoiceTrigger:(id)arg1;	// IMP=0x0000000100064978
+ (_Bool)extractArchiveFromDirectory:(id)arg1 toDir:(id)arg2;	// IMP=0x0000000100070c74
+ (id)getSiriLanguageWithFallback:(id)arg1;	// IMP=0x00000001000719d4
+ (void)applyNegative12dBGain:(id)arg1;	// IMP=0x000000010007bd7c
+ (void)apply12dBGain:(id)arg1;	// IMP=0x000000010007bd6c
+ (void)applyGain:(float)arg1 toBuffer:(id)arg2;	// IMP=0x000000010007bac4
+ (id)convertToShortLPCMBufFromFloatLPCMBuf:(id)arg1;	// IMP=0x000000010007b924
+ (id)convertToFloatLPCMBufFromShortLPCMBuf:(id)arg1;	// IMP=0x000000010007b7ac
+ (_Bool)xpcConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x0000000100088140
+ (id)assetHashInResourcePath:(id)arg1;	// IMP=0x00000001000a175c
+ (id)alertMuteBehaviorDict;	// IMP=0x00000001000ac9a8
+ (id)alertMuteSettings;	// IMP=0x00000001000ac8f8
+ (id)speexRecordSettings;	// IMP=0x00000001000ac7c0
+ (id)opusRecordSettings;	// IMP=0x00000001000ac634
+ (id)lpcmRecordSettings;	// IMP=0x00000001000ac444
+ (id)jarvisVoiceTriggerRecordContext:(id)arg1;	// IMP=0x00000001000ac330
+ (id)hearstVoiceTriggerRecordContext:(id)arg1;	// IMP=0x00000001000ac21c
+ (id)voiceTriggerRecordContext;	// IMP=0x00000001000ac198
+ (_Bool)readAudioChunksFrom:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001000c0d00
+ (unsigned long long)macHostTimeFromBridgeHostTime:(unsigned long long)arg1;	// IMP=0x00000001000c1674
+ (unsigned long long)sampleCountFromHostTime:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;	// IMP=0x00000001000c15c4
+ (unsigned long long)hostTimeFromSampleCount:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;	// IMP=0x00000001000c150c
+ (double)getHostClockFrequency;	// IMP=0x00000001000c14c0
+ (double)hostTimeToTimeInterval:(unsigned long long)arg1;	// IMP=0x00000001000c148c
+ (float)hostTimeToSeconds:(unsigned long long)arg1;	// IMP=0x00000001000c1454
+ (unsigned long long)secondsToHostTime:(float)arg1;	// IMP=0x00000001000c141c
+ (void)iterateBitset:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001000d0194
+ (unsigned int)getNumElementInBitset:(unsigned long long)arg1;	// IMP=0x00000001000d00c8
+ (_Bool)machXPCConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x00000001000d7ce8

@end


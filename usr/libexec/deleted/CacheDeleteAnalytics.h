//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, PowerLogger, SplunkLogger;
@protocol CDPurgeableResultCache, CacheDeleteServiceProvider, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface CacheDeleteAnalytics : NSObject
{
    id <CDPurgeableResultCache> _purgeableResultCache;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_serialQueue;	// 16 = 0x10
    NSMutableDictionary *_dailyStats;	// 24 = 0x18
    id <CacheDeleteServiceProvider> _serviceProvider;	// 32 = 0x20
    unsigned long long _nandSize;	// 40 = 0x28
    PowerLogger *_powerLogger;	// 48 = 0x30
    SplunkLogger *_splunkLogger;	// 56 = 0x38
}

+ (_Bool)isDataCollectionEnabled;	// IMP=0x000000010001ea38
+ (id)buildType;	// IMP=0x000000010001e9f0
+ (id)currentSystemInfo;	// IMP=0x000000010001e804
- (void).cxx_destruct;	// IMP=0x0000000100025f14
@property(retain, nonatomic) SplunkLogger *splunkLogger; // @synthesize splunkLogger=_splunkLogger;
@property(retain, nonatomic) PowerLogger *powerLogger; // @synthesize powerLogger=_powerLogger;
@property(readonly) unsigned long long nandSize; // @synthesize nandSize=_nandSize;
@property(retain, nonatomic) id <CacheDeleteServiceProvider> serviceProvider; // @synthesize serviceProvider=_serviceProvider;
@property(retain, nonatomic) NSMutableDictionary *dailyStats; // @synthesize dailyStats=_dailyStats;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(retain, nonatomic) id <CDPurgeableResultCache> purgeableResultCache; // @synthesize purgeableResultCache=_purgeableResultCache;
- (void)_reportLowDiskFunctionalFailure:(id)arg1 failureType:(int)arg2 isRoot:(_Bool)arg3;	// IMP=0x0000000100025d40
- (void)reportLowDiskFunctionalFailure:(id)arg1 failureType:(int)arg2 isRoot:(_Bool)arg3;	// IMP=0x0000000100025c5c
- (void)_reportBroadcastLowDiskNotification:(id)arg1 forVolume:(id)arg2;	// IMP=0x00000001000259ec
- (void)reportBroadcastLowDiskNotification:(id)arg1 forVolume:(id)arg2;	// IMP=0x00000001000258f4
- (void)_reportReceivedLowDiskNotification:(id)arg1 forVolume:(id)arg2;	// IMP=0x0000000100025698
- (void)reportReceivedLowDiskNotification:(id)arg1 forVolume:(id)arg2;	// IMP=0x00000001000255a0
- (void)processPeriodicOperationResult:(id)arg1;	// IMP=0x0000000100025068
- (void)processPurgeableOperationResult:(id)arg1;	// IMP=0x0000000100024c90
- (void)processPurgeOperationResult:(id)arg1;	// IMP=0x000000010002390c
- (id)cacheManagementUsageStats;	// IMP=0x00000001000233d4
- (id)applicationUsageStats;	// IMP=0x0000000100022d90
- (id)systemUsageStats;	// IMP=0x0000000100022688
- (id)dailyPurgeableStats:(_Bool)arg1;	// IMP=0x0000000100021b1c
- (_Bool)isRootVolume:(id)arg1;	// IMP=0x0000000100021ab4
- (const char *)stringForTime:(double)arg1;	// IMP=0x0000000100021a74
- (const char *)stringForUrgency:(int)arg1;	// IMP=0x0000000100021a50
- (void)addDailyValueForKey:(id)arg1 value:(double)arg2;	// IMP=0x00000001000218c4
- (void)incrementDailyValueForKey:(id)arg1;	// IMP=0x000000010002179c
- (double)secondsFrom:(unsigned long long)arg1 to:(unsigned long long)arg2;	// IMP=0x000000010002178c
- (double)machTimeToSeconds:(unsigned long long)arg1;	// IMP=0x00000001000216c4
- (void)postStatsDictionary:(id)arg1 summarize:(_Bool)arg2;	// IMP=0x00000001000216c0
- (id)roundNumber:(id)arg1 toSignificantDigits:(int)arg2;	// IMP=0x0000000100021660
- (double)round:(double)arg1 toSignificantDigits:(int)arg2;	// IMP=0x0000000100021608
- (void)reportPeriodic:(id)arg1;	// IMP=0x0000000100021544
- (void)reportPurgeable:(id)arg1;	// IMP=0x000000010002147c
- (void)reportPurge:(id)arg1;	// IMP=0x00000001000213b4
- (void)_reportPurgeableTimingInfo:(id)arg1;	// IMP=0x0000000100021260
- (void)_reportPurgeTimingInfo:(id)arg1;	// IMP=0x000000010002110c
- (void)anonymizeAndFlush:(id)arg1 name:(id)arg2;	// IMP=0x0000000100020d60
- (void)_postDailyStats:(id)arg1;	// IMP=0x0000000100020ad8
- (void)_addDailyStats:(id)arg1;	// IMP=0x0000000100020a6c
- (void)sendPurgeableAmountStats;	// IMP=0x0000000100020748
- (void)sendCAEvent:(id)arg1 key:(id)arg2 value:(id)arg3;	// IMP=0x0000000100020614
- (id)fetchAdditionalStats;	// IMP=0x000000010002052c
- (id)fetchApplicationUsageStats;	// IMP=0x000000010002047c
- (id)fetchTimingStats:(id)arg1;	// IMP=0x000000010001ffd0
- (id)fetchStorageStats;	// IMP=0x000000010001eff0
- (id)fetchLowDiskStats;	// IMP=0x000000010001ea3c
- (void)reportPurgeableTimingInfo:(id)arg1;	// IMP=0x000000010001e740
- (void)reportPurgeTimingInfo:(id)arg1;	// IMP=0x000000010001e67c
- (void)postDailyStats:(id)arg1;	// IMP=0x000000010001e5b8
- (void)addDailyStats:(id)arg1;	// IMP=0x000000010001e4f0
- (void)clear;	// IMP=0x000000010001e224
- (void)load:(id)arg1;	// IMP=0x000000010001df04
- (void)save;	// IMP=0x000000010001dd9c
- (id)persistPath;	// IMP=0x000000010001dcd8
- (id)initWithServiceProvider:(id)arg1 withPurgeableResultCache:(id)arg2;	// IMP=0x000000010001da28

@end


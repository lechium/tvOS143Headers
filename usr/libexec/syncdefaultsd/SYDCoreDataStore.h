//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSManagedObjectContext, NSPersistentContainer, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SYDCoreDataStore : NSObject
{
    _Bool _shouldLogValues;	// 8 = 0x8
    NSPersistentContainer *__persistentContainer;	// 16 = 0x10
    NSURL *_URL;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_persistentContainerQueue;	// 32 = 0x20
    NSString *_fileProtectionType;	// 40 = 0x28
    NSManagedObjectContext *_transactionContext;	// 48 = 0x30
}

+ (_Bool)isInvalidTokenError:(id)arg1;	// IMP=0x0000000100061bf8
+ (_Bool)isCorruptionError:(id)arg1;	// IMP=0x0000000100061758
+ (id)managedObjectModel;	// IMP=0x0000000100060a18
- (void).cxx_destruct;	// IMP=0x0000000100061d58
@property(retain, nonatomic) NSManagedObjectContext *transactionContext; // @synthesize transactionContext=_transactionContext;
@property(retain, nonatomic) NSString *fileProtectionType; // @synthesize fileProtectionType=_fileProtectionType;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *persistentContainerQueue; // @synthesize persistentContainerQueue=_persistentContainerQueue;
@property(nonatomic) _Bool shouldLogValues; // @synthesize shouldLogValues=_shouldLogValues;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSPersistentContainer *_persistentContainer; // @synthesize _persistentContainer=__persistentContainer;
- (_Bool)_queue_handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x000000010006196c
- (void)handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x000000010006162c
- (_Bool)saveTransaction:(id *)arg1;	// IMP=0x00000001000613f8
- (id)transactionalStoreWithError:(id *)arg1;	// IMP=0x0000000100061284
- (unsigned long long)fileSizeBytes;	// IMP=0x0000000100060eb0
- (void)_queue_destroyPersistentStoreInPersistentStoreCoordinator:(id)arg1;	// IMP=0x0000000100060d28
- (void)destroyPersistentStore;	// IMP=0x0000000100060b9c
- (id)persistentContainerWithError:(id *)arg1;	// IMP=0x0000000100060200
- (_Bool)saveContext:(id)arg1 reason:(id)arg2 includingTransactionContext:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000100060034
- (id)_contextForStoreIdentifier:(id)arg1 persistentContainer:(id)arg2;	// IMP=0x000000010005ffdc
- (id)contextForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005fec4
- (id)managedKeyValuesMatchingPredicate:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005fc94
- (id)managedKeyValueWithRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x000000010005fa44
- (id)managedKeyValueWithKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 forceCreateNewRow:(_Bool)arg4 inContext:(id)arg5 error:(id *)arg6;	// IMP=0x000000010005f678
- (id)managedKeyValueWithKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 inContext:(id)arg4 error:(id *)arg5;	// IMP=0x000000010005f5dc
- (id)managedStoreWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x000000010005f2f4
- (id)managedDatabaseCreateIfNecessary:(_Bool)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005f0e8
- (id)syncEngineMetadataWithError:(id *)arg1;	// IMP=0x000000010005ee88
- (_Bool)saveSyncEngineMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005ec08
- (id)dictionaryRepresentationForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005e3f4
- (short)failedMigrationCountWithError:(id *)arg1;	// IMP=0x000000010005e1e8
- (_Bool)setFailedMigrationCount:(short)arg1 error:(id *)arg2;	// IMP=0x000000010005def8
- (_Bool)didMigrateFromPlistsWithError:(id *)arg1;	// IMP=0x000000010005dcec
- (_Bool)setDidMigrateFromPlists:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000010005d9fc
- (id)acAccountIdentifierWithError:(id *)arg1;	// IMP=0x000000010005d7d0
- (_Bool)setACAccountIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005d508
- (_Bool)clearServerSystemFieldsRecordsForAllStoresWithError:(id *)arg1;	// IMP=0x000000010005cffc
- (id)changedKeysForStoreIdentifier:(id)arg1 sinceChangeToken:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005bbf0
- (id)currentChangeTokenForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005b738
- (unsigned long long)numberOfKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005b3d4
- (_Bool)clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005aea4
- (id)allStoreIdentifiersWithError:(id *)arg1;	// IMP=0x000000010005a9e8
- (id)allRecordNamesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005a4fc
- (_Bool)deleteDataForStoresMatchingPredicate:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005a24c
- (_Bool)deleteDataForAllStoresWithError:(id *)arg1;	// IMP=0x000000010005a184
- (_Bool)deleteDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005a068
- (_Bool)saveServerSyncAnchorSystemFieldsRecordData:(id)arg1 forStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100059d18
- (id)serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100059a0c
- (_Bool)removeKeyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100059678
- (_Bool)removeKeyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100059610
- (_Bool)removeKeyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000100059220
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000591b8
- (_Bool)_saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 forceCreateNewRow:(_Bool)arg5 error:(id *)arg6;	// IMP=0x0000000100058838
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 error:(id *)arg5;	// IMP=0x00000001000587b8
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000100058740
- (id)keyValueFromManagedKeyValue:(id)arg1;	// IMP=0x0000000100058598
- (id)keyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100058244
- (id)keyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000100057d80
- (id)description;	// IMP=0x0000000100057cdc
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2 persistentContainer:(id)arg3 isTransactional:(_Bool)arg4;	// IMP=0x0000000100057aac
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2;	// IMP=0x0000000100057a48
- (id)initWithURL:(id)arg1;	// IMP=0x0000000100057a30

@end


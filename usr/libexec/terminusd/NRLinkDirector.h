//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NRLinkDelegate-Protocol.h"
#import "NRLinkManagerBluetoothDelegate-Protocol.h"
#import "NRLinkManagerQuickRelayDelegate-Protocol.h"
#import "NRLinkManagerWiFiDelegate-Protocol.h"
#import "NRPhoneCallRelayAgentDelegate-Protocol.h"

@class NRDTestServer, NRLinkManagerBluetooth, NRLinkManagerFixedInterface, NRLinkManagerQuickRelay, NRLinkManagerWiFi, NRPhoneCallRelayAgent, NSData, NSMutableDictionary, NSMutableSet, NSString, NWAddressEndpoint, NWNetworkAgentRegistration;
@protocol OS_dispatch_queue;

@interface NRLinkDirector : NSObject <NRLinkDelegate, NRLinkManagerWiFiDelegate, NRLinkManagerBluetoothDelegate, NRLinkManagerQuickRelayDelegate, NRPhoneCallRelayAgentDelegate>
{
    _Bool _isFixedInterfaceMode;	// 8 = 0x8
    _Bool _isEnabled;	// 9 = 0x9
    _Bool _isTestingAltAccount;	// 10 = 0xa
    _Bool _updatedMTU;	// 11 = 0xb
    NRLinkManagerBluetooth *_bluetoothManager;	// 16 = 0x10
    NRLinkManagerWiFi *_wifiManager;	// 24 = 0x18
    NRLinkManagerQuickRelay *_quickRelayManager;	// 32 = 0x20
    struct NEVirtualInterface_s *_virtualInterface;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_queue;	// 48 = 0x30
    NRLinkManagerFixedInterface *_fixedInterfaceManager;	// 56 = 0x38
    NRDTestServer *_testServer;	// 64 = 0x40
    NRPhoneCallRelayAgent *_phoneCallRelayAgent;	// 72 = 0x48
    NSMutableDictionary *_conductors;	// 80 = 0x50
    NSMutableSet *_orphanedDeviceMonitorConnections;	// 88 = 0x58
    NSMutableSet *_orphanedDevicePreferencesConnections;	// 96 = 0x60
    NSData *_usedProxyNotifyPayload;	// 104 = 0x68
    NWNetworkAgentRegistration *_proxyAgentRegistration;	// 112 = 0x70
}

+ (id)copySharedLinkDirector;	// IMP=0x000000010006d654
- (void).cxx_destruct;	// IMP=0x000000010006d4ac
@property(retain, nonatomic) NWNetworkAgentRegistration *proxyAgentRegistration; // @synthesize proxyAgentRegistration=_proxyAgentRegistration;
@property(retain, nonatomic) NSData *usedProxyNotifyPayload; // @synthesize usedProxyNotifyPayload=_usedProxyNotifyPayload;
@property(retain, nonatomic) NSMutableSet *orphanedDevicePreferencesConnections; // @synthesize orphanedDevicePreferencesConnections=_orphanedDevicePreferencesConnections;
@property(retain, nonatomic) NSMutableSet *orphanedDeviceMonitorConnections; // @synthesize orphanedDeviceMonitorConnections=_orphanedDeviceMonitorConnections;
@property(retain, nonatomic) NSMutableDictionary *conductors; // @synthesize conductors=_conductors;
@property(retain, nonatomic) NRPhoneCallRelayAgent *phoneCallRelayAgent; // @synthesize phoneCallRelayAgent=_phoneCallRelayAgent;
@property(nonatomic) _Bool updatedMTU; // @synthesize updatedMTU=_updatedMTU;
@property(retain, nonatomic) NRDTestServer *testServer; // @synthesize testServer=_testServer;
@property(retain, nonatomic) NRLinkManagerFixedInterface *fixedInterfaceManager; // @synthesize fixedInterfaceManager=_fixedInterfaceManager;
@property(nonatomic) _Bool isTestingAltAccount; // @synthesize isTestingAltAccount=_isTestingAltAccount;
@property(nonatomic) _Bool isEnabled; // @synthesize isEnabled=_isEnabled;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool isFixedInterfaceMode; // @synthesize isFixedInterfaceMode=_isFixedInterfaceMode;
@property(nonatomic) struct NEVirtualInterface_s *virtualInterface; // @synthesize virtualInterface=_virtualInterface;
@property(retain, nonatomic) NRLinkManagerQuickRelay *quickRelayManager; // @synthesize quickRelayManager=_quickRelayManager;
@property(retain, nonatomic) NRLinkManagerWiFi *wifiManager; // @synthesize wifiManager=_wifiManager;
@property(retain, nonatomic) NRLinkManagerBluetooth *bluetoothManager; // @synthesize bluetoothManager=_bluetoothManager;
- (void)removeTerminusPrefixDropPolicy;	// IMP=0x000000010006cf50
- (void)addTerminusPrefixDropPolicy;	// IMP=0x000000010006ca80
- (void)measureBTLatencyForNRUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010006c850
- (void)setMPKLLoggingWithEnabled:(_Bool)arg1;	// IMP=0x000000010006c808
- (void)updateDeviceMonitorConnectionsForNRUUID:(id)arg1;	// IMP=0x000000010006c72c
- (void)removeDevicePreferencesManagerConnection:(id)arg1;	// IMP=0x000000010006c3bc
- (void)setPolicyTrafficClasses:(id)arg1 forConnection:(id)arg2 nrUUID:(id)arg3;	// IMP=0x000000010006c1c0
- (void)setLinkPreferences:(id)arg1 forConnection:(id)arg2 nrUUID:(id)arg3;	// IMP=0x000000010006bfc4
- (void)removeDeviceSetupInProgressConnection:(id)arg1;	// IMP=0x000000010006bc54
- (void)addDeviceSetupInProgressConnection:(id)arg1 nrUUID:(id)arg2;	// IMP=0x000000010006badc
- (void)removeDeviceMonitorConnection:(id)arg1;	// IMP=0x000000010006b76c
- (void)addDeviceMonitorConnection:(id)arg1 nrUUID:(id)arg2;	// IMP=0x000000010006b594
- (void)apsIsConnected:(_Bool)arg1;	// IMP=0x000000010006b3fc
- (void)deviceHasPhoneCallRelayRequest:(_Bool)arg1;	// IMP=0x000000010006b220
- (void)pipeDidConnectForNRUUID:(_Bool)arg1 nrUUID:(id)arg2;	// IMP=0x000000010006b0fc
- (void)linkPeerIsAsleep:(id)arg1 isAsleep:(_Bool)arg2;	// IMP=0x000000010006af58
- (void)linkDidReceiveData:(id)arg1 data:(id)arg2;	// IMP=0x000000010006ad94
- (void)linkIsUnavailable:(id)arg1;	// IMP=0x000000010006ac1c
- (void)linkIsSuspended:(id)arg1;	// IMP=0x000000010006aaa4
- (void)linkIsReady:(id)arg1;	// IMP=0x000000010006a91c
- (void)linkIsAvailable:(id)arg1;	// IMP=0x000000010006a7a4
- (void)setWiFiRangeExtensionAllowedForTesting:(_Bool)arg1;	// IMP=0x000000010006a624
- (void)setSimulateAltAccountTesting:(_Bool)arg1;	// IMP=0x000000010006a5d4
- (void)setFixedInterfaceModeWithEnabled:(_Bool)arg1 interfaceName:(id)arg2 peerAddress:(id)arg3;	// IMP=0x000000010006a4c0
- (void)enableCloudLink:(_Bool)arg1;	// IMP=0x000000010006a20c
- (unsigned int)cancelAllLinks;	// IMP=0x000000010006a06c
- (id)copyDeviceMonitorStatusForNRUUID:(id)arg1 replyDict:(id)arg2;	// IMP=0x0000000100069f30
- (id)copyPrimaryLinkForNRUUID:(id)arg1;	// IMP=0x0000000100069e0c
@property(readonly, nonatomic) NWAddressEndpoint *localWiFiEndpoint;
- (void)setLinkRequirementsForNRUUID:(id)arg1 inputBPS:(unsigned int)arg2 outputBPS:(unsigned int)arg3 packetsPS:(unsigned int)arg4;	// IMP=0x0000000100069cf8
- (void)checkEnabledDevices;	// IMP=0x0000000100069124
- (void)handleAlwaysOnWiFiQueryComplete;	// IMP=0x0000000100068fa4
- (void)reportEvent:(int)arg1;	// IMP=0x0000000100068f94
- (void)reportEvent:(int)arg1 detailsFormat:(id)arg2;	// IMP=0x0000000100068f00
- (void)reportEvent:(int)arg1 details:(id)arg2;	// IMP=0x0000000100068ef0
- (id)copyStatusString;	// IMP=0x0000000100068908
- (void)updateProxyAgentForNRUUID:(id)arg1;	// IMP=0x0000000100068904
- (void)unregisterProxyAgent;	// IMP=0x000000010006886c
- (void)setupCatchAllInterfaceIfApplicable;	// IMP=0x0000000100067fdc
- (void)createCatchAllInterface;	// IMP=0x0000000100067e0c
- (void)removeCatchAllInterface;	// IMP=0x0000000100067c80
- (void)refreshCompanionProxyAgent;	// IMP=0x0000000100067b24
- (void)setupManagers;	// IMP=0x0000000100067724
- (id)name;	// IMP=0x0000000100067718
- (void)checkStarted;	// IMP=0x00000001000676c4
- (void)cancelDirector;	// IMP=0x0000000100067210
- (void)restartDirector;	// IMP=0x0000000100067190
- (void)startDirector;	// IMP=0x0000000100066dc0
- (id)initDirector;	// IMP=0x0000000100066bd8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


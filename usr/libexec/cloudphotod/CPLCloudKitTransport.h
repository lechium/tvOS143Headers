//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudPhotoLibrary/CPLPlatformObject.h>

#import "CPLCloudKitTaskController-Protocol.h"
#import "CPLDuetTicketProviderBudgetDelegate-Protocol.h"
#import "CPLEngineTransportImplementation-Protocol.h"

@class CKContainer, CKDatabase, CKRecordZoneID, CPLCloudKitOperationsTracker, CPLCloudKitSimpleCache, CPLCloudKitTaskGroupThrottler, CPLEngineLibrary, NSArray, NSDate, NSDictionary, NSIndexSet, NSMutableSet, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface CPLCloudKitTransport : CPLPlatformObject <CPLDuetTicketProviderBudgetDelegate, CPLEngineTransportImplementation, CPLCloudKitTaskController>
{
    NSObject<OS_dispatch_queue> *_workQueue;	// 8 = 0x8
    _Bool _opened;	// 16 = 0x10
    CPLCloudKitOperationsTracker *_operationTracker;	// 24 = 0x18
    _Bool _mightRejectVideoStreaming;	// 32 = 0x20
    NSIndexSet *_rejectedVideoStreamingIntents;	// 40 = 0x28
    _Bool _rejectVideoStreamingAtContentLevel;	// 48 = 0x30
    NSArray *_rejectedVideoStreamingIntentNames;	// 56 = 0x38
    NSDictionary *_operationGroupMapping;	// 64 = 0x40
    NSMutableSet *_invalidaOperationGroupMappingEntries;	// 72 = 0x48
    CPLCloudKitSimpleCache *_streamingURLCache;	// 80 = 0x50
    CPLCloudKitTaskGroupThrottler *_resourceDownloadGate;	// 88 = 0x58
    CPLCloudKitTaskGroupThrottler *_streamingGate;	// 96 = 0x60
    CKRecordZoneID *_overridePrimarySyncZoneID;	// 104 = 0x68
    Class _overrideZoneIdentificationClass;	// 112 = 0x70
    NSString *_overrideNormalScopeIdentifier;	// 120 = 0x78
    CKRecordZoneID *_overrideNormalZoneID;	// 128 = 0x80
    CKContainer *_container;	// 136 = 0x88
    CKDatabase *_database;	// 144 = 0x90
    CKDatabase *_sharedDatabase;	// 152 = 0x98
    NSDate *_significantWorkBeginDate;	// 160 = 0xa0
}

+ (id)_errorsByTaskForTasksByRecordId:(id)arg1 fromUnderlyingError:(id)arg2;	// IMP=0x00000001000b8ef0
+ (id)_betterErrorForRecordId:(id)arg1 recordError:(id)arg2;	// IMP=0x00000001000b8c78
+ (unsigned long long)networkBehaviorForForegroundOperation:(_Bool)arg1 upload:(_Bool)arg2 metadata:(_Bool)arg3;	// IMP=0x00000001000b8c28
+ (_Bool)enableTurboMode;	// IMP=0x00000001000b8b90
+ (_Bool)useSandboxEnvironment;	// IMP=0x00000001000b8af8
+ (_Bool)allowsSyncOverCellular;	// IMP=0x00000001000b8a2c
+ (void)transportWontBeUsed;	// IMP=0x00000001000b3954
+ (id)_container;	// IMP=0x00000001000b38b0
- (void).cxx_destruct;	// IMP=0x00000001000bca4c
@property(retain, nonatomic) NSDate *significantWorkBeginDate; // @synthesize significantWorkBeginDate=_significantWorkBeginDate;
@property(retain, nonatomic) CKDatabase *sharedDatabase; // @synthesize sharedDatabase=_sharedDatabase;
@property(retain, nonatomic) CKDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) CKContainer *container; // @synthesize container=_container;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) CPLCloudKitOperationsTracker *operationTracker; // @synthesize operationTracker=_operationTracker;
- (id)filteredUserRecordIDFromRealRecordID:(id)arg1;	// IMP=0x00000001000bc860
- (void)processTaskErrorIfNeeded:(id)arg1;	// IMP=0x00000001000bc6f4
@property(readonly, nonatomic) _Bool canBoostBackgroundOperations;
@property(readonly, nonatomic) _Bool canBoostOperations;
@property(readonly, nonatomic, getter=isForeground) _Bool foreground;
@property(readonly, nonatomic, getter=isNetworkConnected) _Bool networkConnected;
- (id)zoneIdentificationForCloudKitScope:(id)arg1 engineScope:(id)arg2;	// IMP=0x00000001000bc408
- (long long)scopeTypeForCloudKitScope:(id)arg1 proposedScopeType:(long long)arg2 fetchedRecords:(id)arg3;	// IMP=0x00000001000bc2ec
- (id)recordsToFetchToIdentifyCloudKitScope:(id)arg1 proposedScopeType:(long long)arg2;	// IMP=0x00000001000bc1e0
- (id)defaultZoneIDForMainScope;	// IMP=0x00000001000bc168
- (id)mainScopeZoneIDFromZoneIDs:(id)arg1;	// IMP=0x00000001000bc078
- (_Bool)isZoneIDForMainScopeIdentifier:(id)arg1;	// IMP=0x00000001000bbfc0
- (id)scopeIdentifierFromZoneID:(id)arg1;	// IMP=0x00000001000bbe80
- (id)zoneIDFromScopeIdentifier:(id)arg1;	// IMP=0x00000001000bbd58
- (id)cloudKitScopeForScopeIdentifier:(id)arg1;	// IMP=0x00000001000bbcd4
- (void)provideCKAssetWithRecordID:(id)arg1 fieldName:(id)arg2 recordType:(id)arg3 signature:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000001000ba378
- (void)_withTempCKAssetForData:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001000ba1e8
- (id)_tempDestinationURLForRecoveredDataWithError:(id *)arg1;	// IMP=0x00000001000ba088
- (void)_cleanTempRecoveredDataURL:(id)arg1;	// IMP=0x00000001000b9e60
- (void)getStatusDictionaryWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b9bdc
- (void)getStatusWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b9240
- (id)componentName;	// IMP=0x00000001000b9234
- (id)tempCKAssetURL;	// IMP=0x00000001000b91ac
- (void)findPersistedInitialSyncSession:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b89e4
- (id)createGroupForQueryUserIdentities;	// IMP=0x00000001000b891c
- (id)createGroupForAcceptingMomentShare;	// IMP=0x00000001000b8854
- (id)createGroupForFetchingMomentShare;	// IMP=0x00000001000b878c
- (id)createGroupForPublishingMomentShare;	// IMP=0x00000001000b86c4
- (id)createGroupForPruningCheck;	// IMP=0x00000001000b8610
- (id)createGroupForAnalysisDownload;	// IMP=0x00000001000b8548
- (id)createGroupForMovieStreamingWithIntent:(unsigned long long)arg1;	// IMP=0x00000001000b828c
- (id)createGroupForWidgetResourcesDownload;	// IMP=0x00000001000b818c
- (id)createGroupForResourcesDownload;	// IMP=0x00000001000b80c4
- (id)createGroupForThumbnailsDownload;	// IMP=0x00000001000b7ffc
- (id)createGroupForChangeDownload;	// IMP=0x00000001000b7f34
- (id)createGroupForChangeUpload;	// IMP=0x00000001000b7e6c
- (id)createGroupForLibraryStateCheck;	// IMP=0x00000001000b7da4
- (id)createGroupForFetchScopeListChanges;	// IMP=0x00000001000b7cdc
- (id)createGroupForTransportScopeUpdate;	// IMP=0x00000001000b7c14
- (id)createGroupForTransportScopeDelete;	// IMP=0x00000001000b7b4c
- (id)createGroupForFeedback;	// IMP=0x00000001000b7a98
- (id)createGroupForSetup;	// IMP=0x00000001000b79e4
- (id)createGroupForWidgetPrefetch;	// IMP=0x00000001000b791c
- (id)createGroupForRecoveryDownload;	// IMP=0x00000001000b7854
- (id)createGroupForMemoriesPrefetch;	// IMP=0x00000001000b778c
- (id)createGroupForKeepOriginalsPrefetch;	// IMP=0x00000001000b76c4
- (id)createGroupForNonDerivativePrefetch;	// IMP=0x00000001000b75fc
- (id)createGroupForThumbnailPrefetch;	// IMP=0x00000001000b7534
- (id)createGroupForPrefetch;	// IMP=0x00000001000b746c
- (id)createGroupForInitialDownload;	// IMP=0x00000001000b73a4
- (id)createGroupForResetSync;	// IMP=0x00000001000b72dc
- (id)createGroupForInitialUpload;	// IMP=0x00000001000b7214
- (id)createGroupAllowsCellular:(_Bool)arg1 foreground:(_Bool)arg2 upload:(_Bool)arg3 metadata:(_Bool)arg4;	// IMP=0x00000001000b70fc
- (void)upgradeFlags:(id)arg1 fromTransportScope:(id)arg2;	// IMP=0x00000001000b7074
- (id)transportScopeForUpgradeFromScopeName:(id)arg1;	// IMP=0x00000001000b6fcc
- (id)scopeNameForTransportScope:(id)arg1;	// IMP=0x00000001000b6f48
- (id)descriptionForTransportScope:(id)arg1;	// IMP=0x00000001000b6e60
- (void)cancelBlockedTasksIncludingBackground:(_Bool)arg1;	// IMP=0x00000001000b6e48
- (void)noteClientIsEndingSignificantWork;	// IMP=0x00000001000b6e38
- (void)noteClientIsBeginningSignificantWork;	// IMP=0x00000001000b6e28
- (void)setShouldOverride:(_Bool)arg1 forSystemBudgets:(unsigned long long)arg2;	// IMP=0x00000001000b6e14
- (void)getSystemBudgetsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b6e00
- (void)setIsSignificantWorkPending:(_Bool)arg1;	// IMP=0x00000001000b6be4
- (id)simpleDescriptionForScopeListSyncAnchor:(id)arg1;	// IMP=0x00000001000b6bd0
- (id)simpleDescriptionForSyncAnchor:(id)arg1;	// IMP=0x00000001000b69cc
- (id)bestErrorForUnderlyingError:(id)arg1;	// IMP=0x00000001000b69b8
- (_Bool)isResourceDynamic:(id)arg1;	// IMP=0x00000001000b69b0
- (void)getPushEnvironmentWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b6844
- (id)sendFeedbackTaskForMessages:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b678c
- (id)queryUserDetailsTaskForParticipants:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b66d4
- (id)acceptTaskForSharedScope:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b661c
- (id)fetchTaskForScopeWithShareURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b6564
- (id)createScopeTaskForScope:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b6474
- (id)inMemoryDownloadTaskForResource:(id)arg1 transportScope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b637c
- (id)resourcesDownloadTaskWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b62fc
- (id)rampingRequestTaskForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b6248
- (id)resourceCheckTaskForResources:(id)arg1 transportScopes:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b615c
- (id)getStreamingURLTaskForResource:(id)arg1 intent:(unsigned long long)arg2 hints:(id)arg3 transportScope:(id)arg4 clientBundleID:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000001000b5ff8
- (id)fetchScopeListChangesForScopeListSyncAnchor:(id)arg1 progressHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b5f54
- (id)downloadBatchTaskForSyncAnchor:(id)arg1 transportScope:(id)arg2 scope:(id)arg3 currentScopeChange:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000001000b5e10
- (id)queryTaskForCursor:(id)arg1 class:(Class)arg2 transportScope:(id)arg3 scope:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000001000b5ce0
- (id)fetchTransportScopeForScope:(id)arg1 transportScope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b5be0
- (id)getCurrentSyncAnchorWithTransportScope:(id)arg1 scope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b5b08
- (id)getScopeInfoWithTransportScope:(id)arg1 scope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b5a30
- (id)updateTransportScope:(id)arg1 scope:(id)arg2 scopeChange:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000001000b5908
- (id)deleteTransportScope:(id)arg1 scope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000b5808
- (id)uploadBatchTaskForBatch:(id)arg1 transportScope:(id)arg2 scope:(id)arg3 additionalTransportScopes:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000001000b55ec
- (id)checkRecordsExistenceTaskForRecords:(id)arg1 fetchRecordProperties:(id)arg2 transportScope:(id)arg3 scope:(id)arg4 additionalTransportScopes:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000001000b5490
- (id)setupTaskUpdateDisabledFeatures:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b53ec
@property(readonly, nonatomic) Class userIdentifierClass;
@property(readonly, nonatomic) Class transportGroupClass;
- (void)closeAndDeactivate:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000b5128
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000b4034
- (void)duetTicketProviderBlockedStatusDidChange;	// IMP=0x00000001000b3f44
- (void)_updateBudgets;	// IMP=0x00000001000b3d70
@property(readonly, retain, nonatomic) CPLEngineLibrary *engineLibrary;
- (id)initWithAbstractObject:(id)arg1;	// IMP=0x00000001000b3bbc
- (id)_operationGroupNameForName:(id)arg1;	// IMP=0x00000001000b3a38

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


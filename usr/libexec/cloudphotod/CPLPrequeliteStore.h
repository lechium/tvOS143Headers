//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudPhotoLibrary/CPLPlatformObject.h>

#import "CPLEngineStoreImplementation-Protocol.h"

@class CPLChangeSessionUpdate, CPLPrequeliteClientCacheMigrator, CPLPrequeliteVariable, NSDate, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSURL, PQLConnection;
@protocol OS_dispatch_queue;

@interface CPLPrequeliteStore : CPLPlatformObject <CPLEngineStoreImplementation>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_writeQueue;	// 16 = 0x10
    PQLConnection *_db;	// 24 = 0x18
    NSURL *_dbURL;	// 32 = 0x20
    _Bool _configuringDB;	// 40 = 0x28
    NSMutableSet *_modifiedVariables;	// 48 = 0x30
    id _globalVariableCacheIdentifier;	// 56 = 0x38
    CPLPrequeliteVariable *_libraryVersionVar;	// 64 = 0x40
    CPLPrequeliteVariable *_userIdentifierVar;	// 72 = 0x48
    CPLPrequeliteVariable *_lastQuarantineCountReportDateVar;	// 80 = 0x50
    CPLPrequeliteVariable *_clientCacheIdentifierVar;	// 88 = 0x58
    CPLPrequeliteVariable *_clientCacheIdentifierAsKnownByClient;	// 96 = 0x60
    CPLPrequeliteVariable *_libraryCreationDateVar;	// 104 = 0x68
    CPLPrequeliteVariable *_changeSessionUpdateVar;	// 112 = 0x70
    _Bool _hasCachedChangeSessionUpdate;	// 120 = 0x78
    CPLChangeSessionUpdate *_cachedChangeSessionUpdate;	// 128 = 0x80
    CPLPrequeliteVariable *_libraryOptionsVar;	// 136 = 0x88
    CPLPrequeliteVariable *_shouldUpdateDisabledFeaturesVar;	// 144 = 0x90
    CPLPrequeliteVariable *_disabledFeaturesDataVar;	// 152 = 0x98
    _Bool _versionHasChanged;	// 160 = 0xa0
    CPLPrequeliteVariable *_derivativesFilterVar;	// 168 = 0xa8
    CPLPrequeliteVariable *_deactivatedVar;	// 176 = 0xb0
    Class _userIdentifierClass;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_isClientInSyncWithClientCacheQueue;	// 192 = 0xc0
    _Bool _isClientInSyncWithClientCache;	// 200 = 0xc8
    unsigned long long _resetOption;	// 208 = 0xd0
    NSString *_resetReason;	// 216 = 0xd8
    NSString *_wipeReason;	// 224 = 0xe0
    _Bool _failInsteadOfWipe;	// 232 = 0xe8
    _Bool _needsToReset;	// 233 = 0xe9
    _Bool _reentrencyGuard;	// 234 = 0xea
    _Bool _didWipeLibrary;	// 235 = 0xeb
    int _upgradeEventJournal;	// 236 = 0xec
    _Bool _mustFix22666940;	// 240 = 0xf0
    _Bool _mustMigratePushQueue;	// 241 = 0xf1
    CPLPrequeliteClientCacheMigrator *_clientCacheMigrator;	// 248 = 0xf8
    _Bool _hasScheduledClientCacheDrop;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_vacuumQueue;	// 264 = 0x108
    _Bool _executingVacuum;	// 272 = 0x110
    _Bool _shouldProfile;	// 273 = 0x111
    _Bool _showStatsForAllTransactions;	// 274 = 0x112
    double _lastLongTransactionDate;	// 280 = 0x118
    NSMutableDictionary *_transactionStatistics;	// 288 = 0x120
    NSDate *_libraryCreationDate;	// 296 = 0x128
}

+ (void)setShouldPreventWipeOnUpgrade:(_Bool)arg1;	// IMP=0x000000010002dd18
+ (_Bool)shouldPreventWipeOnUpgrade;	// IMP=0x000000010002dc80
- (void).cxx_destruct;	// IMP=0x0000000100038a38
@property(readonly) NSDate *libraryCreationDate; // @synthesize libraryCreationDate=_libraryCreationDate;
- (void)stopVacuum;	// IMP=0x0000000100038948
- (void)startVacuum;	// IMP=0x0000000100038710
- (void)_vacuum:(long long)arg1 withInitialDatabaseSize:(long long)arg2;	// IMP=0x00000001000382ac
- (long long)_sizeInBytes;	// IMP=0x00000001000381d0
- (id)transientPullRepository;	// IMP=0x0000000100038154
- (id)cloudCache;	// IMP=0x00000001000380d8
- (id)clientCache;	// IMP=0x0000000100038000
- (_Bool)hasTable:(id)arg1;	// IMP=0x0000000100037f9c
- (_Bool)table:(id)arg1 hasColumnWithName:(id)arg2;	// IMP=0x0000000100037e5c
- (void)table:(id)arg1 enumerateCountGroupedByProperty:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x0000000100037cfc
- (void)table:(id)arg1 enumerateCountGroupedByUnsignedIntegerProperty:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x0000000100037bac
- (unsigned long long)table:(id)arg1 countOfRecordsMatchingQuery:(id)arg2;	// IMP=0x0000000100037af4
- (unsigned long long)tableCountOfRecords:(id)arg1;	// IMP=0x0000000100037a58
- (_Bool)table:(id)arg1 hasRecordsMatchingQuery:(id)arg2;	// IMP=0x00000001000379ac
- (_Bool)tableHasRecords:(id)arg1;	// IMP=0x000000010003791c
- (void)recordUpgradeEvent:(id)arg1 arguments:(char *)arg2;	// IMP=0x0000000100037838
- (void)recordUpgradeEvent:(id)arg1;	// IMP=0x0000000100037808
- (id)status;	// IMP=0x00000001000373f0
- (void)transactionDidFinish;	// IMP=0x00000001000373ec
- (void)writeTransactionDidFail;	// IMP=0x0000000100037298
- (void)writeTransactionDidSucceed;	// IMP=0x0000000100037280
- (void)wipeStoreAtNextOpeningWithReason:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100037010
- (void)_deleteWipeReason;	// IMP=0x0000000100036e5c
- (id)wipeReason;	// IMP=0x0000000100036da0
- (id)_wipeStoreMarkerURL;	// IMP=0x0000000100036cf8
- (_Bool)storeDerivativesFilter:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100036ba8
- (id)derivativesFilter;	// IMP=0x0000000100036b1c
- (id)disabledFeatures;	// IMP=0x0000000100036a50
- (_Bool)storeDisabledFeatures:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100036958
- (_Bool)setShouldUpdateDisabledFeaturesWithError:(id *)arg1;	// IMP=0x0000000100036934
@property(readonly, nonatomic) _Bool shouldUpdateDisabledFeatures;
- (_Bool)storeChangeSessionUpdate:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000366c4
@property(readonly, nonatomic) CPLChangeSessionUpdate *storedChangeSessionUpdate;
@property(readonly, nonatomic) _Bool hasStoredChangeSessionUpdate;
- (_Bool)isClientInSyncWithClientCache;	// IMP=0x00000001000363e8
- (_Bool)storeClientIsNotInSyncWithClientCacheWithError:(id *)arg1;	// IMP=0x0000000100036234
- (_Bool)storeClientIsInSyncWithClientCacheWithError:(id *)arg1;	// IMP=0x0000000100036054
- (id)createNewClientCacheIdentifier;	// IMP=0x0000000100035ff8
- (_Bool)storeClientCacheIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100035fdc
- (id)clientCacheIdentifier;	// IMP=0x0000000100035fc4
- (_Bool)storeLastQuarantineCountReportDate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100035fa8
- (id)lastQuarantineCountReportDate;	// IMP=0x0000000100035f30
- (_Bool)storeUserIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100035d08
- (id)userIdentifier;	// IMP=0x0000000100035a88
- (Class)_userIdentifierClass;	// IMP=0x0000000100035930
- (_Bool)resetValueForGlobalVariable:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000358ac
- (id)valueForGlobalVariable:(id)arg1;	// IMP=0x0000000100035784
- (_Bool)setValue:(id)arg1 forGlobalVariable:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100035680
- (_Bool)addGlobalVariable:(id)arg1 defaultValue:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100035304
- (void)_cacheValue:(id)arg1 forVariable:(id)arg2;	// IMP=0x000000010003526c
- (id)pqlConnection;	// IMP=0x000000010003525c
- (id)createNewLibraryVersion;	// IMP=0x0000000100035200
- (_Bool)storeLibraryVersion:(id)arg1 withError:(id *)arg2;	// IMP=0x00000001000351e4
- (id)libraryVersion;	// IMP=0x00000001000351cc
- (_Bool)updateLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000100034f58
- (unsigned long long)libraryOptions;	// IMP=0x0000000100034f00
- (void)performBarrier;	// IMP=0x0000000100034ee4
- (void)performBarrierTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100034de8
- (_Bool)closeWithError:(id *)arg1;	// IMP=0x0000000100034d98
- (void)blockWriteTransactionsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100034c38
- (void)performWriteTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100034648
- (void)performReadTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100034290
- (_Bool)executePostOpenWithError:(id *)arg1;	// IMP=0x00000001000341bc
- (_Bool)openWithError:(id *)arg1;	// IMP=0x0000000100033bf8
- (_Bool)_openWithError:(id *)arg1;	// IMP=0x0000000100032744
- (_Bool)_setupPragmasAndFunctions;	// IMP=0x000000010003272c
- (_Bool)markDatabaseAsDeactivatedWithError:(id *)arg1;	// IMP=0x0000000100032708
- (void)_deleteCorruptionInfo;	// IMP=0x0000000100032554
@property(readonly, nonatomic) id corruptionInfo;
- (id)_corruptionMarkerURL;	// IMP=0x00000001000323a4
- (_Bool)_setupDBIfNeeded;	// IMP=0x0000000100031d3c
- (_Bool)_upgradeDB:(long long)arg1;	// IMP=0x0000000100031118
- (_Bool)_wipeIfDeactivated:(long long)arg1 didWipeDatabase:(_Bool *)arg2 error:(id *)arg3;	// IMP=0x0000000100030ff0
- (void)_wipeBeforeOpeningIfNecessary;	// IMP=0x0000000100030e2c
- (_Bool)_closeWipeAndReOpenWithReason:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100030b38
- (void)_wipeWithReason:(id)arg1;	// IMP=0x0000000100030940
- (_Bool)_postUpgradeToVersion:(long long)arg1;	// IMP=0x00000001000306ec
- (_Bool)_upgradeToVersion:(long long)arg1;	// IMP=0x0000000100030350
- (void)_scheduleClientCacheDropIfNecessary;	// IMP=0x000000010003026c
- (void)_scheduleClientCacheDrop;	// IMP=0x0000000100030060
- (_Bool)_fix22666940;	// IMP=0x000000010002f95c
- (_Bool)_performWithFlags:(unsigned int)arg1 action:(CDUnknownBlockType)arg2;	// IMP=0x000000010002f5e4
- (void)_unsetupProfilingHooks;	// IMP=0x000000010002f55c
- (void)_setupProfilingHooks;	// IMP=0x000000010002f08c
- (id)_transactionStatsDescription;	// IMP=0x000000010002ee8c
- (_Bool)_initializeDB;	// IMP=0x000000010002e674
- (void)triggerResetAfterUpgrade:(unsigned long long)arg1 withReason:(id)arg2;	// IMP=0x000000010002e4a8
- (id)initWithAbstractObject:(id)arg1;	// IMP=0x000000010002dd30

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CPLPrequeliteStorage.h"

#import "CPLEngineScopeStorageImplementation-Protocol.h"

@class CPLPrequeliteTodoVar, CPLPrequeliteVariable, CPLPrequeliteVariableGroup, NSMutableSet, NSString, _CPLPrequeliteScopeBase, _CPLPrequeliteScopeSyncState;

@interface CPLPrequeliteScopeStorage : CPLPrequeliteStorage <CPLEngineScopeStorageImplementation>
{
    CPLPrequeliteVariable *_nextIndexVar;	// 8 = 0x8
    CPLPrequeliteVariable *_scopeListSyncAnchorVar;	// 16 = 0x10
    NSMutableSet *_modifiedVariables;	// 24 = 0x18
    _CPLPrequeliteScopeBase *_base;	// 32 = 0x20
    CPLPrequeliteVariable *_flagsVar;	// 40 = 0x28
    CPLPrequeliteVariable *_disabledDateVar;	// 48 = 0x30
    CPLPrequeliteVariable *_deleteDateVar;	// 56 = 0x38
    CPLPrequeliteVariable *_libraryInfoVar;	// 64 = 0x40
    CPLPrequeliteVariable *_scopeChangeVar;	// 72 = 0x48
    CPLPrequeliteVariable *_lastLibraryInfoUpdateVar;	// 80 = 0x50
    CPLPrequeliteVariable *_transportScopeVar;	// 88 = 0x58
    _CPLPrequeliteScopeSyncState *_syncState;	// 96 = 0x60
    CPLPrequeliteVariable *_estimatedSizeVar;	// 104 = 0x68
    CPLPrequeliteVariable *_estimatedAssetCountVar;	// 112 = 0x70
    CPLPrequeliteVariable *_initialSyncDateVar;	// 120 = 0x78
    CPLPrequeliteTodoVar *_pushToTransportTodoVar;	// 128 = 0x80
    CPLPrequeliteTodoVar *_pullFromTransportTodoVar;	// 136 = 0x88
    CPLPrequeliteTodoVar *_clientNeedsToPullTodoVar;	// 144 = 0x90
    CPLPrequeliteTodoVar *_updateTransportTodoVar;	// 152 = 0x98
    CPLPrequeliteVariableGroup *_all;	// 160 = 0xa0
    CPLPrequeliteVariableGroup *_libraryStateGroup;	// 168 = 0xa8
    Class _transportGroupClass;	// 176 = 0xb0
    _Bool _noteEndOfResetIfNecessary;	// 184 = 0xb8
}

+ (id)_supportedScopeTypesWithOptions:(unsigned long long)arg1;	// IMP=0x000000010001a0bc
+ (_Bool)_scopeType:(long long)arg1 supportsClientSyncWithOptions:(unsigned long long)arg2;	// IMP=0x0000000100019f04
- (void).cxx_destruct;	// IMP=0x000000010002655c
- (void)writeTransactionDidFail;	// IMP=0x0000000100026400
- (void)writeTransactionDidSucceed;	// IMP=0x0000000100026384
- (_Bool)bumpPullFromTransportExpirationIntervalWithError:(id *)arg1;	// IMP=0x000000010002612c
- (id)filterForExcludedScopeIdentifiers:(id)arg1;	// IMP=0x0000000100025fd0
- (id)filterForIncludedScopeIdentifiers:(id)arg1;	// IMP=0x0000000100025e2c
- (id)_injectionForFilter:(id)arg1;	// IMP=0x0000000100025cfc
- (void)_getLocalIndexes:(id *)arg1 cloudIndexes:(id *)arg2 forScopeIdentifiers:(id)arg3;	// IMP=0x0000000100025b20
- (void)_noteEndOfResetIfNecessary;	// IMP=0x00000001000259ac
- (unsigned long long)estimatedAssetCountForScope:(id)arg1;	// IMP=0x0000000100025950
- (unsigned long long)estimatedSizeForScope:(id)arg1;	// IMP=0x00000001000258f4
- (_Bool)storeEstimatedSize:(unsigned long long)arg1 estimatedAssetCount:(unsigned long long)arg2 forScope:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000257e4
- (_Bool)storeSupportedFeatureVersionInLastSync:(unsigned long long)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100025714
- (unsigned long long)supportedFeatureVersionInLastSyncForScope:(id)arg1;	// IMP=0x0000000100025664
- (id)lastDateOfCompletedPullFromTransportForScope:(id)arg1;	// IMP=0x000000010002564c
- (_Bool)storeLastDateOfClearedPushRepository:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100025594
- (id)lastDateOfClearedPushRepositoryForScope:(id)arg1;	// IMP=0x0000000100025500
- (_Bool)allActiveScopesHasFinishedSyncs;	// IMP=0x00000001000253ec
- (_Bool)hasFinishedAFullSyncForScope:(id)arg1;	// IMP=0x0000000100025348
- (id)initialSyncDateForScope:(id)arg1;	// IMP=0x000000010002532c
- (id)initialSyncAnchorForScope:(id)arg1;	// IMP=0x0000000100025298
- (_Bool)setInitialSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000251e0
- (_Bool)setHasFetchedInitialSyncAnchor:(_Bool)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100025110
- (_Bool)hasScopeFetchedInitialSyncAnchor:(id)arg1;	// IMP=0x0000000100025060
- (_Bool)setClassNameOfRecordsForInitialQuery:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100024fa8
- (id)classNameOfRecordsForInitialQueryForScope:(id)arg1;	// IMP=0x0000000100024f14
- (_Bool)storeTransientSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100024e5c
- (id)transientSyncAnchorForScope:(id)arg1;	// IMP=0x0000000100024dc8
- (_Bool)discardStagedSyncAnchorWithScopeFilter:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100024c8c
- (_Bool)discardStagedSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100024bec
@property(readonly, nonatomic) _Bool hasStagedSyncAnchors;
- (_Bool)hasStagedSyncAnchorForScope:(id)arg1;	// IMP=0x0000000100024a4c
- (_Bool)commitSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100024578
- (void)_markFirstSyncOfPrimaryAsSuccessfulWithScope:(id)arg1;	// IMP=0x0000000100024294
- (_Bool)resetSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100024100
- (_Bool)setSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100023d2c
- (id)syncAnchorForScope:(id)arg1 isCommitted:(_Bool *)arg2;	// IMP=0x0000000100023c30
- (_Bool)setDidDropSomeRecordsForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100023b98
- (_Bool)didDropSomeRecordsForScope:(id)arg1;	// IMP=0x0000000100023ae8
- (_Bool)storeDownloadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100023a30
- (id)downloadTransportGroupForScope:(id)arg1;	// IMP=0x000000010002399c
- (_Bool)storeUploadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000238e4
- (id)uploadTransportGroupForScope:(id)arg1;	// IMP=0x0000000100023850
- (_Bool)resetSyncStateForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100023628
- (void)_discardCachedValuesForGroup:(id)arg1;	// IMP=0x0000000100023508
- (_Bool)_storeTransportGroup:(id)arg1 inColumnVariable:(id)arg2 forScope:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000232cc
- (id)_transportGroupForColumnVariable:(id)arg1 forScope:(id)arg2;	// IMP=0x00000001000231e8
- (Class)_transportGroupClass;	// IMP=0x0000000100023068
- (id)lastScopeChangeUpdateDateForScope:(id)arg1;	// IMP=0x000000010002304c
- (_Bool)storeScopeChange:(id)arg1 forScope:(id)arg2 scopeChangeHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x0000000100022dc4
- (_Bool)_storeLibraryInfo:(id)arg1 forScope:(id)arg2 libraryInfoHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x0000000100022930
- (id)scopeChangeForScope:(id)arg1;	// IMP=0x00000001000225f4
- (id)_libraryInfoForScope:(id)arg1;	// IMP=0x0000000100022564
- (_Bool)setTransportScope:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000224f4
- (id)transportScopeForScope:(id)arg1;	// IMP=0x00000001000224d8
- (_Bool)setScopeNeedsUpdateFromTransport:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000224b4
- (id)_librarySateForScope:(id)arg1;	// IMP=0x00000001000221d0
- (_Bool)setDeleteDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100022160
- (id)deleteDateForScope:(id)arg1;	// IMP=0x0000000100022144
- (_Bool)setDisabledDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000220d4
- (id)disabledDateForScope:(id)arg1;	// IMP=0x00000001000220b8
- (_Bool)updateFlags:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100021f18
- (id)flagsForScope:(id)arg1;	// IMP=0x0000000100021e8c
- (id)_valueForColumnVariable:(id)arg1 scope:(id)arg2;	// IMP=0x0000000100021c44
- (_Bool)_storeValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100021a60
- (void)_cacheValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3;	// IMP=0x0000000100021994
- (_Bool)storeScopeListSyncAnchor:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100021790
- (id)scopeListSyncAnchor;	// IMP=0x0000000100021778
- (id)primaryScope;	// IMP=0x0000000100021708
- (id)validCloudIndexes;	// IMP=0x00000001000214f4
- (id)validLocalIndexes;	// IMP=0x00000001000212e0
- (id)scopeWithStableIndex:(long long)arg1;	// IMP=0x0000000100021264
- (id)scopeWithCloudIndex:(long long)arg1;	// IMP=0x00000001000211e8
- (id)scopeWithLocalIndex:(long long)arg1;	// IMP=0x000000010002116c
- (id)scopeWithIdentifier:(id)arg1;	// IMP=0x00000001000210e4
- (id)_scopeWithQuery:(id)arg1;	// IMP=0x0000000100020efc
- (_Bool)bumpStableIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100020da4
- (_Bool)bumpCloudIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100020c4c
- (_Bool)bumpLocalIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100020af4
- (long long)_bumpIndexWithError:(id *)arg1;	// IMP=0x0000000100020a30
- (_Bool)setScopeType:(long long)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000207e8
- (_Bool)deleteScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000206b4
- (id)addScopeWithIdentifier:(id)arg1 scopeType:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000100020528
- (_Bool)doesScopeNeedToUpdateTransport:(id)arg1;	// IMP=0x00000001000203b4
- (_Bool)setScope:(id)arg1 hasCompletedTransportUpdate:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000100020398
- (long long)transportUpdateTaskForScope:(id)arg1;	// IMP=0x0000000100020380
- (_Bool)setScopeNeedsToUpdateTransport:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100020364
- (_Bool)hasScopesNeedingToUpdateTransport;	// IMP=0x0000000100020268
- (id)enumeratorForScopesNeedingToUpdateTransport;	// IMP=0x000000010002004c
- (_Bool)doesScopeSupportToBePulledByClient:(id)arg1;	// IMP=0x000000010001ff54
- (_Bool)doesScopeNeedToBePulledByClient:(id)arg1;	// IMP=0x000000010001fd88
- (_Bool)setScopeNeedsToBePulledByClient:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001fd6c
- (_Bool)setScope:(id)arg1 hasCompletedClientNeedsToPullTask:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001fd50
- (long long)clientNeedsToPullTaskForScope:(id)arg1;	// IMP=0x000000010001fd38
- (id)enumeratorForScopesNeedingToBePulledByClientWithMaximumCount:(unsigned long long)arg1;	// IMP=0x000000010001fab4
- (_Bool)doScopesNeedMetadataSync:(id)arg1;	// IMP=0x000000010001f8bc
- (_Bool)setPullFromTransportExpirationInterval:(double)arg1 scope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001f7e4
- (_Bool)doesScopeNeedToPullChangesFromTransport:(id)arg1;	// IMP=0x000000010001f658
- (_Bool)setScope:(id)arg1 hasCompletedPullFromTransportTask:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001f63c
- (long long)pullFromTransportTaskForScope:(id)arg1;	// IMP=0x000000010001f624
- (_Bool)setAllScopesHasChangesToPullFromTransportWithError:(id *)arg1;	// IMP=0x000000010001f510
- (_Bool)setScopeHasChangesToPullFromTransport:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001f4f4
- (_Bool)hasScopesNeedingToPullChangesFromTransport;	// IMP=0x000000010001f3e0
- (id)enumeratorForScopesNeedingToPullChangesFromTransport;	// IMP=0x000000010001f1a0
- (_Bool)doesScopeNeedToPushChangesToTransport:(id)arg1;	// IMP=0x000000010001f018
- (_Bool)setScope:(id)arg1 hasCompletedPushToTransportTask:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001effc
- (long long)pushToTransportTaskForScope:(id)arg1;	// IMP=0x000000010001efe4
- (_Bool)setScopeHasChangesToPushToTransport:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001efc8
- (_Bool)hasScopesNeedingToPushChangesToTransport;	// IMP=0x000000010001eeb4
- (id)enumeratorForScopesNeedingToPushChangesToTransport;	// IMP=0x000000010001ec50
- (_Bool)hasScopesNeedingToPushHighPriorityChangesToTransport;	// IMP=0x000000010001eb38
- (id)enumeratorForScopesNeedingToPushHighPriorityChangesToTransport;	// IMP=0x000000010001e8d0
- (_Bool)forcePushToTransportForActiveScopesWithError:(id *)arg1;	// IMP=0x000000010001e6f8
- (_Bool)forceIdentifyUknownScopesWithError:(id *)arg1;	// IMP=0x000000010001e514
- (id)enumeratorForScopesNeedingUpdateFromTransport;	// IMP=0x000000010001e240
- (id)enumeratorForScopesIncludeInactive:(_Bool)arg1;	// IMP=0x000000010001defc
- (_Bool)_setScope:(id)arg1 hasCompletedTaskItem:(long long)arg2 task:(id)arg3 error:(id *)arg4;	// IMP=0x000000010001dd68
- (id)_taskItemCompletionDateForScope:(id)arg1 task:(id)arg2;	// IMP=0x000000010001dc9c
- (long long)_taskItemForScope:(id)arg1 task:(id)arg2;	// IMP=0x000000010001db10
- (_Bool)_setScope:(id)arg1 hasTaskTodo:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001d970
- (id)statusDictionary;	// IMP=0x000000010001d964
- (id)recordsDesignation;	// IMP=0x000000010001d958
- (_Bool)upgradeScopesWithNewLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000010001d178
- (_Bool)upgradeStorageToVersion:(long long)arg1;	// IMP=0x000000010001b6ec
- (_Bool)_transferValueFromVariable:(id)arg1 type:(id)arg2 ofStorage:(id)arg3 toColumnVariable:(id)arg4 transformer:(CDUnknownBlockType)arg5;	// IMP=0x000000010001b0dc
- (_Bool)initializeStorage;	// IMP=0x000000010001aef0
- (_Bool)_createInitialPrimarySyncScope;	// IMP=0x000000010001ad80
- (_Bool)_addScope:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001ab00
- (double)_minimalPullFromTranportExpirationInterval;	// IMP=0x000000010001aaa8
- (_Bool)_scopeTypeSupportsClientSync:(long long)arg1;	// IMP=0x000000010001aa38
- (id)initWithAbstractObject:(id)arg1;	// IMP=0x000000010001a1f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly) Class superclass;

@end


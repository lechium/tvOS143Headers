//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSXPCListenerDelegate-Protocol.h"
#import "SecureBackupConcurrentProtocol-Protocol.h"
#import "SecureBackupProtocol-Protocol.h"

@class NSData, NSMutableDictionary, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SecureBackupDaemon : NSObject <SecureBackupProtocol, SecureBackupConcurrentProtocol, NSXPCListenerDelegate>
{
    _Bool _needInitialBackup;	// 8 = 0x8
    _Bool _pendingNotification;	// 9 = 0x9
    int _cachedPassphraseFD;	// 12 = 0xc
    int _cachedRecordIDPassphraseFD;	// 16 = 0x10
    int _cachedRecoveryKeyFD;	// 20 = 0x14
    NSURL *_cacheDirURL;	// 24 = 0x18
    NSData *_iCDPKeybag;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_connectionQueue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_backupQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_kvsQueue;	// 56 = 0x38
    NSString *_cachedRecordID;	// 64 = 0x40
    NSString *_iCloudEnvironment;	// 72 = 0x48
    NSMutableDictionary *_ignoredNotifications;	// 80 = 0x50
    NSMutableDictionary *_handledNotifications;	// 88 = 0x58
}

- (void).cxx_destruct;	// IMP=0x000000010003fed8
@property(retain, nonatomic) NSMutableDictionary *handledNotifications; // @synthesize handledNotifications=_handledNotifications;
@property(retain, nonatomic) NSMutableDictionary *ignoredNotifications; // @synthesize ignoredNotifications=_ignoredNotifications;
@property _Bool pendingNotification; // @synthesize pendingNotification=_pendingNotification;
@property(copy, nonatomic) NSString *iCloudEnvironment; // @synthesize iCloudEnvironment=_iCloudEnvironment;
@property int cachedRecoveryKeyFD; // @synthesize cachedRecoveryKeyFD=_cachedRecoveryKeyFD;
@property int cachedRecordIDPassphraseFD; // @synthesize cachedRecordIDPassphraseFD=_cachedRecordIDPassphraseFD;
@property int cachedPassphraseFD; // @synthesize cachedPassphraseFD=_cachedPassphraseFD;
@property(copy, nonatomic) NSString *cachedRecordID; // @synthesize cachedRecordID=_cachedRecordID;
@property _Bool needInitialBackup; // @synthesize needInitialBackup=_needInitialBackup;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *kvsQueue; // @synthesize kvsQueue=_kvsQueue;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *backupQueue; // @synthesize backupQueue=_backupQueue;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *connectionQueue; // @synthesize connectionQueue=_connectionQueue;
@property(readonly, nonatomic) NSData *iCDPKeybag; // @synthesize iCDPKeybag=_iCDPKeybag;
@property(retain, nonatomic) NSURL *cacheDirURL; // @synthesize cacheDirURL=_cacheDirURL;
- (void)getAcceptedTermsForAltDSID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003fa54
- (void)saveTermsAcceptance:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003f318
- (void)getCertificatesWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003f0c4
- (void)daemonPasscodeRequestOpinion:(CDUnknownBlockType)arg1;	// IMP=0x000000010003ed58
- (id)fetchPRK:(id *)arg1;	// IMP=0x000000010003ec48
- (void)prepareHSA2EscrowRecordContents:(id)arg1 usesComplexPassphrase:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010003df0c
- (int)getPasscodeRequestFlag:(unsigned long long *)arg1;	// IMP=0x000000010003deb4
- (int)setPasscodeRequestFlag:(unsigned long long)arg1;	// IMP=0x000000010003de5c
- (void)clearNotifyToken;	// IMP=0x000000010003ddf8
- (int)notifyToken;	// IMP=0x000000010003dcd0
- (void)beginHSA2PasscodeRequest:(id)arg1 desirePasscodeImmediately:(_Bool)arg2 uuid:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010003d78c
- (id)getPendingEscrowRequest:(id *)arg1;	// IMP=0x000000010003d718
- (void)stateCaptureWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010003d6a4
- (void)notificationInfoWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010003d560
- (void)changeSMSTargetWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003ca50
- (void)getCountrySMSCodesWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003c428
- (void)startSMSChallengeWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003bd80
- (void)uncachePassphraseWithRequestAsync:(id)arg1;	// IMP=0x000000010003bd70
- (void)uncacheRecoveryKeyWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003bac0
- (void)cacheRecoveryKeyWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003b820
- (void)uncachePassphraseWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003b570
- (void)cachePassphraseWithRequestAsync:(id)arg1;	// IMP=0x000000010003b560
- (void)cachePassphraseWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003b2c0
- (void)uncacheRecordIDPassphrase;	// IMP=0x000000010003b168
- (id)cachedRecoveryKey;	// IMP=0x000000010003b130
@property(copy, nonatomic) NSString *cachedRecordIDPassphrase;
@property(copy, nonatomic) NSString *cachedPassphrase;
- (id)cachedPassphraseForFD:(int)arg1;	// IMP=0x000000010003ada0
- (void)setCachedRecoveryKey:(id)arg1;	// IMP=0x000000010003ad68
- (int)storeCachedPassphrase:(id)arg1;	// IMP=0x000000010003a808
- (void)updateMetadataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100039d0c
- (void)disableWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000394d4
- (void)setBackOffDateWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100038d54
- (void)backOffDateWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000389bc
- (void)deleteAlliCDPRecordsWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000382a8
- (void)createICDPRecordWithRequest:(id)arg1 recordContents:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100037914
- (void)recoverRecordContentsWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100037540
- (void)restoreKeychainAsyncWithPasswordInDaemon:(id)arg1 keybagDigest:(id)arg2 haveBottledPeer:(_Bool)arg3 viewsNotToBeRestored:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100037308
- (void)recoverSilentWithCDPContextInDaemon:(id)arg1 allRecords:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100037164
- (void)recoverWithCDPContextInDaemon:(id)arg1 escrowRecord:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100036fc0
- (void)recoverWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100036e38
- (void)_recoverWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100034640
- (void)_restoreKeychainAsyncWithPassword:(id)arg1 keybagDigest:(id)arg2 haveBottledPeer:(_Bool)arg3 viewsNotToBeRestored:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100034280
- (void)_recoverWithCDPContext:(id)arg1 escrowRecord:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100033c64
- (void)_recoverSilentWithCDPContext:(id)arg1 allRecords:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100032978
- (void)sortForMatchingPassphraseLengthAndPlatform:(id)arg1 secureBackups:(id)arg2 passphraseLength:(unsigned long long)arg3 platform:(unsigned long long)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100032070
- (long long)compare:(id)arg1 with:(id)arg2 backups:(id)arg3;	// IMP=0x00000001000319dc
- (id)keysOfEntriesContainingObject:(id)arg1 backups:(id)arg2;	// IMP=0x0000000100031904
- (void)recoverEscrowWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100030450
- (void)recoverStingrayWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002fc60
- (id)restoreEMCSBackup:(id)arg1 withPassword:(id)arg2;	// IMP=0x000000010002f768
- (id)restoreEMCSBackup:(id)arg1 keybag:(id)arg2 password:(id)arg3;	// IMP=0x000000010002f548
- (void)recordIDAndMetadataForSilentAttempt:(id)arg1 passphraseLength:(unsigned long long)arg2 platform:(int)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010002ef6c
- (id)secureBackups;	// IMP=0x000000010002ecac
- (id)_restoreKeychainWithBackupBag:(id)arg1 password:(id)arg2 keybagDigest:(id)arg3 haveBottledPeer:(_Bool)arg4;	// IMP=0x000000010002dfbc
- (void)_restoreKeychainAsyncWithBackupBag:(id)arg1 password:(id)arg2 keybagDigest:(id)arg3 haveBottledPeer:(_Bool)arg4 restoredViews:(id)arg5 viewsNotToBeRestored:(id)arg6;	// IMP=0x000000010002d6b8
- (_Bool)restoreView:(id)arg1 password:(id)arg2 keybagDigest:(id)arg3 restoredViews:(id)arg4;	// IMP=0x000000010002d3a4
- (id)encodedStatsForViews:(id)arg1;	// IMP=0x000000010002d154
- (id)restoreBackup:(id)arg1 withName:(id)arg2 keybagDigest:(id)arg3 keybag:(id)arg4 password:(id)arg5;	// IMP=0x000000010002c9e8
- (void)backupWithInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002c994
- (void)backupWithInfo:(id)arg1 garbageCollect:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010002c8a8
@property(nonatomic) _Bool backupAllowed;
- (void)handleEscrowStoreResults:(id)arg1 escrowError:(id)arg2 request:(id)arg3 sosPeerID:(id)arg4 newRecordMetadata:(id)arg5 backupKeybag:(id)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x000000010002c3b4
- (void)enableWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002a3c4
- (void)stashRecoveryDataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002a260
- (void)_stashRecoveryDataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100029f98
- (id)massageOutgoingMetadataFromRequest:(id)arg1;	// IMP=0x0000000100029dc0
- (void)getAccountInfoWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100029a14
- (void)synchronizeKVSWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100029488
- (void)doSynchronize;	// IMP=0x0000000100029298
- (id)sortRecordsByBottleID:(id)arg1;	// IMP=0x00000001000286b8
- (id)tagStaleBottleRecords:(id)arg1 suggestedBottles:(id)arg2;	// IMP=0x00000001000283b8
- (void)_getAccountInfoWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000263f4
- (id)_recordIDFromLabel:(id)arg1 withPrefix:(id)arg2 suffix:(id)arg3;	// IMP=0x00000001000262ec
- (void)getStingrayMetadataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100025d00
- (_Bool)hasRecoveryKey;	// IMP=0x0000000100025a68
- (id)filteriCDPRecords:(id)arg1;	// IMP=0x0000000100025454
- (id)massageIncomingMetadataFromInfo:(id)arg1;	// IMP=0x000000010002514c
- (void)notificationOccurred:(id)arg1;	// IMP=0x0000000100024d74
- (void)handleNotification:(id)arg1;	// IMP=0x00000001000249c4
- (void)recordNotification:(id)arg1 handled:(_Bool)arg2;	// IMP=0x00000001000248dc
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x000000010002452c
@property(readonly, nonatomic) _Bool forceICDP;
@property(readonly, retain, nonatomic) NSURL *cachedManifestURL;
@property(readonly, retain, nonatomic) NSURL *cachedKeychainURL;
- (struct os_state_data_s *)_stateCapture;	// IMP=0x0000000100024004
- (id)copyKVSState;	// IMP=0x0000000100023a74
- (void)setupNotifyEvents;	// IMP=0x00000001000238d4
- (id)init;	// IMP=0x0000000100023674
- (id)normalizeSMSTarget:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100023404
- (id)_gestaltValueForKey:(struct __CFString *)arg1;	// IMP=0x0000000100023290
- (void)unregisterForNotifyEvent:(id)arg1;	// IMP=0x0000000100023230
- (void)registerForNotifyEvent:(id)arg1;	// IMP=0x00000001000231a4
- (void)disableiCDPBackup;	// IMP=0x0000000100023158
- (void)_disableBackup;	// IMP=0x00000001000230cc
- (id)_consumeBackupJournal;	// IMP=0x000000010002210c
- (id)_consumeFullBackupForRecordID:(id)arg1;	// IMP=0x0000000100021d74
- (id)_consumeViewBackup:(id)arg1 recordID:(id)arg2;	// IMP=0x0000000100020cd4
- (void)_backupCloudIdentityKeychainViewAndPushToKVS;	// IMP=0x0000000100020738
- (void)_backupKeychainFully:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000201b4
- (void)_backupKeychain;	// IMP=0x00000001000201a0
- (void)_backupFullKeychain;	// IMP=0x000000010002018c
- (void)_backupFullKeychainWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000100020178
- (void)_setAutobackupEnabled;	// IMP=0x0000000100020168
- (void)_setAutobackupEnabledWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00000001000200f8
- (int)_checkEscrowTrust;	// IMP=0x000000010001fd80
- (void)_removeKVSKeybag;	// IMP=0x000000010001fc34
- (void)garbageCollectEMCSBackupsExcluding:(id)arg1;	// IMP=0x000000010001f9fc
- (id)_EMCSBackupDictForKeybagDigest:(id)arg1;	// IMP=0x000000010001f5d4
- (id)_EMCSBackup;	// IMP=0x000000010001f578
- (void)_setEMCSBackup:(id)arg1 keybag:(id)arg2;	// IMP=0x000000010001f270
- (id)_KVSKeybag;	// IMP=0x000000010001f214
- (void)_setKVSKeybag:(id)arg1;	// IMP=0x000000010001f02c
- (void)_removeMetadata;	// IMP=0x000000010001eef4
- (id)_metadata;	// IMP=0x000000010001ee94
- (void)_setMetadata:(id)arg1;	// IMP=0x000000010001ed34
- (void)_removeUsesEscrow;	// IMP=0x000000010001ecd8
- (_Bool)_usesEscrow;	// IMP=0x000000010001ec84
- (void)_setUsesEscrow:(_Bool)arg1;	// IMP=0x000000010001eb64
- (_Bool)_iCDPBackupEnabled;	// IMP=0x000000010001eb10
- (_Bool)_backupEnabled;	// IMP=0x000000010001ea98
- (void)_setBackupEnabled:(_Bool)arg1 iCDP:(_Bool)arg2;	// IMP=0x000000010001e90c
- (id)_getLastBackupTimestamp;	// IMP=0x000000010001e880
- (id)_getDERBackupFromKVS;	// IMP=0x000000010001e730
- (void)_removeVeeTwoBackup;	// IMP=0x000000010001e5dc
- (void)_enumerateICDPBackupsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010001e2b0
- (id)_getICDPBackupFromKVSForView:(id)arg1;	// IMP=0x000000010001e1ec
- (id)_getProtectedKeychainAndKeybagDigestFromKVS:(id *)arg1;	// IMP=0x000000010001e064
- (void)_removeProtectedKeychain;	// IMP=0x000000010001df00
- (id)_pushCachedKeychainToKVS;	// IMP=0x000000010001d970
- (id)_pushCachedKeychainToKVSForView:(id)arg1 recordID:(id)arg2;	// IMP=0x000000010001d488
- (void)storeDERBackupInKVS:(id)arg1;	// IMP=0x000000010001d28c
- (id)derDataFromDict:(id)arg1;	// IMP=0x000000010001d088
- (void)_removeCachedKeychain;	// IMP=0x000000010001cf1c
- (void)_storeVeeTwoBackupInKVS:(id)arg1 forViewName:(id)arg2 withKeyStore:(id)arg3 manifestDigest:(id)arg4 keybagDigest:(id)arg5;	// IMP=0x000000010001ca7c
- (void)_storeProtectedKeychainInKVS:(id)arg1 keybagDigest:(id)arg2;	// IMP=0x000000010001c84c
- (id)_getKeychainItemForKey:(id)arg1 status:(int *)arg2;	// IMP=0x000000010001c6a8
- (void)_removeKeychainItemForKey:(id)arg1;	// IMP=0x000000010001c53c
- (void)_saveKeychainItem:(id)arg1 forKey:(id)arg2;	// IMP=0x000000010001c380
- (id)_createBackupKeybagWithPassword:(id)arg1;	// IMP=0x000000010001c1d4
- (id)createiCloudRecoveryPasswordWithError:(id *)arg1;	// IMP=0x000000010004d0cc
- (id)createPlistFromDERData:(id)arg1;	// IMP=0x000000010004d050
- (id)createDERDataFromPlist:(id)arg1;	// IMP=0x000000010004cfd4
- (_Bool)backupSliceKeybagHasRecoveryKey:(id)arg1;	// IMP=0x000000010004cf7c
- (id)createEncodedDirectBackupSliceKeybagFromData:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004cdbc
- (id)circleChangedNotification;	// IMP=0x000000010004cd9c
- (id)currentViews;	// IMP=0x000000010004cd30
- (id)allViews;	// IMP=0x000000010004ccb8
- (id)copyOSVersion:(id)arg1;	// IMP=0x000000010004cc84
- (id)copySerialNumber:(id)arg1;	// IMP=0x000000010004cc70
- (id)createPeerInfoFromData:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004cc20
- (_Bool)registerRecoveryPublicKey:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004cbd0
- (_Bool)registerSingleRecoverySecret:(id)arg1 iCDP:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000010004cb7c
- (id)copyEncodedData:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004cb28
- (id)copyMyPeerWithNewDeviceRecoverySecret:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004cad8
- (id)copyBackupKeyForNewDeviceRecoverySecret:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004ca88
- (id)copyBackupKey:(id)arg1;	// IMP=0x000000010004ca80
- (id)copyMyPeerIDWithError:(id *)arg1;	// IMP=0x000000010004c9e4
- (id)copyMyPeerID;	// IMP=0x000000010004c924
- (id)copyPeerID:(id)arg1;	// IMP=0x000000010004c8f8
- (id)copyMyPeerInfo:(id *)arg1;	// IMP=0x000000010004c8ac
- (_Bool)backupWithChanges:(id)arg1 error:(id *)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010004c7dc
- (_Bool)backupSetConfirmedManifest:(id)arg1 digest:(id)arg2 manifest:(id)arg3 error:(id *)arg4;	// IMP=0x000000010004c630
- (_Bool)backupWithRegisteredBackupViewWithError:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004c4f0
- (_Bool)backupWithRegisteredBackupsWithError:(id *)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010004c43c
- (void)restoreBackupName:(id)arg1 peerID:(id)arg2 keybag:(id)arg3 password:(id)arg4 backup:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x000000010004c31c
- (id)kvs;	// IMP=0x000000010004c2a0
- (id)makeRecordCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004ef50
- (void)setPasscodeMetadata:(id)arg1 passphraseType:(int)arg2;	// IMP=0x000000010004edd0
- (void)doEnableEscrowMultiICSCWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010004d378

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


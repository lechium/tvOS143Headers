//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CKKSCKRecordHolder.h"

@class CKKSAESSIVKey, CKKSKeychainBackedKey, CKKSWrappedAESSIVKey, NSString;
@protocol SecCKKSKeyClass, SecCKKSProcessedState;

__attribute__((visibility("hidden")))
@interface CKKSKey : CKKSCKRecordHolder
{
    _Bool _currentkey;	// 8 = 0x8
    CKKSKeychainBackedKey *_keycore;	// 16 = 0x10
    NSString<SecCKKSProcessedState> *_state;	// 24 = 0x18
}

+ (id)loadFromProtobuf:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d6304
+ (id)countsByClass:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d6128
+ (id)fromDatabaseRow:(id)arg1;	// IMP=0x00000001000d5d90
+ (id)sqlColumns;	// IMP=0x00000001000d5d84
+ (id)sqlTable;	// IMP=0x00000001000d5d78
+ (id)localKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d5c78
+ (id)remoteKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d5b78
+ (id)allKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d5a8c
+ (id)currentKeysForClass:(id)arg1 state:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000d592c
+ (id)currentKeyForClass:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d5840
+ (id)selfWrappedKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d56e0
+ (id)tryFromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d55c8
+ (id)tryFromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d549c
+ (id)fromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d5384
+ (id)fromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d5258
+ (id)isItemKeyForKeychainView:(struct SecDbItem *)arg1;	// IMP=0x00000001000d4f80
+ (id)keyFromKeychain:(id)arg1 parentKeyUUID:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7 error:(id *)arg8;	// IMP=0x00000001000d4e40
+ (id)randomKeyWrappedBySelf:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d4d3c
+ (id)randomKeyWrappedByParent:(id)arg1 keyclass:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d4be8
+ (id)randomKeyWrappedByParent:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d4b5c
+ (id)loadKeyWithUUID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d4ab4
- (void).cxx_destruct;	// IMP=0x00000001000d4a74
@property _Bool currentkey; // @synthesize currentkey=_currentkey;
@property(copy) NSString<SecCKKSProcessedState> *state; // @synthesize state=_state;
@property(retain) CKKSKeychainBackedKey *keycore; // @synthesize keycore=_keycore;
- (id)serializeAsProtobuf:(id *)arg1;	// IMP=0x00000001000d4838
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000001000d478c
- (id)sqlValues;	// IMP=0x00000001000d4368
- (id)whereClauseToFindSelf;	// IMP=0x00000001000d4220
- (id)description;	// IMP=0x00000001000d40cc
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x00000001000d3c60
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x00000001000d3930
- (void)setFromCKRecord:(id)arg1;	// IMP=0x00000001000d351c
- (id)CKRecordName;	// IMP=0x00000001000d34c8
- (_Bool)saveToDatabaseAsOnlyCurrentKeyForClassAndState:(id *)arg1;	// IMP=0x00000001000d32a0
- (_Bool)deleteKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00000001000d324c
- (_Bool)loadKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00000001000d31f8
- (_Bool)saveKeyMaterialToKeychain:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000001000d3194
- (_Bool)saveKeyMaterialToKeychain:(id *)arg1;	// IMP=0x00000001000d313c
- (id)decryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d3090
- (id)encryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d2fe4
- (id)unwrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d2f5c
- (id)wrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d2ed4
- (_Bool)trySelfWrappedKeyCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d2e54
- (_Bool)tlkMaterialPresentOrRecoverableViaTLKShare:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d2998
- (_Bool)validTLK:(id *)arg1;	// IMP=0x00000001000d27e0
- (_Bool)unwrapViaTLKSharesTrustedBy:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d230c
- (id)unwrapViaKeyHierarchy:(id *)arg1;	// IMP=0x00000001000d1fd4
- (id)ensureKeyLoaded:(id *)arg1;	// IMP=0x00000001000d1d8c
- (id)topKeyInAnyState:(id *)arg1;	// IMP=0x00000001000d1a84
- (_Bool)wrapUnder:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000d19e0
- (_Bool)wrapsSelf;	// IMP=0x00000001000d1994
@property(readonly) CKKSAESSIVKey *aessivkey;
@property(copy) CKKSWrappedAESSIVKey *wrappedkey;
@property(copy) NSString<SecCKKSKeyClass> *keyclass;
@property(retain) NSString *parentKeyUUID;
@property(retain) NSString *uuid;
@property(readonly) NSString *zoneName;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000001000d14e8
- (void)dealloc;	// IMP=0x00000001000d14b4
- (id)initWithKeyCore:(id)arg1;	// IMP=0x00000001000d13e0
- (id)initWithWrappedAESKey:(id)arg1 uuid:(id)arg2 parentKeyUUID:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00000001000d1264
- (id)initWrappedBy:(id)arg1 AESKey:(id)arg2 uuid:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00000001000d1098
- (id)initSelfWrappedWithAESKey:(id)arg1 uuid:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7;	// IMP=0x00000001000d0f1c
- (id)init;	// IMP=0x00000001000d0ee8

@end

